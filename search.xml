<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ubuntu安装配置指南</title>
      <link href="/post/d5b10a94.html"/>
      <url>/post/d5b10a94.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="ubuntu简介"><a href="#ubuntu简介" class="headerlink" title="ubuntu简介"></a>ubuntu简介</h2><p>​<code>Ubuntu</code>是一个以桌面应用为主的<strong>Linux发行版</strong>操作系统，其名称来自非洲南部祖鲁语或豪萨语的”ubuntu“一词，意思是“人性”“我的存在是因为大家的存在”，是非洲传统的一种价值观。Ubuntu基于<strong>Debian发行版</strong>和<strong>GNOME桌面环境</strong>，而从11.04版起，Ubuntu发行版放弃了GNOME桌面环境，改为<strong>Unity</strong>。此前人们认为Linux难以安装、难以使用，在Ubuntu出现后这些都成为了历史。Ubuntu也拥有庞大的社区力量，用户可以方便地从社区获得帮助。自Ubuntu 18.04 LTS起，Ubuntu发行版重新开始使用GNOME3桌面环境。</p><h1 id="通用必备配置"><a href="#通用必备配置" class="headerlink" title="通用必备配置"></a>通用必备配置</h1><h2 id="更换软件源"><a href="#更换软件源" class="headerlink" title="更换软件源"></a>更换软件源</h2><h3 id="备份list文件"><a href="#备份list文件" class="headerlink" title="备份list文件"></a>备份list文件</h3><p>失败了也可以回溯</p><pre><code class="highlight bash"><span class="built_in">cd</span> /etc/apt/<span class="built_in">sudo</span> <span class="built_in">cp</span> sources.list sources.list.bak</code></pre><h3 id="更改list文件"><a href="#更改list文件" class="headerlink" title="更改list文件"></a>更改list文件</h3><pre><code class="highlight bash"><span class="built_in">sudo</span> vi /etc/apt/sources.list</code></pre><p>替换其中内容，更换为阿里源</p><pre><code class="highlight ini">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</code></pre><h3 id="更新软件列表"><a href="#更新软件列表" class="headerlink" title="更新软件列表"></a>更新软件列表</h3><pre><code class="highlight bash"><span class="built_in">sudo</span> apt update 或 <span class="built_in">sudo</span> apt-get update<span class="comment"># 更新软件列表</span><span class="built_in">sudo</span> apt upgrade 或 <span class="built_in">sudo</span> apt upgrade<span class="comment"># 更新软件</span></code></pre><h2 id="更改root密码"><a href="#更改root密码" class="headerlink" title="更改root密码"></a>更改root密码</h2><pre><code class="highlight bash"><span class="built_in">sudo</span> passwd root</code></pre><p>跟随指引操作即可</p><h2 id="构建工具安装"><a href="#构建工具安装" class="headerlink" title="构建工具安装"></a>构建工具安装</h2><p>安装gcc、g++、make等</p><pre><code class="highlight bash"><span class="built_in">sudo</span> apt install build-essential</code></pre><h2 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h2><p>常用于拉取github上的一些工具</p><pre><code class="highlight bash"><span class="built_in">sudo</span> apt install gitgit --version  <span class="comment"># 查看版本号</span></code></pre><h2 id="vim安装"><a href="#vim安装" class="headerlink" title="vim安装"></a>vim安装</h2><p>常用文本编辑器</p><pre><code class="highlight bash"><span class="built_in">sudo</span> apt install vimvim -v  <span class="comment"># 查看版本号</span></code></pre><h2 id="安装glibc-doc"><a href="#安装glibc-doc" class="headerlink" title="安装glibc-doc"></a>安装glibc-doc</h2><p>GNU C Library (glibc) 的文档</p><pre><code class="highlight bash"><span class="built_in">sudo</span> apt install glibc-doc</code></pre><h2 id="安装python2及pip2"><a href="#安装python2及pip2" class="headerlink" title="安装python2及pip2"></a>安装python2及pip2</h2><p>一些python脚本需要在python2环境下运行</p><h3 id="安装python2"><a href="#安装python2" class="headerlink" title="安装python2"></a>安装python2</h3><pre><code class="highlight bash"><span class="built_in">sudo</span> apt install python2python2 --version <span class="comment"># 查看版本号</span></code></pre><h3 id="安装pip2"><a href="#安装pip2" class="headerlink" title="安装pip2"></a>安装pip2</h3><pre><code class="highlight bash">curl https://bootstrap.pypa.io/pip/&lt;你的python2版本，例如2.7&gt;/get-pip.py --output get-pip.py <span class="comment"># 下载安装文件</span><span class="built_in">sudo</span> python2 get-pip.py <span class="comment"># 安装pip2</span>pip2 --version <span class="comment"># 查看版本号</span><span class="built_in">rm</span> get-pip.py <span class="comment"># 安装完成后删除get-pip.py</span></code></pre><h2 id="安装pip3"><a href="#安装pip3" class="headerlink" title="安装pip3"></a>安装pip3</h2><p>常用python版本，一般自带了python3</p><pre><code class="highlight bash"><span class="built_in">sudo</span> apt install python3-pippip --version 或 pip3 --version <span class="comment"># 查看版本号</span></code></pre><h2 id="pip换源-清华源"><a href="#pip换源-清华源" class="headerlink" title="pip换源(清华源)"></a>pip换源(清华源)</h2><pre><code class="highlight bash"><span class="built_in">mkdir</span> ~/.pip 或 <span class="built_in">mkdir</span> -p ~/.config/pip<span class="built_in">cd</span> ~/.pip 或 <span class="built_in">cd</span> ~/.config/pipvim pip.conf</code></pre><p>修改pip.conf的内容为</p><pre><code class="highlight bash">[global] index-url=https://pypi.tuna.tsinghua.edu.cn/simple <span class="built_in">timeout</span> = 6000 [install] trusted-host=pypi.tuna.tsinghua.edu.cn disable-pip-version-check = <span class="literal">true</span></code></pre><p>其他源</p><pre><code class="highlight ini">https://pypi.douban.com/  <span class="comment"># 豆瓣</span>https://pypi.hustunique.com/  <span class="comment">#  华中理工大学</span>https://pypi.sdutlinux.org/  <span class="comment"># 山东理工大学</span>https://pypi.mirrors.ustc.edu.cn/  <span class="comment">#中国科学技术大学</span>https://mirrors.aliyun.com/pypi/simple/  阿里云https://pypi.tuna.tsinghua.edu.cn/simple/  清华大学</code></pre><h1 id="其他软件安装"><a href="#其他软件安装" class="headerlink" title="其他软件安装"></a>其他软件安装</h1><h2 id="安装fd"><a href="#安装fd" class="headerlink" title="安装fd"></a>安装fd</h2><p>​项目地址<a href="https://github.com/cha0ran/fd-zh">cha0ran&#x2F;fd-zh: fd Chinese document</a></p><p>​<code>fd</code> 是一个在你文件系统中查找条目的程序。它是一个简单、快速、友好的 <a href="https://www.gnu.org/software/findutils/"><code>find</code></a> 替代品。</p><p>​在ubuntu19.04及更新版本安装：</p><pre><code class="highlight bash">apt install fd-find  <span class="comment"># 安装</span>vim /root/.bashrc<span class="comment"># 在最后添加一行alias fd=&#x27;fdfind&#x27;</span><span class="built_in">source</span> /root/.bashrc <span class="comment"># 刷新</span>fd -h <span class="comment"># 检查</span></code></pre><p>​</p><h2 id="安装anaconda"><a href="#安装anaconda" class="headerlink" title="安装anaconda"></a>安装anaconda</h2><p>多环境切换工具</p><h3 id="查找并安装所需版本"><a href="#查找并安装所需版本" class="headerlink" title="查找并安装所需版本"></a>查找并安装所需版本</h3><p>在<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/?C=M&O=A">清华大学开源软件镜像站 </a>中查找符合自己版本的anaconda</p><p>这里选择<code>https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2024.06-1-Linux-x86_64.sh</code>这个版本，安装其他版本替换相应链接即可</p><pre><code class="highlight bash">wget --user-agent=“Mozilla” + https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2024.06-1-Linux-x86_64.sh  <span class="comment"># 下载</span>bash Anaconda3-2024.06-1-Linux-x86_64.sh  <span class="comment"># 跟随提示安装</span>vim /etc/profile <span class="comment"># 添加环境变量 export PATH=~/anaconda3/bin:$PATH (具体路径以自身安装位置位置)</span>vim ~/.bashrc <span class="comment"># 添加环境变量 export PATH=~/anaconda3/bin:$PATH (具体路径以自身安装位置位置)</span><span class="built_in">source</span> /etc/profile<span class="built_in">source</span> ~/.bashrc  <span class="comment"># 更新环境变量</span>conda -V  <span class="comment"># 查看版本号</span><span class="built_in">rm</span> Anaconda3-2024.06-1-Linux-x86_64.sh  <span class="comment"># 安装完成后清除安装文件</span></code></pre><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><pre><code class="highlight bash"><span class="comment"># 清华源</span>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forgeconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/conda config --<span class="built_in">set</span> show_channel_urls <span class="built_in">yes</span><span class="comment"># 中科大源</span>conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/conda config --<span class="built_in">set</span> show_channel_urls <span class="built_in">yes</span>conda config --remove-key channels  <span class="comment"># 恢复默认源</span>conda config --show  <span class="comment"># 查看源</span></code></pre><p>conda常用命令</p><pre><code class="highlight bash">conda update -n base -c defaults conda  <span class="comment"># 如果版本不是最新，可用此命令更新</span>conda create -n &lt;虚拟环境名称&gt; python=&lt;X.X(3.6、3.7等)&gt;  <span class="comment"># 创建虚拟环境</span><span class="built_in">source</span> activate &lt;虚拟环境名称&gt;  <span class="comment"># 激活虚拟环境</span><span class="built_in">source</span> deactivate &lt;虚拟环境名称&gt;  <span class="comment"># 退出虚拟环境</span>conda remove -n &lt;虚拟环境名称&gt; --all  <span class="comment"># 删除虚拟环境</span>conda list  <span class="comment"># 查看安装了哪些包</span>conda install &lt;包名&gt;  <span class="comment"># 安装包</span>conda install scrapy==1.3 <span class="comment"># 安装指定版本的包</span>conda install -n &lt;环境名&gt; &lt;包名&gt; <span class="comment"># 在conda指定的某个环境中安装包</span>conda <span class="built_in">env</span> list 或 conda info -e 或   <span class="comment"># 查看当前存在哪些虚拟环境</span>conda update conda  <span class="comment"># 检查更新当前conda</span>conda update anaconda  <span class="comment"># 更新anaconda</span>conda update --all  <span class="comment"># 更新所有库</span>conda update python  <span class="comment"># 更新python</span></code></pre><h2 id="xrdp安装"><a href="#xrdp安装" class="headerlink" title="xrdp安装"></a>xrdp安装</h2><p>​微软的远程桌面协议（RDP） 是一个允许从一台计算机到另一台计算机进行图形化远程桌面连接的协议。RDP 的工作原理是让一台主机运行软件，允许其他几台计算机连接到它。</p><p>​XRDP是 RDP 的一个开源实现，不需要运行任何专有程序。XRDP 不仅试图遵循 RDP，而且还与常规的 RDP 客户端兼容，如Remmina和GNOME Boxes。</p><pre><code class="highlight bash"><span class="comment"># 安装</span><span class="built_in">sudo</span> apt install xrdp<span class="comment"># 命令行启动</span><span class="built_in">sudo</span> systemctl set-default multi-user.target<span class="comment"># 图形化界面启动</span><span class="built_in">sudo</span> systemctl set-default graphical.target<span class="comment"># 设置开机自启</span><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> xrdp<span class="comment"># 启动与关闭</span><span class="built_in">sudo</span> systemctl start xrdp<span class="built_in">sudo</span> systemctl stop xrdp<span class="comment"># 避免ssl证书无法验证，将xrdp用户加入ssl-cert用户组</span><span class="built_in">sudo</span> adduser xrdp ssl-cert<span class="comment"># 修改配置后记得重启</span>reboot</code></pre><p>​安装远程连接xrdp的客户端（二选一即可）</p><pre><code class="highlight bash"><span class="built_in">sudo</span> apt install gnome-boxes<span class="built_in">sudo</span> apt install remmina</code></pre><h2 id="Nodejs及npm安装"><a href="#Nodejs及npm安装" class="headerlink" title="Nodejs及npm安装"></a>Nodejs及npm安装</h2><pre><code class="highlight bash"><span class="comment"># 如果已经安装过Nodejs和npm，为了避免可能出现的问题，建议先卸载原有的</span><span class="built_in">sudo</span> apt-get remove --purge npm<span class="built_in">sudo</span> apt-get remove --purge nodejs<span class="built_in">sudo</span> apt-get remove --purge nodejs-legacy<span class="built_in">sudo</span> apt-get autoremove<span class="built_in">rm</span> -r /usr/local/bin/npm<span class="built_in">rm</span> -r /usr/local/lib/node-moudelsfind / -name npm<span class="built_in">rm</span> -r /tmp/npm*<span class="comment"># 更新源</span><span class="built_in">sudo</span> apt-get update<span class="comment"># Nodejs安装</span><span class="built_in">sudo</span> apt-get install nodejs<span class="built_in">sudo</span> apt-get install nodejs-legacy<span class="comment"># npm安装</span><span class="built_in">sudo</span> apt-get install npm<span class="comment"># 更新npm包的源</span><span class="built_in">sudo</span> npm config <span class="built_in">set</span> registry https://registry.npmmirror.com<span class="built_in">sudo</span> npm config list<span class="comment"># 全局安装n管理器，管理Nodejs版本</span><span class="built_in">sudo</span> npm install -g n<span class="comment"># 安装最新版本Nodejs</span><span class="built_in">sudo</span> n stable<span class="comment"># 版本检测</span><span class="built_in">sudo</span> node -v<span class="built_in">sudo</span> npm -v</code></pre><h2 id="更换python版本"><a href="#更换python版本" class="headerlink" title="更换python版本"></a>更换python版本</h2><p>​有时，系统自带的python版本不符合我们的需要，那么就需要我们自己再重新安装和配置python版本</p><p>​以安装python3.10.4为例</p><h3 id="安装python3-10"><a href="#安装python3-10" class="headerlink" title="安装python3.10"></a>安装python3.10</h3><pre><code class="highlight bash"><span class="comment"># 直接通过apt-get安装</span><span class="built_in">sudo</span> apt-get install python3.10</code></pre><h4 id="从官网下载自行安装"><a href="#从官网下载自行安装" class="headerlink" title="从官网下载自行安装"></a>从官网下载自行安装</h4><pre><code class="highlight bash"><span class="comment"># 安装依赖</span><span class="built_in">sudo</span> apt update<span class="built_in">sudo</span> apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev<span class="comment"># 从官网下载源文件并解压安装</span><span class="built_in">cd</span> /home<span class="built_in">sudo</span> wget https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tgz<span class="built_in">sudo</span> tar -zvxf Python-3.10.4.tgz<span class="built_in">cd</span> Python-3.10.4/./configure --enable-optimizations  make<span class="built_in">sudo</span> make install  <span class="comment"># 不成功则改用sudo make altinstall</span>python3.10 --version  <span class="comment"># 验证是否安装成功，出现版本号则安装成功</span></code></pre><h3 id="更新python默认指向"><a href="#更新python默认指向" class="headerlink" title="更新python默认指向"></a>更新python默认指向</h3><h4 id="修改软链接指向"><a href="#修改软链接指向" class="headerlink" title="修改软链接指向"></a>修改软链接指向</h4><pre><code class="highlight bash"><span class="comment"># 找到并删除原有软链接</span><span class="built_in">which</span> python  <span class="comment"># which命令找到的路径就是原有软链接路径，没有找到说明不存在，可忽略下一条命令</span><span class="built_in">sudo</span> <span class="built_in">rm</span> /usr/bin/python<span class="comment"># 找到python3.10的安装路径</span><span class="built_in">which</span> python3.10 <span class="comment"># 我的在/usr/local/bin/python3.10路径</span><span class="comment"># 重新建立软链接</span><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /usr/local/bin/python3.10 /usr/bin/python</code></pre><p>现在使用<code>python</code>命令显示的就是python3.10.4了</p><h4 id="设置python的环境变量"><a href="#设置python的环境变量" class="headerlink" title="设置python的环境变量"></a>设置python的环境变量</h4><h5 id="编辑-bashrc文件"><a href="#编辑-bashrc文件" class="headerlink" title="编辑.bashrc文件"></a>编辑.bashrc文件</h5><pre><code class="highlight bash"><span class="built_in">sudo</span> vim  ~/.bashrc</code></pre><p>找到</p><pre><code class="highlight bash"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -alF&#x27;</span><span class="built_in">alias</span> la=<span class="string">&#x27;ls -A&#x27;</span><span class="built_in">alias</span> l=<span class="string">&#x27;ls -CF&#x27;</span></code></pre><p>修改为</p><pre><code class="highlight bash"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -alF&#x27;</span><span class="built_in">alias</span> la=<span class="string">&#x27;ls -A&#x27;</span><span class="built_in">alias</span> l=<span class="string">&#x27;ls -CF&#x27;</span><span class="built_in">alias</span> python=<span class="string">&#x27;/usr/local/bin/python3.10&#x27;</span></code></pre><p>其中新添加内容的引号中部分换成自己的python安装路径</p><p>最后按下<code>esc</code>，然后依次输入<code>:wq</code>回车即可</p><pre><code class="highlight bash"><span class="comment"># 更新环境变量</span><span class="built_in">source</span> ~/.bashrc</code></pre><h3 id="更新pip默认指向"><a href="#更新pip默认指向" class="headerlink" title="更新pip默认指向"></a>更新pip默认指向</h3><h4 id="修改软链接指向-1"><a href="#修改软链接指向-1" class="headerlink" title="修改软链接指向"></a>修改软链接指向</h4><pre><code class="highlight bash"><span class="comment"># 找到并删除原有软链接</span><span class="built_in">which</span> pip<span class="built_in">sudo</span> <span class="built_in">rm</span> /usr/local/bin/pip<span class="comment"># 重新建立软链接</span><span class="comment"># pip路径与python路径一致，上文中python路径在/usr/local/bin/python3.10，那么pip路径在/usr/local/bin/pip3.10</span><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /usr/local/bin/pip3.10 /usr/local/bin/pip</code></pre><p>现在使用pip命令指向的就是python3.10的pip了</p><h1 id="PWN环境配置"><a href="#PWN环境配置" class="headerlink" title="PWN环境配置"></a>PWN环境配置</h1><h2 id="gdb-multiarch"><a href="#gdb-multiarch" class="headerlink" title="gdb-multiarch"></a>gdb-multiarch</h2><pre><code class="highlight bash"><span class="built_in">sudo</span> apt-get install gdb-multiarchgdb-multiarch -v  <span class="comment"># 查看版本号</span></code></pre><h2 id="pwntools"><a href="#pwntools" class="headerlink" title="pwntools"></a>pwntools</h2><p>主要的攻击武器，本质是一个python库</p><pre><code class="highlight bash">pip install pwntools</code></pre><h2 id="LibcSearcher"><a href="#LibcSearcher" class="headerlink" title="LibcSearcher"></a>LibcSearcher</h2><pre><code class="highlight bash">git <span class="built_in">clone</span> https://github.com/lieanu/LibcSearcher.gitpython ./LibcSearcher/setup.py develop</code></pre><h2 id="pwndbg"><a href="#pwndbg" class="headerlink" title="pwndbg"></a>pwndbg</h2><p>动态调试</p><p>如果还未安装gdb，请先安装gdb</p><pre><code class="highlight bash"><span class="built_in">sudo</span> apt install gdb</code></pre><p>随后执行</p><pre><code class="highlight bash">git <span class="built_in">clone</span> https://github.com/pwndbg/pwndbg./pwndbg/setup.sh</code></pre><h3 id="checksec"><a href="#checksec" class="headerlink" title="checksec"></a>checksec</h3><p>检查二进制文件的受保护状态</p><pre><code class="highlight bash">git <span class="built_in">clone</span> https://github.com/slimm609/checksec.sh.git<span class="built_in">sudo</span> <span class="built_in">cp</span> ./checksec.sh/checksec /usr/local/bin/checksec  <span class="comment"># 添加为shell命令</span><span class="built_in">rm</span> checksec.sh  <span class="comment"># 清除多余文件</span></code></pre><h3 id="ROPgadget"><a href="#ROPgadget" class="headerlink" title="ROPgadget"></a>ROPgadget</h3><h3 id="One-gadget"><a href="#One-gadget" class="headerlink" title="One_gadget"></a>One_gadget</h3><pre><code class="highlight bash"><span class="built_in">sudo</span> apt install ruby<span class="built_in">sudo</span> apt install gemgem install one_gadget</code></pre><h3 id="main-arena-offset"><a href="#main-arena-offset" class="headerlink" title="main_arena_offset"></a>main_arena_offset</h3><pre><code class="highlight bash">git <span class="built_in">clone</span> https://github.com/bash-c/main_arena_offset</code></pre><h3 id="seccomp-tools"><a href="#seccomp-tools" class="headerlink" title="seccomp-tools"></a>seccomp-tools</h3><pre><code class="highlight bash"><span class="built_in">sudo</span> apt install gcc ruby-dev<span class="built_in">sudo</span> gem install seccomp-tools</code></pre><h1 id="可能出现的问题及解决方案"><a href="#可能出现的问题及解决方案" class="headerlink" title="可能出现的问题及解决方案"></a>可能出现的问题及解决方案</h1><h2 id="使用apt更新或安装软件时，提示“由于没有公钥，无法验证下列签名”"><a href="#使用apt更新或安装软件时，提示“由于没有公钥，无法验证下列签名”" class="headerlink" title="使用apt更新或安装软件时，提示“由于没有公钥，无法验证下列签名”"></a>使用apt更新或安装软件时，提示“由于没有公钥，无法验证下列签名”</h2><p>​例如这样的情况</p><pre><code class="highlight plaintext">W: GPG 错误：https://download.docker.com/linux/ubuntu focal InRelease: 由于没有公钥，无法验证下列签名： NO_PUBKEY 7EA0A9C3F273FCD8E: 仓库 “https://download.docker.com/linux/ubuntu focal InRelease” 没有数字签名。</code></pre><p>​执行以下命令即可</p><pre><code class="highlight bash"><span class="built_in">sudo</span> apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7EA0A9C3F273FCD8</code></pre><p>​注意最后的<code>7EA0A9C3F273FCD8</code>需要根据你的报错提示中给出的<code>NO_PUBKEY</code>进行替换</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QQBot用户使用手册V1.0</title>
      <link href="/post/3dd951cb.html"/>
      <url>/post/3dd951cb.html</url>
      
        <content type="html"><![CDATA[<h2 id="基础说明"><a href="#基础说明" class="headerlink" title="基础说明"></a>基础说明</h2><p>​- By BR</p><p>​本项目基于NapCat+python3.10，是在<a href="https://github.com/MoXueYao/QQBot">QQBot</a>基础上的二次开发，存在个人魔改部分，可在Window及Linux上部署</p><p>​@信息，命令信息，文本信息等，每个信息之间是以一个空格分隔的</p><p>​普通用户权限为1，管理员权限为2，超级管理员权限为3</p><p>​作用范围：friend(仅私聊)，group(仅群聊)，public(私聊与群聊均可)</p><h2 id="命令目录"><a href="#命令目录" class="headerlink" title="命令目录"></a>命令目录</h2><h3 id="help"><a href="#help" class="headerlink" title="&#x2F;help"></a>&#x2F;help</h3><ul><li><p>来源：系统命令</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/help</code></p></li><li><p>作用：查看当前环境下的命令目录</p></li></ul><h3 id="reload"><a href="#reload" class="headerlink" title="&#x2F;reload"></a>&#x2F;reload</h3><ul><li><p>来源：系统命令</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：3</p></li><li><p>用法：<code>/reload</code></p></li><li><p>作用：重载所有插件</p></li></ul><h3 id="点赞"><a href="#点赞" class="headerlink" title="&#x2F;点赞"></a>&#x2F;点赞</h3><ul><li><p>来源：QQ_like插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/点赞 [subcommand] [arguments]</code></p></li><li><p>参数：</p><pre><code class="highlight plaintext">subcommand:    set &lt;status&gt;          设置插件状态，&quot;True,true,1&quot;表示启用，&quot;False,fasle,0&quot;表示禁用    add &lt;QQ_id&gt;           添加待点赞QQ号    del &lt;QQ_id&gt;           删除待点赞QQ号</code></pre></li><li><p>作用：明天晚上12点整为列表用户的名片点赞</p></li></ul><h3 id="比赛监听"><a href="#比赛监听" class="headerlink" title="&#x2F;比赛监听"></a>&#x2F;比赛监听</h3><ul><li><p>来源：match_monitoring插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/比赛监听 [subcommand] [arguments]</code></p></li><li><p>参数：</p><pre><code class="highlight plaintext">subcommand:    set &lt;status&gt;          设置插件状态，&quot;True,true,1&quot;表示启用，&quot;False,fasle,0&quot;表示禁用    add &lt;QQ_group_id&gt;     添加通报群聊QQ号    del &lt;QQ_group_id&gt;     删除通报群聊QQ号</code></pre></li><li><p>作用：监听GZCTF平台比赛实况，包括一血二血三血，题目上新，新增公告等的提示</p></li></ul><h3 id="查询比赛"><a href="#查询比赛" class="headerlink" title="&#x2F;查询比赛"></a>&#x2F;查询比赛</h3><ul><li><p>来源：get_match插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/查询比赛 [arguments]</code></p></li><li><p>参数：</p><pre><code class="highlight plaintext">arguments表示指定页码，默认为1</code></pre></li><li><p>作用：查询近期国内网安类比赛，消息来源：<a href="https://github.com/ProbiusOfficial/Hello-CTFtime">ProbiusOfficial&#x2F;Hello-CTFtime: 【Hello CTF】国内外赛事聚合 (github.com)</a></p></li></ul><h3 id="查询国外比赛"><a href="#查询国外比赛" class="headerlink" title="&#x2F;查询国外比赛"></a>&#x2F;查询国外比赛</h3><ul><li><p>来源：get_match插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/查询国外比赛 [arguments]</code></p></li><li><p>参数：</p><pre><code class="highlight plaintext">arguments表示指定页码，默认为1</code></pre></li><li><p>作用：查询近期国内网安类比赛，消息来源：<a href="https://github.com/ProbiusOfficial/Hello-CTFtime">ProbiusOfficial&#x2F;Hello-CTFtime: 【Hello CTF】国内外赛事聚合 (github.com)</a></p></li></ul><h3 id="响应群聊"><a href="#响应群聊" class="headerlink" title="&#x2F;响应群聊"></a>&#x2F;响应群聊</h3><ul><li><p>来源：just_group插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/响应群聊 [subcommand] [arguments]</code></p></li><li><p>参数：</p><pre><code class="highlight plaintext">subcommand:    set &lt;status&gt;          设置插件状态，&quot;True,true,1&quot;表示启用，&quot;False,fasle,0&quot;表示禁用    add &lt;QQ_group_id&gt;     添加允许响应群聊    del &lt;QQ_group_id&gt;     删除允许响应群聊</code></pre></li><li><p>作用：限制Bot能够响应的群聊，在允许响应群聊外的群聊，Bot将会无视其信息</p></li></ul><h3 id="ai"><a href="#ai" class="headerlink" title="&#x2F;ai"></a>&#x2F;ai</h3><ul><li><p>来源：tongyi插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/ai [subcommand]</code></p></li><li><p>参数：</p><pre><code class="highlight plaintext">subcommand:    cls          清除发出信息的用户与ai的聊天记录</code></pre></li><li><p>作用：用户层对于ai的管理</p></li></ul><h3 id="ai管理"><a href="#ai管理" class="headerlink" title="&#x2F;ai管理"></a>&#x2F;ai管理</h3><ul><li><p>来源：tongyi插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/ai管理 [subcommand] [arguments]</code></p></li><li><p>参数：</p><pre><code class="highlight plaintext">subcommand:    set &lt;status&gt;          设置插件状态，&quot;True,true,1&quot;表示启用，&quot;False,fasle,0&quot;表示禁用    add &lt;QQ_id&gt;       添加黑名单用户    del &lt;QQ_id&gt;       删除黑名单用户    cls [QQ_id]  清除指定用户与ai的聊天记录(保留预设),未传入QQ_id参数则全清除    ccls [QQ_id]  清除指定用户与ai的聊天记录(不保留预设),未传入QQ_id参数则全清除    preset [set &lt;preset_id&gt;]设置当前预设，若未传入set命令，则展示当前使用预设及可选预设    show将当前存在会话的对话信息保存并以md文档发送给发出命令者</code></pre></li><li><p>作用：管理层对于ai的管理</p></li></ul><h3 id="关于"><a href="#关于" class="headerlink" title="&#x2F;关于"></a>&#x2F;关于</h3><ul><li><p>来源：about插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/关于</code></p></li><li><p>作用：展示Bot基本信息</p></li></ul><h3 id="夸夸"><a href="#夸夸" class="headerlink" title="&#x2F;夸夸"></a>&#x2F;夸夸</h3><ul><li><p>来源：praise插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/夸夸 [argumnets]</code></p></li><li><p>参数：</p><pre><code class="highlight plaintext">arguments表示对谁使用夸夸，如果不存在该参数，默认对使用命令者使用夸夸</code></pre></li><li><p>作用：从词库中随机抽取夸奖文案并回复</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/4a17b156.html"/>
      <url>/post/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="highlight bash">$ hexo new <span class="string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="highlight bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="highlight bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="highlight bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><pre><code class="highlight python"><span class="keyword">import</span> requests<span class="built_in">print</span>(<span class="string">&quot;hello,world&quot;</span>)</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>KaliLinux安装配置指南</title>
      <link href="/post/461f56d.html"/>
      <url>/post/461f56d.html</url>
      
        <content type="html"><![CDATA[<h1 id="KaliLinux安装"><a href="#KaliLinux安装" class="headerlink" title="KaliLinux安装"></a>KaliLinux安装</h1><p>​持续更新中~</p><h1 id="KaliLinux配置"><a href="#KaliLinux配置" class="headerlink" title="KaliLinux配置"></a>KaliLinux配置</h1><h2 id="更换国内软件源"><a href="#更换国内软件源" class="headerlink" title="更换国内软件源"></a>更换国内软件源</h2><p>​kali默认软件源安装可比较慢，推荐配置国内源提高速度</p><ol><li><code>su root</code> 进入root 模式</li><li><code>vim /etc/apt/sources.list</code> 编辑软件源配置文件</li><li>按 i 进入 vim 的编辑模式，用#将deb一行的内容注释掉，然后换成国内源地址</li><li>软件源(选择一个即可)</li></ol><pre><code class="highlight plaintext">官方源(国内较慢)deb http://http.kali.org/kali kali-rolling main non-free contribdeb-src http://http.kali.org/kali kali-rolling main non-free contrib中科大源deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contribdeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib阿里云源deb http://mirrors.aliyun.com/kali kali-rolling main non-free contribdeb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib清华大学源deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-freedeb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free浙大源deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-freedeb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free东软大学源deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contribdeb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib新加坡kali源(国内较慢)deb http://mirror.nus.edu.sg/kali/kali/ kali main non-free contribdeb-src http://mirror.nus.edu.sg/kali/kali/ kali main non-free contrib163 Kali源deb http://mirrors.163.com/debian wheezy main non-free contribdeb-src http://mirrors.163.com/debian wheezy main non-free contrib</code></pre><ol start="5"><li>Esc，然后输入 wq 保存退出即可</li><li>使用<code>apt-get update</code>更新索引</li><li>使用<code>apt-get upgrade</code>更新软件</li></ol><h2 id="pip换源-清华源"><a href="#pip换源-清华源" class="headerlink" title="pip换源(清华源)"></a>pip换源(清华源)</h2><pre><code class="highlight shell">mkdir ~/.pip 或 mkdir -p ~/.config/pipcd ~/.pip 或 cd ~/.config/pipvim pip.conf</code></pre><p>修改pip.conf的内容为</p><pre><code class="highlight shell">[global] index-url=https://pypi.tuna.tsinghua.edu.cn/simple timeout = 6000 [install] trusted-host=pypi.tuna.tsinghua.edu.cn disable-pip-version-check = true</code></pre><p>其他源</p><pre><code class="highlight plaintext">https://pypi.douban.com/  # 豆瓣https://pypi.hustunique.com/  #  华中理工大学https://pypi.sdutlinux.org/  # 山东理工大学https://pypi.mirrors.ustc.edu.cn/  #中国科学技术大学https://mirrors.aliyun.com/pypi/simple/  阿里云https://pypi.tuna.tsinghua.edu.cn/simple/  清华大学</code></pre><h2 id="Bash开启网络重定向选项"><a href="#Bash开启网络重定向选项" class="headerlink" title="Bash开启网络重定向选项"></a>Bash开启网络重定向选项</h2><p>​kalilinux预装的bash可能未开启bash的网络重定向功能，<code>-e</code>不能使用，反弹shell时也会提示<code>/dev/tcp</code>不存在，就没法利用bash反弹shell了，为了使用bash的网络重定向功能，需要重新编译bash并加上<code>–enable-net-redirections</code></p><ol><li>查询当前使用bash版本</li></ol><pre><code class="highlight shell">bash --version</code></pre><ol start="2"><li>下载对应版本的bash</li></ol><pre><code class="highlight shell">wget https://ftp.gnu.org/gnu/bash/bash-5.1.16.tar.gz</code></pre><ol start="3"><li>解压并进入到解压后的目录</li></ol><pre><code class="highlight shell">tar zxvf bash-5.1.16.tar.gzcd bash-5.1.16</code></pre><ol start="4"><li>配置</li></ol><pre><code class="highlight shell">./configure --prefix=/usr/local/bash --enable-net-redirections</code></pre><ol start="5"><li>编译和安装</li></ol><pre><code class="highlight shell">makesudo make install</code></pre><ol start="6"><li>更换使用的shell并重启</li></ol><pre><code class="highlight shell">sudo echo &quot;/usr/local/bash/bin/bash&quot; &gt;&gt; /etc/shellssudo chsh -s /usr/local/bash/bin/bash  # 这一步如果失败就手动修改/etc/passwd中的shell路径sudo reboot</code></pre><h1 id="其他软件的安装"><a href="#其他软件的安装" class="headerlink" title="其他软件的安装"></a>其他软件的安装</h1><h2 id="xrdp"><a href="#xrdp" class="headerlink" title="xrdp"></a>xrdp</h2><p>​官方给出的xrdp配置脚本</p><pre><code class="highlight shell"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span>echo &quot;[i] Updating and upgrading Kali (this will take a while)&quot;apt-get updateapt-get dist-upgrade -yecho &quot;[i] Installing Xfce4 &amp; xrdp (this will take a while as well)&quot;apt-get install -y kali-desktop-xfce xorg xrdpecho &quot;[i] Configuring xrdp to listen to port 3390 (but not starting the service)&quot;sed -i &#x27;s/port=3389/port=3390/g&#x27; /etc/xrdp/xrdp.ini</code></pre><p>​将其保存为<code>xrdp-install.sh</code>文件后，执行<code>sudo bash xrdp-install.sh</code>即可</p><p>​以下为一些可能用到的命令</p><pre><code class="highlight shell"><span class="meta prompt_"># </span><span class="language-bash">命令行启动</span>sudo systemctl set-default multi-user.target<span class="meta prompt_"></span><span class="meta prompt_"># </span><span class="language-bash">图形化界面启动</span>sudo systemctl set-default graphical.target<span class="meta prompt_"></span><span class="meta prompt_"># </span><span class="language-bash">设置开机自启</span>sudo systemctl enable xrdp<span class="meta prompt_"></span><span class="meta prompt_"># </span><span class="language-bash">启动与关闭</span>sudo systemctl start xrdpsudo systemctl stop xrdp<span class="meta prompt_"></span><span class="meta prompt_"># </span><span class="language-bash">避免ssl证书无法验证，将xrdp用户加入ssl-cert用户组</span>sudo adduser xrdp ssl-cert<span class="meta prompt_"></span><span class="meta prompt_"># </span><span class="language-bash">修改配置后记得重启</span>reboot</code></pre><p>​安装远程连接xrdp的客户端（二选一即可）</p><pre><code class="highlight shell">sudo apt install gnome-boxessudo apt install remmina</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.bilibili.com/read/cv22949847/">Kali 更换国内源（全部版本通用） - 哔哩哔哩 (bilibili.com)</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
